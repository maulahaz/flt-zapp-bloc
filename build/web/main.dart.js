// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const colors = flutter_sdk.src__material__colors;
  const colors$ = flutter_sdk.src__painting__colors;
  const gradient = flutter_sdk.src__painting__gradient;
  const alignment = flutter_sdk.src__painting__alignment;
  const input_border = flutter_sdk.src__material__input_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const borders = flutter_sdk.src__painting__borders;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const text_style = flutter_sdk.src__painting__text_style;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const theme_data = flutter_sdk.src__material__theme_data;
  const media_query = flutter_sdk.src__widgets__media_query;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const assertions = flutter_sdk.src__foundation__assertions;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const material_button = flutter_sdk.src__material__material_button;
  const box_border = flutter_sdk.src__painting__box_border;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const equality = flutter_sdk.src__equality;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var x_configs = Object.create(dart.library);
  var x_dashboards = Object.create(dart.library);
  var colors$0 = Object.create(dart.library);
  var constants = Object.create(dart.library);
  var durations = Object.create(dart.library);
  var keys = Object.create(dart.library);
  var sizes = Object.create(dart.library);
  var styles = Object.create(dart.library);
  var themes = Object.create(dart.library);
  var grocery_bloc = Object.create(dart.library);
  var grocery_mdl = Object.create(dart.library);
  var dashboard_pg = Object.create(dart.library);
  var flutter_bloc = Object.create(dart.library);
  var x_configs$ = Object.create(dart.library);
  var x_dashboards$ = Object.create(dart.library);
  var x_widgets = Object.create(dart.library);
  var bloc = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var bloc_builder = Object.create(dart.library);
  var bloc_consumer = Object.create(dart.library);
  var bloc_listener = Object.create(dart.library);
  var bloc_provider = Object.create(dart.library);
  var bloc_selector = Object.create(dart.library);
  var multi_bloc_listener = Object.create(dart.library);
  var multi_bloc_provider = Object.create(dart.library);
  var multi_repository_provider = Object.create(dart.library);
  var repository_provider = Object.create(dart.library);
  var colors$1 = Object.create(dart.library);
  var constants$ = Object.create(dart.library);
  var durations$ = Object.create(dart.library);
  var keys$ = Object.create(dart.library);
  var sizes$ = Object.create(dart.library);
  var styles$ = Object.create(dart.library);
  var themes$ = Object.create(dart.library);
  var grocery_bloc$ = Object.create(dart.library);
  var grocery_mdl$ = Object.create(dart.library);
  var dashboard_pg$ = Object.create(dart.library);
  var button_wdg = Object.create(dart.library);
  var bloc$ = Object.create(dart.library);
  var bloc_observer = Object.create(dart.library);
  var change = Object.create(dart.library);
  var cubit = Object.create(dart.library);
  var transition = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var single_child_widget = Object.create(dart.library);
  var x_helpers = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var widgets_hlp = Object.create(dart.library);
  var $toString = dartx.toString;
  var $_get = dartx._get;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $any = dartx.any;
  var $runtimeType = dartx.runtimeType;
  var $add = dartx.add;
  var $remove = dartx.remove;
  var $_equals = dartx._equals;
  var $isNotEmpty = dartx.isNotEmpty;
  var $isEmpty = dartx.isEmpty;
  var $clear = dartx.clear;
  var $hashCode = dartx.hashCode;
  var $_set = dartx._set;
  var $reversed = dartx.reversed;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    MapOfString$dynamicToGroceryModel: () => (T$.MapOfString$dynamicToGroceryModel = dart.constFn(dart.fnType(grocery_mdl.GroceryModel, [T$.MapOfString$dynamic()])))(),
    JSArrayOfStreamSubscription: () => (T$.JSArrayOfStreamSubscription = dart.constFn(_interceptors.JSArray$(async.StreamSubscription)))(),
    JSArrayOf_Handler: () => (T$.JSArrayOf_Handler = dart.constFn(_interceptors.JSArray$(bloc$._Handler)))(),
    JSArrayOf_Emitter: () => (T$.JSArrayOf_Emitter = dart.constFn(_interceptors.JSArray$(bloc$._Emitter)))(),
    _HandlerTobool: () => (T$._HandlerTobool = dart.constFn(dart.fnType(core.bool, [bloc$._Handler])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    dynamicTobool: () => (T$.dynamicTobool = dart.constFn(dart.fnType(core.bool, [dart.dynamic])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    _EmitterToFutureOfvoid: () => (T$._EmitterToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [bloc$._Emitter])))(),
    StreamSubscriptionToFutureOfvoid: () => (T$.StreamSubscriptionToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [async.StreamSubscription])))(),
    dynamicToStream: () => (T$.dynamicToStream = dart.constFn(dart.fnType(async.Stream, [dart.dynamic])))(),
    StreamAndFnToStream: () => (T$.StreamAndFnToStream = dart.constFn(dart.fnType(async.Stream, [async.Stream, T$.dynamicToStream()])))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    JSArrayOfMapOfString$dynamic: () => (T$.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T$.MapOfString$dynamic())))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    StateStreamableN: () => (T$.StateStreamableN = dart.constFn(dart.nullable(bloc$.StateStreamable)))(),
    InheritedContextOfStateStreamableN: () => (T$.InheritedContextOfStateStreamableN = dart.constFn(provider$.InheritedContext$(T$.StateStreamableN())))(),
    InheritedContextOfStateStreamableNAndStateStreamableToFn: () => (T$.InheritedContextOfStateStreamableNAndStateStreamableToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfStateStreamableN(), bloc$.StateStreamable])))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    MapOfString$dynamicToGroceryModel$1: () => (T$.MapOfString$dynamicToGroceryModel$1 = dart.constFn(dart.fnType(grocery_mdl$.GroceryModel, [T$.MapOfString$dynamic()])))(),
    JSArrayOfFutureOfvoid: () => (T$.JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(T$.FutureOfvoid())))(),
    ListOfvoid: () => (T$.ListOfvoid = dart.constFn(core.List$(dart.void)))(),
    ListOfvoidToNull: () => (T$.ListOfvoidToNull = dart.constFn(dart.fnType(core.Null, [T$.ListOfvoid()])))(),
    FutureNOfvoid: () => (T$.FutureNOfvoid = dart.constFn(dart.nullable(T$.FutureOfvoid())))(),
    VoidToFutureNOfvoid: () => (T$.VoidToFutureNOfvoid = dart.constFn(dart.fnType(T$.FutureNOfvoid(), [])))(),
    BlocOverridesN: () => (T$.BlocOverridesN = dart.constFn(dart.nullable(bloc$.BlocOverrides)))(),
    LinkedMapOfObjectN$ObjectN: () => (T$.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T$.ObjectN(), T$.ObjectN())))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    VoidToFutureOrOfvoid: () => (T$.VoidToFutureOrOfvoid = dart.constFn(dart.fnType(dart.void, [])))(),
    JSArrayOfVoidToFutureOrOfvoid: () => (T$.JSArrayOfVoidToFutureOrOfvoid = dart.constFn(_interceptors.JSArray$(T$.VoidToFutureOrOfvoid())))(),
    FutureOrNOfvoidTovoid: () => (T$.FutureOrNOfvoidTovoid = dart.constFn(dart.fnType(dart.void, [], [dart.void])))(),
    FunctionN: () => (T$.FunctionN = dart.constFn(dart.nullable(core.Function)))(),
    ZoneSpecificationN: () => (T$.ZoneSpecificationN = dart.constFn(dart.nullable(async.ZoneSpecification)))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    Fn__ToR: () => (T$.Fn__ToR = dart.constFn(dart.gFnType(R => [R, [dart.fnType(R, [])], {onError: T$.FunctionN(), zoneSpecification: T$.ZoneSpecificationN(), zoneValues: T$.MapNOfObjectN$ObjectN()}, {}], R => [T$.ObjectN()])))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364
      });
    },
    get C6() {
      return C[6] = dart.constMap(core.int, ui.Color, [50, C[7] || CT.C7, 100, C[8] || CT.C8, 200, C[9] || CT.C9, 300, C[10] || CT.C10, 400, C[11] || CT.C11, 500, C[12] || CT.C12, 600, C[13] || CT.C13, 700, C[14] || CT.C14, 800, C[15] || CT.C15, 900, C[16] || CT.C16]);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070,
        [ColorSwatch__swatch]: C[6] || CT.C6
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293457385
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291356361
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289058471
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286695300
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284922730
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282622023
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281896508
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281236786
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279983648
      });
    },
    get C18() {
      return C[18] = dart.constMap(core.int, ui.Color, [50, C[19] || CT.C19, 100, C[20] || CT.C20, 200, C[21] || CT.C21, 300, C[22] || CT.C22, 400, C[23] || CT.C23, 500, C[24] || CT.C24, 600, C[25] || CT.C25, 700, C[26] || CT.C26, 800, C[27] || CT.C27, 900, C[28] || CT.C28]);
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4283215696,
        [ColorSwatch__swatch]: C[18] || CT.C18
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293128957
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290502395
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4287679225
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284790262
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282557941
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280391411
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280191205
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279858898
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279592384
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279060385
      });
    },
    get C30() {
      return C[30] = dart.constMap(core.int, ui.Color, [50, C[31] || CT.C31, 100, C[32] || CT.C32, 200, C[33] || CT.C33, 300, C[34] || CT.C34, 400, C[35] || CT.C35, 500, C[36] || CT.C36, 600, C[37] || CT.C37, 700, C[38] || CT.C38, 800, C[39] || CT.C39, 900, C[40] || CT.C40]);
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4280391411,
        [ColorSwatch__swatch]: C[30] || CT.C30
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294966759
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294965700
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964637
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294963574
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962776
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294961979
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294826037
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294688813
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294551589
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294278935
      });
    },
    get C42() {
      return C[42] = dart.constMap(core.int, ui.Color, [50, C[43] || CT.C43, 100, C[44] || CT.C44, 200, C[45] || CT.C45, 300, C[46] || CT.C46, 400, C[47] || CT.C47, 500, C[48] || CT.C48, 600, C[49] || CT.C49, 700, C[50] || CT.C50, 800, C[51] || CT.C51, 900, C[52] || CT.C52]);
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294961979,
        [ColorSwatch__swatch]: C[42] || CT.C42
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249
      });
    },
    get C54() {
      return C[54] = dart.constMap(core.int, ui.Color, [50, C[55] || CT.C55, 100, C[56] || CT.C56, 200, C[57] || CT.C57, 300, C[58] || CT.C58, 350, C[59] || CT.C59, 400, C[60] || CT.C60, 500, C[61] || CT.C61, 600, C[62] || CT.C62, 700, C[63] || CT.C63, 800, C[64] || CT.C64, 850, C[65] || CT.C65, 900, C[66] || CT.C66]);
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374,
        [ColorSwatch__swatch]: C[54] || CT.C54
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292932337
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289912795
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286630852
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283283116
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280723098
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278228616
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278225275
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221163
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278217052
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278209856
      });
    },
    get C68() {
      return C[68] = dart.constMap(core.int, ui.Color, [50, C[69] || CT.C69, 100, C[70] || CT.C70, 200, C[71] || CT.C71, 300, C[72] || CT.C72, 400, C[73] || CT.C73, 500, C[74] || CT.C74, 600, C[75] || CT.C75, 700, C[76] || CT.C76, 800, C[77] || CT.C77, 900, C[78] || CT.C78]);
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4278228616,
        [ColorSwatch__swatch]: C[68] || CT.C68
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288860927
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291671259
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290633982
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 16756684
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 16763101
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278223271
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294835420
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294891959
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293947751
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221823
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285298045
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280854341
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292621637
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294951175
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279739064
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294507002
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281612864
      });
    },
    get C97() {
      return C[97] = dart.constList([C[67] || CT.C67, C[2] || CT.C2, C[79] || CT.C79], ui.Color);
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: ui.TileMode.prototype,
        [_Enum__name]: "clamp",
        [_Enum_index]: 0
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 1
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: -1
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[97] || CT.C97,
        [LinearGradient_tileMode]: C[98] || CT.C98,
        [LinearGradient_end]: C[99] || CT.C99,
        [LinearGradient_begin]: C[100] || CT.C100
      });
    },
    get C102() {
      return C[102] = dart.constList([C[67] || CT.C67, C[2] || CT.C2], ui.Color);
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: 0
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: gradient.LinearGradient.prototype,
        [Gradient_transform]: null,
        [Gradient_stops]: null,
        [Gradient_colors]: C[102] || CT.C102,
        [LinearGradient_tileMode]: C[98] || CT.C98,
        [LinearGradient_end]: C[103] || CT.C103,
        [LinearGradient_begin]: C[104] || CT.C104
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 15,
        [OffsetBase__dx]: 0
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 520093696
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: ui.BlurStyle.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 27,
        [Shadow_offset]: C[108] || CT.C108,
        [Shadow_color]: C[109] || CT.C109,
        [BoxShadow_blurStyle]: C[110] || CT.C110,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: 1.2,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[112] || CT.C112,
        [TextStyle_fontSize]: 21,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: bloc$._DefaultBlocObserver.prototype
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: bloc$._FlatMapStreamTransformer.prototype
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 12,
        [EdgeInsets_right]: 12,
        [EdgeInsets_top]: 12,
        [EdgeInsets_left]: 12
      });
    },
    get C116() {
      return C[116] = dart.fn(bloc_provider.BlocProvider._startListening, T$.InheritedContextOfStateStreamableNAndStateStreamableToFn());
    },
    get C117() {
      return C[117] = dart.fn(async.runZoned, T$.Fn__ToR());
    },
    get C118() {
      return C[118] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C119() {
      return C[119] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C120() {
      return C[120] = dart.constList([], core.String);
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C122() {
      return C[122] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [DeepCollectionEquality__unordered]: false,
        [DeepCollectionEquality__base]: C[124] || CT.C124
      });
    }
  }, false);
  var C = Array(125).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/configs/themes.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/bloc.dart",
    "package:bloc/src/bloc.dart",
    "file:///zapp/project/lib/modules/dashboard/controllers/grocery_bloc.dart",
    "file:///zapp/project/lib/modules/dashboard/models/grocery_mdl.dart",
    "file:///zapp/project/lib/modules/dashboard/pages/dashboard_pg.dart",
    "package:flutter_bloc/src/bloc_builder.dart",
    "package:flutter_bloc/src/bloc_consumer.dart",
    "package:nested/nested.dart",
    "package:flutter_bloc/src/bloc_listener.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_listener.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_provider.dart",
    "package:flutter_bloc/src/bloc_provider.dart",
    "package:flutter_bloc/src/bloc_selector.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "package:provider/src/provider.dart",
    "package:flutter_bloc/src/multi_bloc_listener.dart",
    "package:flutter_bloc/src/multi_bloc_provider.dart",
    "package:flutter_bloc/src/multi_repository_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/inherited_provider.dart",
    "package:flutter_bloc/src/repository_provider.dart",
    "package:flutter_app/configs/themes.dart",
    "package:flutter_app/modules/dashboard/controllers/grocery_bloc.dart",
    "package:flutter_app/modules/dashboard/models/grocery_mdl.dart",
    "package:flutter_app/modules/dashboard/pages/dashboard_pg.dart",
    "package:flutter_app/widgets/button_wdg.dart",
    "package:bloc/src/bloc_observer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/emitter.dart",
    "package:bloc/src/change.dart",
    "package:bloc/src/cubit.dart",
    "package:bloc/src/transition.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Flutter App!!", theme: themes.MyThemes.lightMode, darkTheme: themes.MyThemes.darkMode, home: new dashboard_pg.DashboardPage.new()});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.main = function main$0() {
    binding.runApp(C[1] || CT.C1);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var Gradient_transform = dart.privateName(gradient, "Gradient.transform");
  var Gradient_stops = dart.privateName(gradient, "Gradient.stops");
  var Gradient_colors = dart.privateName(gradient, "Gradient.colors");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var LinearGradient_tileMode = dart.privateName(gradient, "LinearGradient.tileMode");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var LinearGradient_end = dart.privateName(gradient, "LinearGradient.end");
  var LinearGradient_begin = dart.privateName(gradient, "LinearGradient.begin");
  dart.defineLazy(colors$0, {
    /*colors$0.kWhite*/get kWhite() {
      return C[2] || CT.C2;
    },
    /*colors$0.kBlack*/get kBlack() {
      return C[3] || CT.C3;
    },
    /*colors$0.kTransparent*/get kTransparent() {
      return C[4] || CT.C4;
    },
    /*colors$0.kRed*/get kRed() {
      return C[5] || CT.C5;
    },
    /*colors$0.kGreen*/get kGreen() {
      return C[17] || CT.C17;
    },
    /*colors$0.kBlue*/get kBlue() {
      return C[29] || CT.C29;
    },
    /*colors$0.kYellow*/get kYellow() {
      return C[41] || CT.C41;
    },
    /*colors$0.kGrey*/get kGrey() {
      return C[53] || CT.C53;
    },
    /*colors$0.kAppPrimary*/get kAppPrimary() {
      return C[67] || CT.C67;
    },
    /*colors$0.kAppPrimaryDark*/get kAppPrimaryDark() {
      return C[79] || CT.C79;
    },
    /*colors$0.kAppPrimaryDark2*/get kAppPrimaryDark2() {
      return C[80] || CT.C80;
    },
    /*colors$0.kAppPrimaryLight*/get kAppPrimaryLight() {
      return C[81] || CT.C81;
    },
    /*colors$0.kAppSecondary*/get kAppSecondary() {
      return C[82] || CT.C82;
    },
    /*colors$0.kAppSecondaryLight*/get kAppSecondaryLight() {
      return C[83] || CT.C83;
    },
    /*colors$0.kAppBiruDark*/get kAppBiruDark() {
      return C[84] || CT.C84;
    },
    /*colors$0.kAppBiruLight*/get kAppBiruLight() {
      return new ui.Color.new(4278235065);
    },
    /*colors$0.kAppKuning*/get kAppKuning() {
      return C[85] || CT.C85;
    },
    /*colors$0.kAppCoklat*/get kAppCoklat() {
      return C[86] || CT.C86;
    },
    /*colors$0.kAppMerah*/get kAppMerah() {
      return C[87] || CT.C87;
    },
    /*colors$0.kAppGrey*/get kAppGrey() {
      return C[57] || CT.C57;
    },
    /*colors$0.kBgPrimary*/get kBgPrimary() {
      return C[88] || CT.C88;
    },
    /*colors$0.kBgSecondary*/get kBgSecondary() {
      return C[89] || CT.C89;
    },
    /*colors$0.kBgSuccess*/get kBgSuccess() {
      return C[90] || CT.C90;
    },
    /*colors$0.kBgDanger*/get kBgDanger() {
      return C[91] || CT.C91;
    },
    /*colors$0.kBgWarning*/get kBgWarning() {
      return C[92] || CT.C92;
    },
    /*colors$0.kBgInfo*/get kBgInfo() {
      return C[93] || CT.C93;
    },
    /*colors$0.kBgLight*/get kBgLight() {
      return C[94] || CT.C94;
    },
    /*colors$0.kBgDark*/get kBgDark() {
      return C[95] || CT.C95;
    },
    /*colors$0.kAppGradientPrim*/get kAppGradientPrim() {
      return C[96] || CT.C96;
    },
    /*colors$0.kPrimaryGradient*/get kPrimaryGradient() {
      return C[101] || CT.C101;
    }
  }, false);
  dart.defineLazy(constants, {
    /*constants.dbName*/get dbName() {
      return "dbName.db";
    },
    /*constants.APP_NAME*/get APP_NAME() {
      return "V-Log";
    },
    /*constants.APP_DESC*/get APP_DESC() {
      return "Visitor Log";
    },
    /*constants.TAG_LINE*/get TAG_LINE() {
      return "Will never miss";
    },
    /*constants.WA_ADMIN*/get WA_ADMIN() {
      return "971562681844";
    },
    /*constants.APP_VERSI*/get APP_VERSI() {
      return "2.2111.6";
    },
    /*constants.BASE_URL*/get BASE_URL() {
      return "https://study-alone.000webhostapp.com/";
    },
    /*constants.TIME_OUT_DURATION*/get TIME_OUT_DURATION() {
      return 30;
    },
    /*constants.tableCategoryName*/get tableCategoryName() {
      return "Category";
    },
    /*constants.colMainCategoryId*/get colMainCategoryId() {
      return "ID";
    },
    /*constants.colMainCategoryName*/get colMainCategoryName() {
      return "Name";
    },
    /*constants.colMainCategoryImage*/get colMainCategoryImage() {
      return "Image";
    },
    /*constants.tableQuestionName*/get tableQuestionName() {
      return "Question";
    },
    /*constants.colQuestionId*/get colQuestionId() {
      return "ID";
    },
    /*constants.colQuestionText*/get colQuestionText() {
      return "QuestionText";
    },
    /*constants.colQuestionIsImage*/get colQuestionIsImage() {
      return "IsImageQuestion";
    },
    /*constants.colQuestionImage*/get colQuestionImage() {
      return "QuestionImage";
    },
    /*constants.colQuestionAnswerA*/get colQuestionAnswerA() {
      return "AnswerA";
    },
    /*constants.colQuestionAnswerB*/get colQuestionAnswerB() {
      return "AnswerB";
    },
    /*constants.colQuestionAnswerC*/get colQuestionAnswerC() {
      return "AnswerC";
    },
    /*constants.colQuestionAnswerD*/get colQuestionAnswerD() {
      return "AnswerD";
    },
    /*constants.colQuestionCorrectAnswer*/get colQuestionCorrectAnswer() {
      return "CorrectAnswer";
    },
    /*constants.colQuestionCategoryId*/get colQuestionCategoryId() {
      return "CategoryID";
    },
    /*constants.sSuccess*/get sSuccess() {
      return "Great";
    },
    /*constants.sFail*/get sFail() {
      return "Failed";
    },
    /*constants.sError*/get sError() {
      return "Eror";
    },
    /*constants.sMsgSuccessExecution*/get sMsgSuccessExecution() {
      return "Process sucessfully executed";
    },
    /*constants.sMsgSuccessAddData*/get sMsgSuccessAddData() {
      return "New data sucessfully added";
    },
    /*constants.sMsgSuccessUpdateData*/get sMsgSuccessUpdateData() {
      return "Data sucessfully updated";
    },
    /*constants.sMsgSuccessDeleteData*/get sMsgSuccessDeleteData() {
      return "Data sucessfully deleted";
    },
    /*constants.sMsgFailExecution*/get sMsgFailExecution() {
      return "Process failed to be executed";
    },
    /*constants.sMsgFailAddData*/get sMsgFailAddData() {
      return "New data failed to be added";
    },
    /*constants.sMsgFailUpdateData*/get sMsgFailUpdateData() {
      return "Data failed to be updated";
    },
    /*constants.sMsgFailDeleteData*/get sMsgFailDeleteData() {
      return "Data failed to be deleted";
    },
    /*constants.sAuthFail*/get sAuthFail() {
      return "User ID is not registered, or Wrong Password!";
    },
    /*constants.kEmailValidatorRegExp*/get kEmailValidatorRegExp() {
      return core.RegExp.new("^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[a-zA-Z]+");
    },
    /*constants.kUserNullError*/get kUserNullError() {
      return "Please Enter your User ID";
    },
    /*constants.kPassNullError*/get kPassNullError() {
      return "Please Enter your Password";
    },
    /*constants.kEmailNullError*/get kEmailNullError() {
      return "Please Enter Valid Email";
    },
    /*constants.kInvalidEmailError*/get kInvalidEmailError() {
      return "Please Enter Valid Email";
    },
    /*constants.kFieldNullError*/get kFieldNullError() {
      return "The field cannot be empty";
    },
    /*constants.kShortPassError*/get kShortPassError() {
      return "Password is too short";
    },
    /*constants.kMatchPassError*/get kMatchPassError() {
      return "Passwords doesn't match";
    },
    /*constants.kNamelNullError*/get kNamelNullError() {
      return "Please Enter your name";
    },
    /*constants.kPhoneNumberNullError*/get kPhoneNumberNullError() {
      return "Please Enter your phone number";
    },
    /*constants.kAddressNullError*/get kAddressNullError() {
      return "Please Enter your address";
    }
  }, false);
  var Duration__duration = dart.privateName(core, "Duration._duration");
  dart.defineLazy(durations, {
    /*durations.kAnimationDuration*/get kAnimationDuration() {
      return C[105] || CT.C105;
    },
    /*durations.kDefaultDuration*/get kDefaultDuration() {
      return C[106] || CT.C106;
    }
  }, false);
  dart.defineLazy(keys, {
    /*keys.API_KEY*/get API_KEY() {
      return "AIzaSyClb4GDpsXDFSvWumM4vyFj7dMT2ShTWak";
    }
  }, false);
  dart.defineLazy(sizes, {
    /*sizes.kDefaultPadding*/get kDefaultPadding() {
      return 16;
    },
    /*sizes.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*sizes.kTabletWidth*/get kTabletWidth() {
      return 1200;
    },
    /*sizes.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*sizes.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*sizes.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*sizes.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    }
  }, false);
  styles.outlineInputBorder = function outlineInputBorder() {
    return new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(15), borderSide: new borders.BorderSide.new({color: colors$0.kAppPrimary})});
  };
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_blurStyle = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  dart.defineLazy(styles, {
    /*styles.kDefaultShadow*/get kDefaultShadow() {
      return C[107] || CT.C107;
    },
    /*styles.kTextStyle*/get kTextStyle() {
      return C[111] || CT.C111;
    },
    /*styles.kHeadingStyle*/get kHeadingStyle() {
      return new text_style.TextStyle.new({fontSize: 21, fontWeight: ui.FontWeight.bold, color: colors.Colors.black, height: 1.5});
    },
    /*styles.otpInputDecoration*/get otpInputDecoration() {
      return new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 15}), border: styles.outlineInputBorder(), focusedBorder: styles.outlineInputBorder(), enabledBorder: styles.outlineInputBorder()});
    }
  }, false);
  themes.MyThemes = class MyThemes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes.MyThemes.new();
    }
  };
  (themes.MyThemes.new = function() {
    ;
  }).prototype = themes.MyThemes.prototype;
  dart.addTypeTests(themes.MyThemes);
  dart.addTypeCaches(themes.MyThemes);
  dart.setLibraryUri(themes.MyThemes, I[1]);
  dart.setStaticFieldSignature(themes.MyThemes, () => ['lightMode', 'darkMode']);
  dart.defineLazy(themes.MyThemes, {
    /*themes.MyThemes.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({primarySwatch: colors$0.kAppPrimary, primaryColor: colors$0.kAppPrimary, brightness: ui.Brightness.light, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    /*themes.MyThemes.darkMode*/get darkMode() {
      return theme_data.ThemeData.new({primarySwatch: colors.Colors.red, primaryColor: new ui.Color.new(4293947751), brightness: ui.Brightness.dark, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    }
  }, false);
  var _eventController = dart.privateName(bloc$, "_eventController");
  var _subscriptions = dart.privateName(bloc$, "_subscriptions");
  var _handlers = dart.privateName(bloc$, "_handlers");
  var _emitters = dart.privateName(bloc$, "_emitters");
  var _eventTransformer$ = dart.privateName(bloc$, "_eventTransformer");
  var _blocObserver$ = dart.privateName(bloc$, "_blocObserver");
  var _emitted = dart.privateName(bloc$, "_emitted");
  var __BlocBase__stateController = dart.privateName(bloc$, "_#BlocBase#_stateController");
  var __BlocBase__stateController_isSet = dart.privateName(bloc$, "_#BlocBase#_stateController#isSet");
  var _state$ = dart.privateName(bloc$, "_state");
  var _stateController = dart.privateName(bloc$, "_stateController");
  const _is_BlocBase_default = Symbol('_is_BlocBase_default');
  bloc$.BlocBase$ = dart.generic(State => {
    var __t$StreamControllerOfState = () => (__t$StreamControllerOfState = dart.constFn(async.StreamController$(State)))();
    var __t$ChangeOfState = () => (__t$ChangeOfState = dart.constFn(change.Change$(State)))();
    class BlocBase extends core.Object {
      get [_stateController]() {
        let t3, t2;
        t2 = this[__BlocBase__stateController];
        return t2 == null ? (t3 = __t$StreamControllerOfState().broadcast(), this[__BlocBase__stateController] == null ? this[__BlocBase__stateController] = t3 : dart.throw(new _internal.LateError.fieldADI("_stateController"))) : t2;
      }
      get state() {
        return this[_state$];
      }
      get stream() {
        return this[_stateController].stream;
      }
      get isClosed() {
        return this[_stateController].isClosed;
      }
      emit(state) {
        State.as(state);
        try {
          if (this.isClosed) {
            dart.throw(new core.StateError.new("Cannot emit new states after calling close"));
          }
          if (dart.equals(state, this[_state$]) && this[_emitted]) return;
          this.onChange(new (__t$ChangeOfState()).new({currentState: this.state, nextState: state}));
          this[_state$] = state;
          this[_stateController].add(this[_state$]);
          this[_emitted] = true;
        } catch (e) {
          let error = dart.getThrown(e);
          let stackTrace = dart.stackTrace(e);
          if (core.Object.is(error)) {
            this.onError(error, stackTrace);
            dart.rethrow(e);
          } else
            throw e;
        }
      }
      onChange(change) {
        __t$ChangeOfState().as(change);
        this[_blocObserver$].onChange(this, change);
      }
      addError(error, stackTrace = null) {
        let t3;
        this.onError(error, (t3 = stackTrace, t3 == null ? core.StackTrace.current : t3));
      }
      onError(error, stackTrace) {
        this[_blocObserver$].onError(this, error, stackTrace);
      }
      close() {
        return async.async(dart.void, (function* close() {
          this[_blocObserver$].onClose(this);
          yield this[_stateController].close();
        }).bind(this));
      }
    }
    (BlocBase.new = function(_state) {
      let t2, t2$;
      this[_blocObserver$] = (t2$ = (t2 = bloc$.BlocOverrides.current, t2 == null ? null : t2.blocObserver), t2$ == null ? bloc$.Bloc.observer : t2$);
      this[__BlocBase__stateController] = null;
      this[__BlocBase__stateController_isSet] = false;
      this[_emitted] = false;
      this[_state$] = _state;
      this[_blocObserver$].onCreate(this);
    }).prototype = BlocBase.prototype;
    dart.addTypeTests(BlocBase);
    BlocBase.prototype[_is_BlocBase_default] = true;
    dart.addTypeCaches(BlocBase);
    BlocBase[dart.implements] = () => [bloc$.StateStreamableSource$(State), bloc$.Emittable$(State), bloc$.ErrorSink];
    dart.setMethodSignature(BlocBase, () => ({
      __proto__: dart.getMethods(BlocBase.__proto__),
      emit: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      onChange: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addError: dart.fnType(dart.void, [core.Object], [dart.nullable(core.StackTrace)]),
      onError: dart.fnType(dart.void, [core.Object, core.StackTrace]),
      close: dart.fnType(async.Future$(dart.void), [])
    }));
    dart.setGetterSignature(BlocBase, () => ({
      __proto__: dart.getGetters(BlocBase.__proto__),
      [_stateController]: async.StreamController$(State),
      state: State,
      stream: async.Stream$(State),
      isClosed: core.bool
    }));
    dart.setLibraryUri(BlocBase, I[3]);
    dart.setFieldSignature(BlocBase, () => ({
      __proto__: dart.getFields(BlocBase.__proto__),
      [_blocObserver$]: dart.finalFieldType(bloc_observer.BlocObserver),
      [__BlocBase__stateController]: dart.fieldType(dart.nullable(async.StreamController$(State))),
      [__BlocBase__stateController_isSet]: dart.fieldType(core.bool),
      [_state$]: dart.fieldType(State),
      [_emitted]: dart.fieldType(core.bool)
    }));
    return BlocBase;
  });
  bloc$.BlocBase = bloc$.BlocBase$();
  dart.addTypeTests(bloc$.BlocBase, _is_BlocBase_default);
  const _is_Bloc_default = Symbol('_is_Bloc_default');
  bloc$.Bloc$ = dart.generic((Event, State) => {
    var __t$StreamControllerOfEvent = () => (__t$StreamControllerOfEvent = dart.constFn(async.StreamController$(Event)))();
    var __t$EventTobool = () => (__t$EventTobool = dart.constFn(dart.fnType(core.bool, [Event])))();
    var __t$TransitionOfEvent$State = () => (__t$TransitionOfEvent$State = dart.constFn(transition.Transition$(Event, State)))();
    var __t$StateTovoid = () => (__t$StateTovoid = dart.constFn(dart.fnType(dart.void, [State])))();
    var __t$_EmitterOfState = () => (__t$_EmitterOfState = dart.constFn(bloc$._Emitter$(State)))();
    const close = Symbol("close");
    class Bloc extends bloc$.BlocBase$(State) {
      add(event) {
        Event.as(event);
        if (!dart.fn(() => {
          let handlerExists = this[_handlers][$any](dart.fn(handler => {
            let t1, t0;
            t0 = handler;
            t1 = event;
            return t0.isType(t1);
          }, T$._HandlerTobool()));
          if (!handlerExists) {
            let eventType = dart.runtimeType(event);
            dart.throw(new core.StateError.new("add(" + dart.str(eventType) + ") was called without a registered event handler.\n" + "Make sure to register a handler via on<" + dart.str(eventType) + ">((event, emit) {...})"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 87, 12, "() {\n      final handlerExists = _handlers.any((handler) => handler.isType(event));\n      if (!handlerExists) {\n        final eventType = event.runtimeType;\n        throw StateError(\n          '''add($eventType) was called without a registered event handler.\\n'''\n          '''Make sure to register a handler via on<$eventType>((event, emit) {...})''',\n        );\n      }\n      return true;\n    }()");
        try {
          this.onEvent(event);
          this[_eventController].add(event);
        } catch (e) {
          let error = dart.getThrown(e);
          let stackTrace = dart.stackTrace(e);
          if (core.Object.is(error)) {
            this.onError(error, stackTrace);
            dart.rethrow(e);
          } else
            throw e;
        }
      }
      onEvent(event) {
        Event.as(event);
        this[_blocObserver$].onEvent(this, event);
      }
      emit(state) {
        State.as(state);
        return super.emit(state);
      }
      on(E, handler, opts) {
        let t1;
        dart.checkTypeBound(E, Event, 'E');
        let transformer = opts && 'transformer' in opts ? opts.transformer : null;
        if (!dart.fn(() => {
          let handlerExists = this[_handlers][$any](dart.fn(handler => handler.type._equals(dart.wrapType(E)), T$._HandlerTobool()));
          if (handlerExists) {
            dart.throw(new core.StateError.new("on<" + dart.str(dart.wrapType(E)) + "> was called multiple times. " + "There should only be a single event handler per event type."));
          }
          this[_handlers][$add](new bloc$._Handler.new({isType: dart.fn(e => E.is(e), T$.dynamicTobool()), type: dart.wrapType(E)}));
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[2], 186, 12, "() {\n      final handlerExists = _handlers.any((handler) => handler.type == E);\n      if (handlerExists) {\n        throw StateError(\n          'on<$E> was called multiple times. '\n          'There should only be a single event handler per event type.',\n        );\n      }\n      _handlers.add(_Handler(isType: (dynamic e) => e is E, type: E));\n      return true;\n    }()");
        let subscription = (t1 = transformer, t1 == null ? this[_eventTransformer$] : t1)(this[_eventController].stream.where(dart.fn(event => E.is(event), __t$EventTobool())).cast(E), dart.fn(event => {
          const onEmit = state => {
            if (this.isClosed) return;
            if (dart.equals(this.state, state) && this[_emitted]) return;
            this.onTransition(new (__t$TransitionOfEvent$State()).new({currentState: this.state, event: E.as(event), nextState: state}));
            this.emit(state);
          };
          dart.fn(onEmit, __t$StateTovoid());
          let emitter = new (__t$_EmitterOfState()).new(onEmit);
          let controller = async.StreamController$(E).broadcast({sync: true, onCancel: dart.bind(emitter, 'cancel')});
          const handleEvent = () => {
            return async.async(dart.void, (function* handleEvent() {
              const onDone = () => {
                emitter.complete();
                this[_emitters][$remove](emitter);
                if (!controller.isClosed) controller.close();
              };
              dart.fn(onDone, T$.VoidTovoid());
              try {
                this[_emitters][$add](emitter);
                yield handler(E.as(event), emitter);
              } catch (e) {
                let error = dart.getThrown(e);
                let stackTrace = dart.stackTrace(e);
                if (core.Object.is(error)) {
                  this.onError(error, stackTrace);
                  dart.rethrow(e);
                } else
                  throw e;
              } finally {
                onDone();
              }
            }).bind(this));
          };
          dart.fn(handleEvent, T$.VoidToFutureOfvoid());
          handleEvent();
          return controller.stream;
        }, dart.fnType(async.Stream$(E), [dart.dynamic]))).listen(null);
        this[_subscriptions][$add](subscription);
      }
      onTransition(transition) {
        __t$TransitionOfEvent$State().as(transition);
        this[_blocObserver$].onTransition(this, transition);
      }
      close() {
        return async.async(dart.void, (function* close$() {
          yield this[_eventController].close();
          for (let emitter of this[_emitters]) {
            emitter.cancel();
          }
          yield async.Future.wait(dart.void, this[_emitters][$map](T$.FutureOfvoid(), dart.fn(e => e.future, T$._EmitterToFutureOfvoid())));
          yield async.Future.wait(dart.void, this[_subscriptions][$map](T$.FutureOfvoid(), dart.fn(s => s.cancel(), T$.StreamSubscriptionToFutureOfvoid())));
          return this[close]();
        }).bind(this));
      }
      [close]() {
        return super.close();
      }
    }
    (Bloc.new = function(initialState) {
      let t0, t0$;
      this[_eventController] = __t$StreamControllerOfEvent().broadcast();
      this[_subscriptions] = T$.JSArrayOfStreamSubscription().of([]);
      this[_handlers] = T$.JSArrayOf_Handler().of([]);
      this[_emitters] = T$.JSArrayOf_Emitter().of([]);
      this[_eventTransformer$] = (t0$ = (t0 = bloc$.BlocOverrides.current, t0 == null ? null : t0.eventTransformer), t0$ == null ? bloc$.Bloc.transformer : t0$);
      Bloc.__proto__.new.call(this, initialState);
      ;
    }).prototype = Bloc.prototype;
    dart.addTypeTests(Bloc);
    Bloc.prototype[_is_Bloc_default] = true;
    dart.addTypeCaches(Bloc);
    Bloc[dart.implements] = () => [bloc$.BlocEventSink$(Event)];
    dart.setMethodSignature(Bloc, () => ({
      __proto__: dart.getMethods(Bloc.__proto__),
      add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      onEvent: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      on: dart.gFnType(E => [dart.void, [dart.fnType(dart.void, [E, bloc$.Emitter$(State)])], {transformer: dart.nullable(dart.fnType(async.Stream$(E), [async.Stream$(E), dart.fnType(async.Stream$(E), [E])]))}, {}], E => [Event]),
      onTransition: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(Bloc, I[3]);
    dart.setFieldSignature(Bloc, () => ({
      __proto__: dart.getFields(Bloc.__proto__),
      [_eventController]: dart.finalFieldType(async.StreamController$(Event)),
      [_subscriptions]: dart.finalFieldType(core.List$(async.StreamSubscription)),
      [_handlers]: dart.finalFieldType(core.List$(bloc$._Handler)),
      [_emitters]: dart.finalFieldType(core.List$(bloc$._Emitter)),
      [_eventTransformer$]: dart.finalFieldType(dart.fnType(async.Stream, [async.Stream, dart.fnType(async.Stream, [dart.dynamic])]))
    }));
    dart.setStaticFieldSignature(Bloc, () => ['observer', 'transformer']);
    return Bloc;
  });
  bloc$.Bloc = bloc$.Bloc$();
  dart.defineLazy(bloc$.Bloc, {
    /*bloc$.Bloc.observer*/get observer() {
      return C[113] || CT.C113;
    },
    set observer(value) {},
    /*bloc$.Bloc.transformer*/get transformer() {
      return dart.fn((events, mapper) => events.map(async.Stream, mapper).transform(dart.dynamic, C[114] || CT.C114), T$.StreamAndFnToStream());
    },
    set transformer(value) {}
  }, false);
  dart.addTypeTests(bloc$.Bloc, _is_Bloc_default);
  grocery_bloc.GroceryEvent = class GroceryEvent extends core.Object {};
  (grocery_bloc.GroceryEvent.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryEvent.prototype;
  dart.addTypeTests(grocery_bloc.GroceryEvent);
  dart.addTypeCaches(grocery_bloc.GroceryEvent);
  dart.setLibraryUri(grocery_bloc.GroceryEvent, I[4]);
  grocery_bloc.GroceryState = class GroceryState extends core.Object {};
  (grocery_bloc.GroceryState.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryState.prototype;
  dart.addTypeTests(grocery_bloc.GroceryState);
  dart.addTypeCaches(grocery_bloc.GroceryState);
  dart.setLibraryUri(grocery_bloc.GroceryState, I[4]);
  grocery_bloc.GroceryBloc = class GroceryBloc extends bloc$.Bloc$(grocery_bloc.GroceryEvent, grocery_bloc.GroceryState) {
    static ['_#new#tearOff']() {
      return new grocery_bloc.GroceryBloc.new();
    }
    handleGoceryInitialEvent(event, emit) {
      return async.async(dart.void, function* handleGoceryInitialEvent() {
        core.print("handleGoceryInitialEvent Clicked");
      });
    }
    handleAddGocery(event, emit) {
      return async.async(dart.void, function* handleAddGocery() {
        dart.dcall(emit, [new grocery_bloc.GroceryLoadingState.new()]);
        yield async.Future.delayed(new core.Duration.new({seconds: 3}));
        dart.dcall(emit, [new grocery_bloc.GroceryAddedState.new({data: grocery_mdl.GroceryData.groceryItems[$map](grocery_mdl.GroceryModel, dart.fn(e => new grocery_mdl.GroceryModel.new({id: core.String.as(e[$_get]("id")), name: core.String.as(e[$_get]("name")), description: core.String.as(e[$_get]("description")), price: core.double.as(e[$_get]("price")), imageUrl: core.String.as(e[$_get]("imageUrl"))}), T$.MapOfString$dynamicToGroceryModel()))[$toList]()})]);
      });
    }
  };
  (grocery_bloc.GroceryBloc.new = function() {
    grocery_bloc.GroceryBloc.__proto__.new.call(this, new grocery_bloc.GroceryInitialState.new());
    this.on(grocery_bloc.GroceryInitialEvent, dart.bind(this, 'handleGoceryInitialEvent'));
    this.on(grocery_bloc.GroceryAddEvent, dart.bind(this, 'handleAddGocery'));
  }).prototype = grocery_bloc.GroceryBloc.prototype;
  dart.addTypeTests(grocery_bloc.GroceryBloc);
  dart.addTypeCaches(grocery_bloc.GroceryBloc);
  dart.setMethodSignature(grocery_bloc.GroceryBloc, () => ({
    __proto__: dart.getMethods(grocery_bloc.GroceryBloc.__proto__),
    handleGoceryInitialEvent: dart.fnType(async.Future$(dart.void), [dart.dynamic, dart.dynamic]),
    handleAddGocery: dart.fnType(async.Future$(dart.void), [dart.dynamic, dart.dynamic])
  }));
  dart.setLibraryUri(grocery_bloc.GroceryBloc, I[4]);
  grocery_bloc.GroceryInitialEvent = class GroceryInitialEvent extends grocery_bloc.GroceryEvent {
    static ['_#new#tearOff']() {
      return new grocery_bloc.GroceryInitialEvent.new();
    }
  };
  (grocery_bloc.GroceryInitialEvent.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryInitialEvent.prototype;
  dart.addTypeTests(grocery_bloc.GroceryInitialEvent);
  dart.addTypeCaches(grocery_bloc.GroceryInitialEvent);
  dart.setLibraryUri(grocery_bloc.GroceryInitialEvent, I[4]);
  grocery_bloc.GroceryAddEvent = class GroceryAddEvent extends grocery_bloc.GroceryEvent {
    static ['_#new#tearOff']() {
      return new grocery_bloc.GroceryAddEvent.new();
    }
  };
  (grocery_bloc.GroceryAddEvent.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryAddEvent.prototype;
  dart.addTypeTests(grocery_bloc.GroceryAddEvent);
  dart.addTypeCaches(grocery_bloc.GroceryAddEvent);
  dart.setLibraryUri(grocery_bloc.GroceryAddEvent, I[4]);
  grocery_bloc.GroceryInitialState = class GroceryInitialState extends grocery_bloc.GroceryState {
    static ['_#new#tearOff']() {
      return new grocery_bloc.GroceryInitialState.new();
    }
  };
  (grocery_bloc.GroceryInitialState.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryInitialState.prototype;
  dart.addTypeTests(grocery_bloc.GroceryInitialState);
  dart.addTypeCaches(grocery_bloc.GroceryInitialState);
  dart.setLibraryUri(grocery_bloc.GroceryInitialState, I[4]);
  grocery_bloc.GroceryLoadingState = class GroceryLoadingState extends grocery_bloc.GroceryState {
    static ['_#new#tearOff']() {
      return new grocery_bloc.GroceryLoadingState.new();
    }
  };
  (grocery_bloc.GroceryLoadingState.new = function() {
    ;
  }).prototype = grocery_bloc.GroceryLoadingState.prototype;
  dart.addTypeTests(grocery_bloc.GroceryLoadingState);
  dart.addTypeCaches(grocery_bloc.GroceryLoadingState);
  dart.setLibraryUri(grocery_bloc.GroceryLoadingState, I[4]);
  var data$ = dart.privateName(grocery_bloc, "GroceryAddedState.data");
  grocery_bloc.GroceryAddedState = class GroceryAddedState extends grocery_bloc.GroceryState {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let data = opts && 'data' in opts ? opts.data : null;
      return new grocery_bloc.GroceryAddedState.new({data: data});
    }
  };
  (grocery_bloc.GroceryAddedState.new = function(opts) {
    let data = opts && 'data' in opts ? opts.data : null;
    this[data$] = data;
    ;
  }).prototype = grocery_bloc.GroceryAddedState.prototype;
  dart.addTypeTests(grocery_bloc.GroceryAddedState);
  dart.addTypeCaches(grocery_bloc.GroceryAddedState);
  dart.setLibraryUri(grocery_bloc.GroceryAddedState, I[4]);
  dart.setFieldSignature(grocery_bloc.GroceryAddedState, () => ({
    __proto__: dart.getFields(grocery_bloc.GroceryAddedState.__proto__),
    data: dart.finalFieldType(core.List$(grocery_mdl.GroceryModel))
  }));
  var id$ = dart.privateName(grocery_mdl, "GroceryModel.id");
  var name$ = dart.privateName(grocery_mdl, "GroceryModel.name");
  var description$ = dart.privateName(grocery_mdl, "GroceryModel.description");
  var price$ = dart.privateName(grocery_mdl, "GroceryModel.price");
  var imageUrl$ = dart.privateName(grocery_mdl, "GroceryModel.imageUrl");
  grocery_mdl.GroceryModel = class GroceryModel extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get price() {
      return this[price$];
    }
    set price(value) {
      super.price = value;
    }
    get imageUrl() {
      return this[imageUrl$];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let price = opts && 'price' in opts ? opts.price : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      return new grocery_mdl.GroceryModel.new({id: id, name: name, description: description, price: price, imageUrl: imageUrl});
    }
  };
  (grocery_mdl.GroceryModel.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let price = opts && 'price' in opts ? opts.price : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    this[id$] = id;
    this[name$] = name;
    this[description$] = description;
    this[price$] = price;
    this[imageUrl$] = imageUrl;
    ;
  }).prototype = grocery_mdl.GroceryModel.prototype;
  dart.addTypeTests(grocery_mdl.GroceryModel);
  dart.addTypeCaches(grocery_mdl.GroceryModel);
  dart.setLibraryUri(grocery_mdl.GroceryModel, I[5]);
  dart.setFieldSignature(grocery_mdl.GroceryModel, () => ({
    __proto__: dart.getFields(grocery_mdl.GroceryModel.__proto__),
    id: dart.finalFieldType(core.String),
    name: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    price: dart.finalFieldType(core.double),
    imageUrl: dart.finalFieldType(core.String)
  }));
  grocery_mdl.GroceryData = class GroceryData extends core.Object {
    static ['_#new#tearOff']() {
      return new grocery_mdl.GroceryData.new();
    }
  };
  (grocery_mdl.GroceryData.new = function() {
    ;
  }).prototype = grocery_mdl.GroceryData.prototype;
  dart.addTypeTests(grocery_mdl.GroceryData);
  dart.addTypeCaches(grocery_mdl.GroceryData);
  dart.setLibraryUri(grocery_mdl.GroceryData, I[5]);
  dart.setStaticFieldSignature(grocery_mdl.GroceryData, () => ['groceryItems']);
  dart.defineLazy(grocery_mdl.GroceryData, {
    /*grocery_mdl.GroceryData.groceryItems*/get groceryItems() {
      return T$.JSArrayOfMapOfString$dynamic().of([new (T$.IdentityMapOfString$dynamic()).from(["id", "1", "name", "Bananas", "description", "Fresh bananas from Ecuador", "price", 0.49, "imageUrl", "https://cdn.shopify.com/s/files/1/0258/4307/3103/products/asset_2_800x.jpg?v=1571839043"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "2", "name", "Grapes", "description", "Organic, locally grown apples", "price", 1.99, "imageUrl", "https://www.jiomart.com/images/product/original/590000452/sharad-seedless-grapes-1-kg-product-images-o590000452-p590116963-0-202203171004.jpg"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "3", "name", "Bread", "description", "Brown Bread, Tasty", "price", 2.49, "imageUrl", "https://thumbs.dreamstime.com/b/bread-cut-14027607.jpg"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "4", "name", "Brown Eggs", "description", "Farm-fresh brown eggs", "price", 3.99, "imageUrl", "https://cdn.britannica.com/94/151894-050-F72A5317/Brown-eggs.jpg"])]);
    },
    set groceryItems(value) {}
  }, false);
  dashboard_pg.DashboardPage = class DashboardPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new dashboard_pg.DashboardPage.new({key: key});
    }
    createState() {
      return new dashboard_pg._DashboardPageState.new();
    }
  };
  (dashboard_pg.DashboardPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    dashboard_pg.DashboardPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = dashboard_pg.DashboardPage.prototype;
  dart.addTypeTests(dashboard_pg.DashboardPage);
  dart.addTypeCaches(dashboard_pg.DashboardPage);
  dart.setMethodSignature(dashboard_pg.DashboardPage, () => ({
    __proto__: dart.getMethods(dashboard_pg.DashboardPage.__proto__),
    createState: dart.fnType(framework.State$(dashboard_pg.DashboardPage), [])
  }));
  dart.setLibraryUri(dashboard_pg.DashboardPage, I[6]);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  dashboard_pg._DashboardPageState = class _DashboardPageState extends framework.State$(dashboard_pg.DashboardPage) {
    build(context) {
      let size = media_query.MediaQuery.of(context).size;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Zapp with BLoC")}), body: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: C[115] || CT.C115, child: new container.Container.new({height: 300, decoration: new box_decoration.BoxDecoration.new({color: colors$1.kAppPrimary._get(200), borderRadius: new border_radius.BorderRadius.circular(16)}), child: new basic.Center.new({child: new text.Text.new("Welcome User")})})}), new container.Container.new({margin: new edge_insets.EdgeInsets.only({top: 20}), width: size.width * 0.8, child: button_wdg.MyButtons.primaryOutlined(context, "Click Me", dart.fn(() => {
                this.groceryBloc.add(new grocery_bloc$.GroceryInitialEvent.new());
              }, T$.VoidToNull()))})])})});
    }
    static ['_#new#tearOff']() {
      return new dashboard_pg._DashboardPageState.new();
    }
  };
  (dashboard_pg._DashboardPageState.new = function() {
    this.groceryBloc = new grocery_bloc$.GroceryBloc.new();
    dashboard_pg._DashboardPageState.__proto__.new.call(this);
    ;
  }).prototype = dashboard_pg._DashboardPageState.prototype;
  dart.addTypeTests(dashboard_pg._DashboardPageState);
  dart.addTypeCaches(dashboard_pg._DashboardPageState);
  dart.setMethodSignature(dashboard_pg._DashboardPageState, () => ({
    __proto__: dart.getMethods(dashboard_pg._DashboardPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dashboard_pg._DashboardPageState, I[6]);
  dart.setFieldSignature(dashboard_pg._DashboardPageState, () => ({
    __proto__: dart.getFields(dashboard_pg._DashboardPageState.__proto__),
    groceryBloc: dart.finalFieldType(grocery_bloc$.GroceryBloc)
  }));
  var builder$ = dart.privateName(bloc_builder, "BlocBuilder.builder");
  var bloc$0 = dart.privateName(bloc_builder, "BlocBuilderBase.bloc");
  var buildWhen$ = dart.privateName(bloc_builder, "BlocBuilderBase.buildWhen");
  const _is_BlocBuilderBase_default = Symbol('_is_BlocBuilderBase_default');
  bloc_builder.BlocBuilderBase$ = dart.generic((B, S) => {
    var __t$_BlocBuilderBaseStateOfB$S = () => (__t$_BlocBuilderBaseStateOfB$S = dart.constFn(bloc_builder._BlocBuilderBaseState$(B, S)))();
    class BlocBuilderBase extends framework.StatefulWidget {
      get bloc() {
        return this[bloc$0];
      }
      set bloc(value) {
        super.bloc = value;
      }
      get buildWhen() {
        return this[buildWhen$];
      }
      set buildWhen(value) {
        super.buildWhen = value;
      }
      createState() {
        return new (__t$_BlocBuilderBaseStateOfB$S()).new();
      }
    }
    (BlocBuilderBase.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      let buildWhen = opts && 'buildWhen' in opts ? opts.buildWhen : null;
      this[bloc$0] = bloc;
      this[buildWhen$] = buildWhen;
      BlocBuilderBase.__proto__.new.call(this, {key: key});
      ;
    }).prototype = BlocBuilderBase.prototype;
    dart.addTypeTests(BlocBuilderBase);
    BlocBuilderBase.prototype[_is_BlocBuilderBase_default] = true;
    dart.addTypeCaches(BlocBuilderBase);
    dart.setMethodSignature(BlocBuilderBase, () => ({
      __proto__: dart.getMethods(BlocBuilderBase.__proto__),
      createState: dart.fnType(framework.State$(bloc_builder.BlocBuilderBase$(B, S)), [])
    }));
    dart.setLibraryUri(BlocBuilderBase, I[7]);
    dart.setFieldSignature(BlocBuilderBase, () => ({
      __proto__: dart.getFields(BlocBuilderBase.__proto__),
      bloc: dart.finalFieldType(dart.nullable(B)),
      buildWhen: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [S, S])))
    }));
    return BlocBuilderBase;
  });
  bloc_builder.BlocBuilderBase = bloc_builder.BlocBuilderBase$();
  dart.addTypeTests(bloc_builder.BlocBuilderBase, _is_BlocBuilderBase_default);
  const _is_BlocBuilder_default = Symbol('_is_BlocBuilder_default');
  bloc_builder.BlocBuilder$ = dart.generic((B, S) => {
    class BlocBuilder extends bloc_builder.BlocBuilderBase$(B, S) {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](B, S, opts) {
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let bloc = opts && 'bloc' in opts ? opts.bloc : null;
        let buildWhen = opts && 'buildWhen' in opts ? opts.buildWhen : null;
        return new (bloc_builder.BlocBuilder$(B, S)).new({builder: builder, key: key, bloc: bloc, buildWhen: buildWhen});
      }
      build(context, state) {
        let t4, t3;
        S.as(state);
        t3 = context;
        t4 = state;
        return this.builder(t3, t4);
      }
    }
    (BlocBuilder.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      let buildWhen = opts && 'buildWhen' in opts ? opts.buildWhen : null;
      this[builder$] = builder;
      BlocBuilder.__proto__.new.call(this, {key: key, bloc: bloc, buildWhen: buildWhen});
      ;
    }).prototype = BlocBuilder.prototype;
    dart.addTypeTests(BlocBuilder);
    BlocBuilder.prototype[_is_BlocBuilder_default] = true;
    dart.addTypeCaches(BlocBuilder);
    dart.setMethodSignature(BlocBuilder, () => ({
      __proto__: dart.getMethods(BlocBuilder.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(BlocBuilder, I[7]);
    dart.setFieldSignature(BlocBuilder, () => ({
      __proto__: dart.getFields(BlocBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, S]))
    }));
    return BlocBuilder;
  });
  bloc_builder.BlocBuilder = bloc_builder.BlocBuilder$();
  dart.addTypeTests(bloc_builder.BlocBuilder, _is_BlocBuilder_default);
  var ___BlocBuilderBaseState__bloc = dart.privateName(bloc_builder, "_#_BlocBuilderBaseState#_bloc");
  var ___BlocBuilderBaseState__state = dart.privateName(bloc_builder, "_#_BlocBuilderBaseState#_state");
  var ___BlocBuilderBaseState__state_isSet = dart.privateName(bloc_builder, "_#_BlocBuilderBaseState#_state#isSet");
  var _bloc = dart.privateName(bloc_builder, "_bloc");
  var _state = dart.privateName(bloc_builder, "_state");
  const _is__BlocBuilderBaseState_default = Symbol('_is__BlocBuilderBaseState_default');
  bloc_builder._BlocBuilderBaseState$ = dart.generic((B, S) => {
    var __t$BlocBuilderBaseOfB$S = () => (__t$BlocBuilderBaseOfB$S = dart.constFn(bloc_builder.BlocBuilderBase$(B, S)))();
    var __t$BTobool = () => (__t$BTobool = dart.constFn(dart.fnType(core.bool, [B])))();
    var __t$BlocListenerOfB$S = () => (__t$BlocListenerOfB$S = dart.constFn(bloc_listener.BlocListener$(B, S)))();
    var __t$SAndSTobool = () => (__t$SAndSTobool = dart.constFn(dart.fnType(core.bool, [S, S])))();
    var __t$SAndSToNbool = () => (__t$SAndSToNbool = dart.constFn(dart.nullable(__t$SAndSTobool())))();
    var __t$BuildContextAndSTovoid = () => (__t$BuildContextAndSTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, S])))();
    class _BlocBuilderBaseState extends framework.State$(bloc_builder.BlocBuilderBase$(B, S)) {
      get [_bloc]() {
        let t3;
        t3 = this[___BlocBuilderBaseState__bloc];
        return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_bloc")) : t3;
      }
      set [_bloc](_bloc$35param) {
        this[___BlocBuilderBaseState__bloc] = _bloc$35param;
      }
      get [_state]() {
        let t3;
        return this[___BlocBuilderBaseState__state_isSet] ? (t3 = this[___BlocBuilderBaseState__state], t3) : dart.throw(new _internal.LateError.fieldNI("_state"));
      }
      set [_state](_state$35param) {
        this[___BlocBuilderBaseState__state_isSet] = true;
        this[___BlocBuilderBaseState__state] = _state$35param;
      }
      initState() {
        let t3;
        super.initState();
        this[_bloc] = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        this[_state] = this[_bloc].state;
      }
      didUpdateWidget(oldWidget) {
        let t3, t3$;
        __t$BlocBuilderBaseOfB$S().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        let oldBloc = (t3 = oldWidget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        let currentBloc = (t3$ = this.widget.bloc, t3$ == null ? oldBloc : t3$);
        if (!oldBloc[$_equals](currentBloc)) {
          this[_bloc] = currentBloc;
          this[_state] = this[_bloc].state;
        }
      }
      didChangeDependencies() {
        let t3;
        super.didChangeDependencies();
        let bloc = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        if (!this[_bloc][$_equals](bloc)) {
          this[_bloc] = bloc;
          this[_state] = this[_bloc].state;
        }
      }
      build(context) {
        if (this.widget.bloc == null) {
          provider$['SelectContext|select'](B, core.bool, context, dart.fn(bloc => this[_bloc] === bloc, __t$BTobool()));
        }
        return new (__t$BlocListenerOfB$S()).new({bloc: this[_bloc], listenWhen: __t$SAndSToNbool().as(this.widget.buildWhen), listener: dart.fn((context, state) => this.setState(dart.fn(() => this[_state] = state, T$.VoidTovoid())), __t$BuildContextAndSTovoid()), child: this.widget.build(context, this[_state])});
      }
      static ['_#new#tearOff'](B, S) {
        return new (bloc_builder._BlocBuilderBaseState$(B, S)).new();
      }
    }
    (_BlocBuilderBaseState.new = function() {
      this[___BlocBuilderBaseState__bloc] = null;
      this[___BlocBuilderBaseState__state] = null;
      this[___BlocBuilderBaseState__state_isSet] = false;
      _BlocBuilderBaseState.__proto__.new.call(this);
      ;
    }).prototype = _BlocBuilderBaseState.prototype;
    dart.addTypeTests(_BlocBuilderBaseState);
    _BlocBuilderBaseState.prototype[_is__BlocBuilderBaseState_default] = true;
    dart.addTypeCaches(_BlocBuilderBaseState);
    dart.setMethodSignature(_BlocBuilderBaseState, () => ({
      __proto__: dart.getMethods(_BlocBuilderBaseState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_BlocBuilderBaseState, () => ({
      __proto__: dart.getGetters(_BlocBuilderBaseState.__proto__),
      [_bloc]: B,
      [_state]: S
    }));
    dart.setSetterSignature(_BlocBuilderBaseState, () => ({
      __proto__: dart.getSetters(_BlocBuilderBaseState.__proto__),
      [_bloc]: B,
      [_state]: S
    }));
    dart.setLibraryUri(_BlocBuilderBaseState, I[7]);
    dart.setFieldSignature(_BlocBuilderBaseState, () => ({
      __proto__: dart.getFields(_BlocBuilderBaseState.__proto__),
      [___BlocBuilderBaseState__bloc]: dart.fieldType(dart.nullable(B)),
      [___BlocBuilderBaseState__state]: dart.fieldType(dart.nullable(S)),
      [___BlocBuilderBaseState__state_isSet]: dart.fieldType(core.bool)
    }));
    return _BlocBuilderBaseState;
  });
  bloc_builder._BlocBuilderBaseState = bloc_builder._BlocBuilderBaseState$();
  dart.addTypeTests(bloc_builder._BlocBuilderBaseState, _is__BlocBuilderBaseState_default);
  var bloc$1 = dart.privateName(bloc_consumer, "BlocConsumer.bloc");
  var builder$0 = dart.privateName(bloc_consumer, "BlocConsumer.builder");
  var listener$ = dart.privateName(bloc_consumer, "BlocConsumer.listener");
  var buildWhen$0 = dart.privateName(bloc_consumer, "BlocConsumer.buildWhen");
  var listenWhen$ = dart.privateName(bloc_consumer, "BlocConsumer.listenWhen");
  const _is_BlocConsumer_default = Symbol('_is_BlocConsumer_default');
  bloc_consumer.BlocConsumer$ = dart.generic((B, S) => {
    var __t$_BlocConsumerStateOfB$S = () => (__t$_BlocConsumerStateOfB$S = dart.constFn(bloc_consumer._BlocConsumerState$(B, S)))();
    class BlocConsumer extends framework.StatefulWidget {
      get bloc() {
        return this[bloc$1];
      }
      set bloc(value) {
        super.bloc = value;
      }
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get listener() {
        return this[listener$];
      }
      set listener(value) {
        super.listener = value;
      }
      get buildWhen() {
        return this[buildWhen$0];
      }
      set buildWhen(value) {
        super.buildWhen = value;
      }
      get listenWhen() {
        return this[listenWhen$];
      }
      set listenWhen(value) {
        super.listenWhen = value;
      }
      static ['_#new#tearOff'](B, S, opts) {
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let listener = opts && 'listener' in opts ? opts.listener : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let bloc = opts && 'bloc' in opts ? opts.bloc : null;
        let buildWhen = opts && 'buildWhen' in opts ? opts.buildWhen : null;
        let listenWhen = opts && 'listenWhen' in opts ? opts.listenWhen : null;
        return new (bloc_consumer.BlocConsumer$(B, S)).new({builder: builder, listener: listener, key: key, bloc: bloc, buildWhen: buildWhen, listenWhen: listenWhen});
      }
      createState() {
        return new (__t$_BlocConsumerStateOfB$S()).new();
      }
    }
    (BlocConsumer.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let listener = opts && 'listener' in opts ? opts.listener : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      let buildWhen = opts && 'buildWhen' in opts ? opts.buildWhen : null;
      let listenWhen = opts && 'listenWhen' in opts ? opts.listenWhen : null;
      this[builder$0] = builder;
      this[listener$] = listener;
      this[bloc$1] = bloc;
      this[buildWhen$0] = buildWhen;
      this[listenWhen$] = listenWhen;
      BlocConsumer.__proto__.new.call(this, {key: key});
      ;
    }).prototype = BlocConsumer.prototype;
    dart.addTypeTests(BlocConsumer);
    BlocConsumer.prototype[_is_BlocConsumer_default] = true;
    dart.addTypeCaches(BlocConsumer);
    dart.setMethodSignature(BlocConsumer, () => ({
      __proto__: dart.getMethods(BlocConsumer.__proto__),
      createState: dart.fnType(framework.State$(bloc_consumer.BlocConsumer$(B, S)), [])
    }));
    dart.setLibraryUri(BlocConsumer, I[8]);
    dart.setFieldSignature(BlocConsumer, () => ({
      __proto__: dart.getFields(BlocConsumer.__proto__),
      bloc: dart.finalFieldType(dart.nullable(B)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, S])),
      listener: dart.finalFieldType(dart.fnType(dart.void, [framework.BuildContext, S])),
      buildWhen: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [S, S]))),
      listenWhen: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [S, S])))
    }));
    return BlocConsumer;
  });
  bloc_consumer.BlocConsumer = bloc_consumer.BlocConsumer$();
  dart.addTypeTests(bloc_consumer.BlocConsumer, _is_BlocConsumer_default);
  var ___BlocConsumerState__bloc = dart.privateName(bloc_consumer, "_#_BlocConsumerState#_bloc");
  var _bloc$ = dart.privateName(bloc_consumer, "_bloc");
  const _is__BlocConsumerState_default = Symbol('_is__BlocConsumerState_default');
  bloc_consumer._BlocConsumerState$ = dart.generic((B, S) => {
    var __t$BlocConsumerOfB$S = () => (__t$BlocConsumerOfB$S = dart.constFn(bloc_consumer.BlocConsumer$(B, S)))();
    var __t$BTobool = () => (__t$BTobool = dart.constFn(dart.fnType(core.bool, [B])))();
    var __t$BlocBuilderOfB$S = () => (__t$BlocBuilderOfB$S = dart.constFn(bloc_builder.BlocBuilder$(B, S)))();
    var __t$BuildContextAndSToWidget = () => (__t$BuildContextAndSToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, S])))();
    var __t$SAndSTobool = () => (__t$SAndSTobool = dart.constFn(dart.fnType(core.bool, [S, S])))();
    var __t$SAndSToNbool = () => (__t$SAndSToNbool = dart.constFn(dart.nullable(__t$SAndSTobool())))();
    var __t$BuildContextAndSTovoid = () => (__t$BuildContextAndSTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, S])))();
    class _BlocConsumerState extends framework.State$(bloc_consumer.BlocConsumer$(B, S)) {
      get [_bloc$]() {
        let t3;
        t3 = this[___BlocConsumerState__bloc];
        return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_bloc")) : t3;
      }
      set [_bloc$](_bloc$35param) {
        this[___BlocConsumerState__bloc] = _bloc$35param;
      }
      initState() {
        let t3;
        super.initState();
        this[_bloc$] = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
      }
      didUpdateWidget(oldWidget) {
        let t3, t3$;
        __t$BlocConsumerOfB$S().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        let oldBloc = (t3 = oldWidget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        let currentBloc = (t3$ = this.widget.bloc, t3$ == null ? oldBloc : t3$);
        if (!oldBloc[$_equals](currentBloc)) this[_bloc$] = currentBloc;
      }
      didChangeDependencies() {
        let t3;
        super.didChangeDependencies();
        let bloc = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        if (!this[_bloc$][$_equals](bloc)) this[_bloc$] = bloc;
      }
      build(context) {
        if (this.widget.bloc == null) {
          provider$['SelectContext|select'](B, core.bool, context, dart.fn(bloc => this[_bloc$] === bloc, __t$BTobool()));
        }
        return new (__t$BlocBuilderOfB$S()).new({bloc: this[_bloc$], builder: __t$BuildContextAndSToWidget().as(this.widget.builder), buildWhen: dart.fn((previous, current) => {
            let t3, t3$, t5, t4, t3$0, t3$1, t3$2;
            if (dart.test((t3$ = (t3 = __t$SAndSToNbool().as(this.widget.listenWhen), t3 == null ? null : t3(previous, current)), t3$ == null ? true : t3$))) {
              t3$0 = this.widget;
              t4 = context;
              t5 = current;
              __t$BuildContextAndSTovoid().as(t3$0.listener)(t4, t5);
            }
            t3$2 = (t3$1 = __t$SAndSToNbool().as(this.widget.buildWhen), t3$1 == null ? null : t3$1(previous, current));
            return t3$2 == null ? true : t3$2;
          }, __t$SAndSTobool())});
      }
      static ['_#new#tearOff'](B, S) {
        return new (bloc_consumer._BlocConsumerState$(B, S)).new();
      }
    }
    (_BlocConsumerState.new = function() {
      this[___BlocConsumerState__bloc] = null;
      _BlocConsumerState.__proto__.new.call(this);
      ;
    }).prototype = _BlocConsumerState.prototype;
    dart.addTypeTests(_BlocConsumerState);
    _BlocConsumerState.prototype[_is__BlocConsumerState_default] = true;
    dart.addTypeCaches(_BlocConsumerState);
    dart.setMethodSignature(_BlocConsumerState, () => ({
      __proto__: dart.getMethods(_BlocConsumerState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_BlocConsumerState, () => ({
      __proto__: dart.getGetters(_BlocConsumerState.__proto__),
      [_bloc$]: B
    }));
    dart.setSetterSignature(_BlocConsumerState, () => ({
      __proto__: dart.getSetters(_BlocConsumerState.__proto__),
      [_bloc$]: B
    }));
    dart.setLibraryUri(_BlocConsumerState, I[8]);
    dart.setFieldSignature(_BlocConsumerState, () => ({
      __proto__: dart.getFields(_BlocConsumerState.__proto__),
      [___BlocConsumerState__bloc]: dart.fieldType(dart.nullable(B))
    }));
    return _BlocConsumerState;
  });
  bloc_consumer._BlocConsumerState = bloc_consumer._BlocConsumerState$();
  dart.addTypeTests(bloc_consumer._BlocConsumerState, _is__BlocConsumerState_default);
  var child$ = dart.privateName(bloc_listener, "BlocListenerBase.child");
  var bloc$2 = dart.privateName(bloc_listener, "BlocListenerBase.bloc");
  var listener$0 = dart.privateName(bloc_listener, "BlocListenerBase.listener");
  var listenWhen$0 = dart.privateName(bloc_listener, "BlocListenerBase.listenWhen");
  var _child = dart.privateName(nested, "SingleChildStatefulWidget._child");
  var _child$ = dart.privateName(nested, "_child");
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [_child$]() {
      return this[_child];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[9]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_BlocListenerBase_default = Symbol('_is_BlocListenerBase_default');
  bloc_listener.BlocListenerBase$ = dart.generic((B, S) => {
    var __t$_BlocListenerBaseStateOfB$S = () => (__t$_BlocListenerBaseStateOfB$S = dart.constFn(bloc_listener._BlocListenerBaseState$(B, S)))();
    class BlocListenerBase extends nested.SingleChildStatefulWidget {
      get child() {
        return this[child$];
      }
      set child(value) {
        super.child = value;
      }
      get bloc() {
        return this[bloc$2];
      }
      set bloc(value) {
        super.bloc = value;
      }
      get listener() {
        return this[listener$0];
      }
      set listener(value) {
        super.listener = value;
      }
      get listenWhen() {
        return this[listenWhen$0];
      }
      set listenWhen(value) {
        super.listenWhen = value;
      }
      createState() {
        return new (__t$_BlocListenerBaseStateOfB$S()).new();
      }
    }
    (BlocListenerBase.new = function(opts) {
      let listener = opts && 'listener' in opts ? opts.listener : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let listenWhen = opts && 'listenWhen' in opts ? opts.listenWhen : null;
      this[listener$0] = listener;
      this[bloc$2] = bloc;
      this[child$] = child;
      this[listenWhen$0] = listenWhen;
      BlocListenerBase.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = BlocListenerBase.prototype;
    dart.addTypeTests(BlocListenerBase);
    BlocListenerBase.prototype[_is_BlocListenerBase_default] = true;
    dart.addTypeCaches(BlocListenerBase);
    dart.setMethodSignature(BlocListenerBase, () => ({
      __proto__: dart.getMethods(BlocListenerBase.__proto__),
      createState: dart.fnType(nested.SingleChildState$(bloc_listener.BlocListenerBase$(B, S)), [])
    }));
    dart.setLibraryUri(BlocListenerBase, I[10]);
    dart.setFieldSignature(BlocListenerBase, () => ({
      __proto__: dart.getFields(BlocListenerBase.__proto__),
      child: dart.finalFieldType(dart.nullable(framework.Widget)),
      bloc: dart.finalFieldType(dart.nullable(B)),
      listener: dart.finalFieldType(dart.fnType(dart.void, [framework.BuildContext, S])),
      listenWhen: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [S, S])))
    }));
    return BlocListenerBase;
  });
  bloc_listener.BlocListenerBase = bloc_listener.BlocListenerBase$();
  dart.addTypeTests(bloc_listener.BlocListenerBase, _is_BlocListenerBase_default);
  const _is_BlocListener_default = Symbol('_is_BlocListener_default');
  bloc_listener.BlocListener$ = dart.generic((B, S) => {
    class BlocListener extends bloc_listener.BlocListenerBase$(B, S) {
      static ['_#new#tearOff'](B, S, opts) {
        let listener = opts && 'listener' in opts ? opts.listener : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let bloc = opts && 'bloc' in opts ? opts.bloc : null;
        let listenWhen = opts && 'listenWhen' in opts ? opts.listenWhen : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (bloc_listener.BlocListener$(B, S)).new({listener: listener, key: key, bloc: bloc, listenWhen: listenWhen, child: child});
      }
    }
    (BlocListener.new = function(opts) {
      let listener = opts && 'listener' in opts ? opts.listener : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      let listenWhen = opts && 'listenWhen' in opts ? opts.listenWhen : null;
      let child = opts && 'child' in opts ? opts.child : null;
      BlocListener.__proto__.new.call(this, {key: key, child: child, listener: listener, bloc: bloc, listenWhen: listenWhen});
      ;
    }).prototype = BlocListener.prototype;
    dart.addTypeTests(BlocListener);
    BlocListener.prototype[_is_BlocListener_default] = true;
    dart.addTypeCaches(BlocListener);
    dart.setLibraryUri(BlocListener, I[10]);
    return BlocListener;
  });
  bloc_listener.BlocListener = bloc_listener.BlocListener$();
  dart.addTypeTests(bloc_listener.BlocListener, _is_BlocListener_default);
  var _subscription = dart.privateName(bloc_listener, "_subscription");
  var ___BlocListenerBaseState__bloc = dart.privateName(bloc_listener, "_#_BlocListenerBaseState#_bloc");
  var ___BlocListenerBaseState__previousState = dart.privateName(bloc_listener, "_#_BlocListenerBaseState#_previousState");
  var ___BlocListenerBaseState__previousState_isSet = dart.privateName(bloc_listener, "_#_BlocListenerBaseState#_previousState#isSet");
  var _bloc$0 = dart.privateName(bloc_listener, "_bloc");
  var _previousState = dart.privateName(bloc_listener, "_previousState");
  var _subscribe = dart.privateName(bloc_listener, "_subscribe");
  var _unsubscribe = dart.privateName(bloc_listener, "_unsubscribe");
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[_child$]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[9]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__BlocListenerBaseState_default = Symbol('_is__BlocListenerBaseState_default');
  bloc_listener._BlocListenerBaseState$ = dart.generic((B, S) => {
    var __t$BlocListenerBaseOfB$S = () => (__t$BlocListenerBaseOfB$S = dart.constFn(bloc_listener.BlocListenerBase$(B, S)))();
    var __t$BTobool = () => (__t$BTobool = dart.constFn(dart.fnType(core.bool, [B])))();
    var __t$SAndSTobool = () => (__t$SAndSTobool = dart.constFn(dart.fnType(core.bool, [S, S])))();
    var __t$SAndSToNbool = () => (__t$SAndSToNbool = dart.constFn(dart.nullable(__t$SAndSTobool())))();
    var __t$BuildContextAndSTovoid = () => (__t$BuildContextAndSTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, S])))();
    var __t$STovoid = () => (__t$STovoid = dart.constFn(dart.fnType(dart.void, [S])))();
    class _BlocListenerBaseState extends nested.SingleChildState$(bloc_listener.BlocListenerBase$(B, S)) {
      get [_bloc$0]() {
        let t3;
        t3 = this[___BlocListenerBaseState__bloc];
        return t3 == null ? dart.throw(new _internal.LateError.fieldNI("_bloc")) : t3;
      }
      set [_bloc$0](_bloc$35param) {
        this[___BlocListenerBaseState__bloc] = _bloc$35param;
      }
      get [_previousState]() {
        let t3;
        return this[___BlocListenerBaseState__previousState_isSet] ? (t3 = this[___BlocListenerBaseState__previousState], t3) : dart.throw(new _internal.LateError.fieldNI("_previousState"));
      }
      set [_previousState](_previousState$35param) {
        this[___BlocListenerBaseState__previousState_isSet] = true;
        this[___BlocListenerBaseState__previousState] = _previousState$35param;
      }
      initState() {
        let t3;
        super.initState();
        this[_bloc$0] = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        this[_previousState] = this[_bloc$0].state;
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        let t3, t3$;
        __t$BlocListenerBaseOfB$S().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        let oldBloc = (t3 = oldWidget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        let currentBloc = (t3$ = this.widget.bloc, t3$ == null ? oldBloc : t3$);
        if (!oldBloc[$_equals](currentBloc)) {
          if (this[_subscription] != null) {
            this[_unsubscribe]();
            this[_bloc$0] = currentBloc;
            this[_previousState] = this[_bloc$0].state;
          }
          this[_subscribe]();
        }
      }
      didChangeDependencies() {
        let t3;
        super.didChangeDependencies();
        let bloc = (t3 = this.widget.bloc, t3 == null ? provider$['ReadContext|read'](B, this.context) : t3);
        if (!this[_bloc$0][$_equals](bloc)) {
          if (this[_subscription] != null) {
            this[_unsubscribe]();
            this[_bloc$0] = bloc;
            this[_previousState] = this[_bloc$0].state;
          }
          this[_subscribe]();
        }
      }
      buildWithChild(context, child) {
        if (!(child != null)) dart.assertFailed(dart.str(this.widget[$runtimeType]) + " used outside of MultiBlocListener must specify a child", I[11], 180, 7, "child != null");
        if (this.widget.bloc == null) {
          provider$['SelectContext|select'](B, core.bool, context, dart.fn(bloc => this[_bloc$0] === bloc, __t$BTobool()));
        }
        return dart.nullCheck(child);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        this[_subscription] = this[_bloc$0].stream.listen(dart.fn(state => {
          let t3, t3$, t5, t4, t3$0;
          if (dart.test((t3$ = (t3 = __t$SAndSToNbool().as(this.widget.listenWhen), t3 == null ? null : t3(this[_previousState], state)), t3$ == null ? true : t3$))) {
            t3$0 = this.widget;
            t4 = this.context;
            t5 = state;
            __t$BuildContextAndSTovoid().as(t3$0.listener)(t4, t5);
          }
          this[_previousState] = state;
        }, __t$STovoid()));
      }
      [_unsubscribe]() {
        let t3;
        t3 = this[_subscription];
        t3 == null ? null : t3.cancel();
        this[_subscription] = null;
      }
      static ['_#new#tearOff'](B, S) {
        return new (bloc_listener._BlocListenerBaseState$(B, S)).new();
      }
    }
    (_BlocListenerBaseState.new = function() {
      this[_subscription] = null;
      this[___BlocListenerBaseState__bloc] = null;
      this[___BlocListenerBaseState__previousState] = null;
      this[___BlocListenerBaseState__previousState_isSet] = false;
      _BlocListenerBaseState.__proto__.new.call(this);
      ;
    }).prototype = _BlocListenerBaseState.prototype;
    dart.addTypeTests(_BlocListenerBaseState);
    _BlocListenerBaseState.prototype[_is__BlocListenerBaseState_default] = true;
    dart.addTypeCaches(_BlocListenerBaseState);
    dart.setMethodSignature(_BlocListenerBaseState, () => ({
      __proto__: dart.getMethods(_BlocListenerBaseState.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_BlocListenerBaseState, () => ({
      __proto__: dart.getGetters(_BlocListenerBaseState.__proto__),
      [_bloc$0]: B,
      [_previousState]: S
    }));
    dart.setSetterSignature(_BlocListenerBaseState, () => ({
      __proto__: dart.getSetters(_BlocListenerBaseState.__proto__),
      [_bloc$0]: B,
      [_previousState]: S
    }));
    dart.setLibraryUri(_BlocListenerBaseState, I[10]);
    dart.setFieldSignature(_BlocListenerBaseState, () => ({
      __proto__: dart.getFields(_BlocListenerBaseState.__proto__),
      [_subscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(S))),
      [___BlocListenerBaseState__bloc]: dart.fieldType(dart.nullable(B)),
      [___BlocListenerBaseState__previousState]: dart.fieldType(dart.nullable(S)),
      [___BlocListenerBaseState__previousState_isSet]: dart.fieldType(core.bool)
    }));
    return _BlocListenerBaseState;
  });
  bloc_listener._BlocListenerBaseState = bloc_listener._BlocListenerBaseState$();
  dart.addTypeTests(bloc_listener._BlocListenerBaseState, _is__BlocListenerBaseState_default);
  var child$0 = dart.privateName(bloc_provider, "BlocProvider.child");
  var lazy$ = dart.privateName(bloc_provider, "BlocProvider.lazy");
  var _create = dart.privateName(bloc_provider, "BlocProvider._create");
  var _value = dart.privateName(bloc_provider, "BlocProvider._value");
  var _create$ = dart.privateName(bloc_provider, "_create");
  var _value$ = dart.privateName(bloc_provider, "_value");
  var _child$0 = dart.privateName(nested, "SingleChildStatelessWidget._child");
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[_child$]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child$0] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[9]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_BlocProvider_default = Symbol('_is_BlocProvider_default');
  bloc_provider.BlocProvider$ = dart.generic(T => {
    var __t$InheritedProviderOfT = () => (__t$InheritedProviderOfT = dart.constFn(provider$.InheritedProvider$(T)))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    class BlocProvider extends nested.SingleChildStatelessWidget {
      get child() {
        return this[child$0];
      }
      set child(value) {
        super.child = value;
      }
      get lazy() {
        return this[lazy$];
      }
      set lazy(value) {
        super.lazy = value;
      }
      get [_create$]() {
        return this[_create];
      }
      set [_create$](value) {
        super[_create$] = value;
      }
      get [_value$]() {
        return this[_value];
      }
      set [_value$](value) {
        super[_value$] = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let child = opts && 'child' in opts ? opts.child : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : true;
        return new (bloc_provider.BlocProvider$(T)).new({create: create, key: key, child: child, lazy: lazy});
      }
      static ['_#value#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (bloc_provider.BlocProvider$(T)).value({value: value, key: key, child: child});
      }
      static of(T, context, opts) {
        let listen = opts && 'listen' in opts ? opts.listen : false;
        try {
          return provider$.Provider.of(T, context, {listen: listen});
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (provider$.ProviderNotFoundException.is(e)) {
            if (!e.valueType._equals(dart.wrapType(T))) dart.rethrow(e$);
            dart.throw(assertions.FlutterError.new("        BlocProvider.of() called with a context that does not contain a " + dart.str(dart.wrapType(T)) + ".\n        No ancestor could be found starting from the context that was passed to BlocProvider.of<" + dart.str(dart.wrapType(T)) + ">().\n\n        This can happen if the context you used comes from a widget above the BlocProvider.\n\n        The context used was: " + dart.str(context) + "\n        "));
          } else
            throw e$;
        }
      }
      buildWithChild(context, child) {
        if (!(child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiBlocProvider must specify a child", I[12], 115, 7, "child != null");
        let value = this[_value$];
        return value != null ? new (__t$InheritedProviderOfT()).value({value: value, startListening: C[116] || CT.C116, lazy: this.lazy, child: child}) : new (__t$InheritedProviderOfT()).new({create: this[_create$], dispose: dart.fn((_, bloc) => bloc.close(), __t$BuildContextAndTTovoid()), startListening: C[116] || CT.C116, lazy: this.lazy, child: child});
      }
      static _startListening(e, value) {
        let subscription = value.stream.listen(dart.fn(_ => e.markNeedsNotifyDependents(), T$.dynamicTovoid()));
        return dart.bind(subscription, 'cancel');
      }
    }
    (BlocProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : true;
      this[child$0] = child;
      this[lazy$] = lazy;
      this[_create] = create;
      this[_value] = null;
      BlocProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = BlocProvider.prototype;
    (BlocProvider.value = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[child$0] = child;
      this[_value] = value;
      this[_create] = null;
      this[lazy$] = true;
      BlocProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = BlocProvider.prototype;
    dart.addTypeTests(BlocProvider);
    BlocProvider.prototype[_is_BlocProvider_default] = true;
    dart.addTypeCaches(BlocProvider);
    dart.setMethodSignature(BlocProvider, () => ({
      __proto__: dart.getMethods(BlocProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setStaticMethodSignature(BlocProvider, () => ['of', '_startListening']);
    dart.setLibraryUri(BlocProvider, I[13]);
    dart.setFieldSignature(BlocProvider, () => ({
      __proto__: dart.getFields(BlocProvider.__proto__),
      child: dart.finalFieldType(dart.nullable(framework.Widget)),
      lazy: dart.finalFieldType(core.bool),
      [_create$]: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      [_value$]: dart.finalFieldType(dart.nullable(T))
    }));
    return BlocProvider;
  });
  bloc_provider.BlocProvider = bloc_provider.BlocProvider$();
  dart.addTypeTests(bloc_provider.BlocProvider, _is_BlocProvider_default);
  var bloc$3 = dart.privateName(bloc_selector, "BlocSelector.bloc");
  var builder$1 = dart.privateName(bloc_selector, "BlocSelector.builder");
  var selector$0 = dart.privateName(bloc_selector, "BlocSelector.selector");
  const _is_BlocSelector_default = Symbol('_is_BlocSelector_default');
  bloc_selector.BlocSelector$ = dart.generic((B, S, T) => {
    var __t$_BlocSelectorStateOfB$S$T = () => (__t$_BlocSelectorStateOfB$S$T = dart.constFn(bloc_selector._BlocSelectorState$(B, S, T)))();
    class BlocSelector extends framework.StatefulWidget {
      get bloc() {
        return this[bloc$3];
      }
      set bloc(value) {
        super.bloc = value;
      }
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$0];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](B, S, T, opts) {
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let bloc = opts && 'bloc' in opts ? opts.bloc : null;
        return new (bloc_selector.BlocSelector$(B, S, T)).new({selector: selector, builder: builder, key: key, bloc: bloc});
      }
      createState() {
        return new (__t$_BlocSelectorStateOfB$S$T()).new();
      }
    }
    (BlocSelector.new = function(opts) {
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let bloc = opts && 'bloc' in opts ? opts.bloc : null;
      this[selector$0] = selector;
      this[builder$1] = builder;
      this[bloc$3] = bloc;
      BlocSelector.__proto__.new.call(this, {key: key});
      ;
    }).prototype = BlocSelector.prototype;
    dart.addTypeTests(BlocSelector);
    BlocSelector.prototype[_is_BlocSelector_default] = true;
    dart.addTypeCaches(BlocSelector);
    dart.setMethodSignature(BlocSelector, () => ({
      __proto__: dart.getMethods(BlocSelector.__proto__),
      createState: dart.fnType(framework.State$(bloc_selector.BlocSelector$(B, S, T)), [])
    }));
    dart.setLibraryUri(BlocSelector, I[14]);
    dart.setFieldSignature(BlocSelector, () => ({
      __proto__: dart.getFields(BlocSelector.__proto__),
      bloc: dart.finalFieldType(dart.nullable(B)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T])),
      selector: dart.finalFieldType(dart.fnType(T, [S]))
    }));
    return BlocSelector;
  });
  bloc_selector.BlocSelector = bloc_selector.BlocSelector$();
  dart.addTypeTests(bloc_selector.BlocSelector, _is_BlocSelector_default);
  var ___BlocSelectorState__bloc = dart.privateName(bloc_selector, "_#_BlocSelectorState#_bloc");
  var ___BlocSelectorState__state = dart.privateName(bloc_selector, "_#_BlocSelectorState#_state");
  var ___BlocSelectorState__state_isSet = dart.privateName(bloc_selector, "_#_BlocSelectorState#_state#isSet");
  var _bloc$1 = dart.privateName(bloc_selector, "_bloc");
  var _state$0 = dart.privateName(bloc_selector, "_state");
  const _is__BlocSelectorState_default = Symbol('_is__BlocSelectorState_default');
  bloc_selector._BlocSelectorState$ = dart.generic((B, S, T) => {
    var __t$BlocSelectorOfB$S$T = () => (__t$BlocSelectorOfB$S$T = dart.constFn(bloc_selector.BlocSelector$(B, S, T)))();
    var __t$BTobool = () => (__t$BTobool = dart.constFn(dart.fnType(core.bool, [B])))();
    var __t$BlocListenerOfB$S = () => (__t$BlocListenerOfB$S = dart.constFn(bloc_listener.BlocListener$(B, S)))();
    var __t$SToT = () => (__t$SToT = dart.constFn(dart.fnType(T, [S])))();
    var __t$BuildContextAndSTovoid = () => (__t$BuildContextAndSTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, S])))();
    var __t$BuildContextAndTToWidget = () => (__t$BuildContextAndTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T])))();
    class _BlocSelectorState extends framework.State$(bloc_selector.BlocSelector$(B, S, T)) {
      get [_bloc$1]() {
        let t4;
        t4 = this[___BlocSelectorState__bloc];
        return t4 == null ? dart.throw(new _internal.LateError.fieldNI("_bloc")) : t4;
      }
      set [_bloc$1](_bloc$35param) {
        this[___BlocSelectorState__bloc] = _bloc$35param;
      }
      get [_state$0]() {
        let t4;
        return this[___BlocSelectorState__state_isSet] ? (t4 = this[___BlocSelectorState__state], t4) : dart.throw(new _internal.LateError.fieldNI("_state"));
      }
      set [_state$0](_state$35param) {
        this[___BlocSelectorState__state_isSet] = true;
        this[___BlocSelectorState__state] = _state$35param;
      }
      initState() {
        let t4, t5, t4$;
        super.initState();
        this[_bloc$1] = (t4 = this.widget.bloc, t4 == null ? provider$['ReadContext|read'](B, this.context) : t4);
        this[_state$0] = (t4$ = this.widget, t5 = this[_bloc$1].state, __t$SToT().as(t4$.selector)(t5));
      }
      didUpdateWidget(oldWidget) {
        let t4, t4$, t5, t4$0;
        __t$BlocSelectorOfB$S$T().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        let oldBloc = (t4 = oldWidget.bloc, t4 == null ? provider$['ReadContext|read'](B, this.context) : t4);
        let currentBloc = (t4$ = this.widget.bloc, t4$ == null ? oldBloc : t4$);
        if (!oldBloc[$_equals](currentBloc)) {
          this[_bloc$1] = currentBloc;
          this[_state$0] = (t4$0 = this.widget, t5 = this[_bloc$1].state, __t$SToT().as(t4$0.selector)(t5));
        }
      }
      didChangeDependencies() {
        let t4, t5, t4$;
        super.didChangeDependencies();
        let bloc = (t4 = this.widget.bloc, t4 == null ? provider$['ReadContext|read'](B, this.context) : t4);
        if (!this[_bloc$1][$_equals](bloc)) {
          this[_bloc$1] = bloc;
          this[_state$0] = (t4$ = this.widget, t5 = this[_bloc$1].state, __t$SToT().as(t4$.selector)(t5));
        }
      }
      build(context) {
        let t6, t5, t4;
        if (this.widget.bloc == null) {
          provider$['SelectContext|select'](B, core.bool, context, dart.fn(bloc => this[_bloc$1] === bloc, __t$BTobool()));
        }
        return new (__t$BlocListenerOfB$S()).new({bloc: this[_bloc$1], listener: dart.fn((context, state) => {
            let t5, t4;
            let selectedState = (t4 = this.widget, t5 = state, __t$SToT().as(t4.selector)(t5));
            if (!dart.equals(this[_state$0], selectedState)) this.setState(dart.fn(() => this[_state$0] = selectedState, T$.VoidTovoid()));
          }, __t$BuildContextAndSTovoid()), child: (t4 = this.widget, t5 = context, t6 = this[_state$0], __t$BuildContextAndTToWidget().as(t4.builder)(t5, t6))});
      }
      static ['_#new#tearOff'](B, S, T) {
        return new (bloc_selector._BlocSelectorState$(B, S, T)).new();
      }
    }
    (_BlocSelectorState.new = function() {
      this[___BlocSelectorState__bloc] = null;
      this[___BlocSelectorState__state] = null;
      this[___BlocSelectorState__state_isSet] = false;
      _BlocSelectorState.__proto__.new.call(this);
      ;
    }).prototype = _BlocSelectorState.prototype;
    dart.addTypeTests(_BlocSelectorState);
    _BlocSelectorState.prototype[_is__BlocSelectorState_default] = true;
    dart.addTypeCaches(_BlocSelectorState);
    dart.setMethodSignature(_BlocSelectorState, () => ({
      __proto__: dart.getMethods(_BlocSelectorState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_BlocSelectorState, () => ({
      __proto__: dart.getGetters(_BlocSelectorState.__proto__),
      [_bloc$1]: B,
      [_state$0]: T
    }));
    dart.setSetterSignature(_BlocSelectorState, () => ({
      __proto__: dart.getSetters(_BlocSelectorState.__proto__),
      [_bloc$1]: B,
      [_state$0]: T
    }));
    dart.setLibraryUri(_BlocSelectorState, I[14]);
    dart.setFieldSignature(_BlocSelectorState, () => ({
      __proto__: dart.getFields(_BlocSelectorState.__proto__),
      [___BlocSelectorState__bloc]: dart.fieldType(dart.nullable(B)),
      [___BlocSelectorState__state]: dart.fieldType(dart.nullable(T)),
      [___BlocSelectorState__state_isSet]: dart.fieldType(core.bool)
    }));
    return _BlocSelectorState;
  });
  bloc_selector._BlocSelectorState = bloc_selector._BlocSelectorState$();
  dart.addTypeTests(bloc_selector._BlocSelectorState, _is__BlocSelectorState_default);
  var _children = dart.privateName(nested, "_children");
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[$isNotEmpty]) dart.assertFailed(null, I[15], 71, 16, "children.isNotEmpty");
    this[_children] = children;
    this[_child$] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[9]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [_children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[16]);
  multi_bloc_listener.MultiBlocListener = class MultiBlocListener extends provider$.MultiProvider {
    static ['_#new#tearOff'](opts) {
      let listeners = opts && 'listeners' in opts ? opts.listeners : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new multi_bloc_listener.MultiBlocListener.new({listeners: listeners, child: child, key: key});
    }
  };
  (multi_bloc_listener.MultiBlocListener.new = function(opts) {
    let listeners = opts && 'listeners' in opts ? opts.listeners : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let key = opts && 'key' in opts ? opts.key : null;
    multi_bloc_listener.MultiBlocListener.__proto__.new.call(this, {key: key, providers: listeners, child: child});
    ;
  }).prototype = multi_bloc_listener.MultiBlocListener.prototype;
  dart.addTypeTests(multi_bloc_listener.MultiBlocListener);
  dart.addTypeCaches(multi_bloc_listener.MultiBlocListener);
  dart.setLibraryUri(multi_bloc_listener.MultiBlocListener, I[17]);
  multi_bloc_provider.MultiBlocProvider = class MultiBlocProvider extends provider$.MultiProvider {
    static ['_#new#tearOff'](opts) {
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new multi_bloc_provider.MultiBlocProvider.new({providers: providers, child: child, key: key});
    }
  };
  (multi_bloc_provider.MultiBlocProvider.new = function(opts) {
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let key = opts && 'key' in opts ? opts.key : null;
    multi_bloc_provider.MultiBlocProvider.__proto__.new.call(this, {key: key, providers: providers, child: child});
    ;
  }).prototype = multi_bloc_provider.MultiBlocProvider.prototype;
  dart.addTypeTests(multi_bloc_provider.MultiBlocProvider);
  dart.addTypeCaches(multi_bloc_provider.MultiBlocProvider);
  dart.setLibraryUri(multi_bloc_provider.MultiBlocProvider, I[18]);
  multi_repository_provider.MultiRepositoryProvider = class MultiRepositoryProvider extends provider$.MultiProvider {
    static ['_#new#tearOff'](opts) {
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new multi_repository_provider.MultiRepositoryProvider.new({providers: providers, child: child, key: key});
    }
  };
  (multi_repository_provider.MultiRepositoryProvider.new = function(opts) {
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let key = opts && 'key' in opts ? opts.key : null;
    multi_repository_provider.MultiRepositoryProvider.__proto__.new.call(this, {key: key, providers: providers, child: child});
    ;
  }).prototype = multi_repository_provider.MultiRepositoryProvider.prototype;
  dart.addTypeTests(multi_repository_provider.MultiRepositoryProvider);
  dart.addTypeCaches(multi_repository_provider.MultiRepositoryProvider);
  dart.setLibraryUri(multi_repository_provider.MultiRepositoryProvider, I[19]);
  var builder$2 = dart.privateName(provider$, "InheritedProvider.builder");
  var _lazy = dart.privateName(provider$, "_lazy");
  var _delegate = dart.privateName(provider$, "_delegate");
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegate].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiProvider must specify a child", I[21], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      this[_lazy] = lazy;
      this[_delegate] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[16]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [_delegate]: dart.finalFieldType(provider$._Delegate$(T)),
      [_lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t5;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[20], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t5 = inheritedElement, t5 == null ? null : t5.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[20], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[20], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[20], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t5;
          t5 = provider$.Provider.debugCheckInvalidValueType;
          return t5 == null ? null : t5(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t5;
        t5 = provider$.Provider.debugCheckInvalidValueType;
        t5 == null ? null : t5(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[20], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[16]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[20], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  const _is_RepositoryProvider_default = Symbol('_is_RepositoryProvider_default');
  repository_provider.RepositoryProvider$ = dart.generic(T => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    class RepositoryProvider extends provider$.Provider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let child = opts && 'child' in opts ? opts.child : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        return new (repository_provider.RepositoryProvider$(T)).new({create: create, key: key, child: child, lazy: lazy});
      }
      static ['_#value#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let key = opts && 'key' in opts ? opts.key : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (repository_provider.RepositoryProvider$(T)).value({value: value, key: key, child: child});
      }
      static of(T, context, opts) {
        let listen = opts && 'listen' in opts ? opts.listen : false;
        try {
          return provider$.Provider.of(T, context, {listen: listen});
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (provider$.ProviderNotFoundException.is(e)) {
            if (!e.valueType._equals(dart.wrapType(T))) dart.rethrow(e$);
            dart.throw(assertions.FlutterError.new("        RepositoryProvider.of() called with a context that does not contain a repository of type " + dart.str(dart.wrapType(T)) + ".\n        No ancestor could be found starting from the context that was passed to RepositoryProvider.of<" + dart.str(dart.wrapType(T)) + ">().\n\n        This can happen if the context you used comes from a widget above the RepositoryProvider.\n\n        The context used was: " + dart.str(context) + "\n        "));
          } else
            throw e$;
        }
      }
    }
    (RepositoryProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      RepositoryProvider.__proto__.new.call(this, {key: key, create: create, dispose: dart.fn((_, __) => {
        }, __t$BuildContextAndTTovoid()), child: child, lazy: lazy});
      ;
    }).prototype = RepositoryProvider.prototype;
    (RepositoryProvider.value = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      RepositoryProvider.__proto__.value.call(this, {key: key, value: value, child: child});
      ;
    }).prototype = RepositoryProvider.prototype;
    dart.addTypeTests(RepositoryProvider);
    RepositoryProvider.prototype[_is_RepositoryProvider_default] = true;
    dart.addTypeCaches(RepositoryProvider);
    dart.setStaticMethodSignature(RepositoryProvider, () => ['of']);
    dart.setLibraryUri(RepositoryProvider, I[22]);
    return RepositoryProvider;
  });
  repository_provider.RepositoryProvider = repository_provider.RepositoryProvider$();
  dart.addTypeTests(repository_provider.RepositoryProvider, _is_RepositoryProvider_default);
  dart.defineLazy(colors$1, {
    /*colors$1.kWhite*/get kWhite() {
      return C[2] || CT.C2;
    },
    /*colors$1.kBlack*/get kBlack() {
      return C[3] || CT.C3;
    },
    /*colors$1.kTransparent*/get kTransparent() {
      return C[4] || CT.C4;
    },
    /*colors$1.kRed*/get kRed() {
      return C[5] || CT.C5;
    },
    /*colors$1.kGreen*/get kGreen() {
      return C[17] || CT.C17;
    },
    /*colors$1.kBlue*/get kBlue() {
      return C[29] || CT.C29;
    },
    /*colors$1.kYellow*/get kYellow() {
      return C[41] || CT.C41;
    },
    /*colors$1.kGrey*/get kGrey() {
      return C[53] || CT.C53;
    },
    /*colors$1.kAppPrimary*/get kAppPrimary() {
      return C[67] || CT.C67;
    },
    /*colors$1.kAppPrimaryDark*/get kAppPrimaryDark() {
      return C[79] || CT.C79;
    },
    /*colors$1.kAppPrimaryDark2*/get kAppPrimaryDark2() {
      return C[80] || CT.C80;
    },
    /*colors$1.kAppPrimaryLight*/get kAppPrimaryLight() {
      return C[81] || CT.C81;
    },
    /*colors$1.kAppSecondary*/get kAppSecondary() {
      return C[82] || CT.C82;
    },
    /*colors$1.kAppSecondaryLight*/get kAppSecondaryLight() {
      return C[83] || CT.C83;
    },
    /*colors$1.kAppBiruDark*/get kAppBiruDark() {
      return C[84] || CT.C84;
    },
    /*colors$1.kAppBiruLight*/get kAppBiruLight() {
      return new ui.Color.new(4278235065);
    },
    /*colors$1.kAppKuning*/get kAppKuning() {
      return C[85] || CT.C85;
    },
    /*colors$1.kAppCoklat*/get kAppCoklat() {
      return C[86] || CT.C86;
    },
    /*colors$1.kAppMerah*/get kAppMerah() {
      return C[87] || CT.C87;
    },
    /*colors$1.kAppGrey*/get kAppGrey() {
      return C[57] || CT.C57;
    },
    /*colors$1.kBgPrimary*/get kBgPrimary() {
      return C[88] || CT.C88;
    },
    /*colors$1.kBgSecondary*/get kBgSecondary() {
      return C[89] || CT.C89;
    },
    /*colors$1.kBgSuccess*/get kBgSuccess() {
      return C[90] || CT.C90;
    },
    /*colors$1.kBgDanger*/get kBgDanger() {
      return C[91] || CT.C91;
    },
    /*colors$1.kBgWarning*/get kBgWarning() {
      return C[92] || CT.C92;
    },
    /*colors$1.kBgInfo*/get kBgInfo() {
      return C[93] || CT.C93;
    },
    /*colors$1.kBgLight*/get kBgLight() {
      return C[94] || CT.C94;
    },
    /*colors$1.kBgDark*/get kBgDark() {
      return C[95] || CT.C95;
    },
    /*colors$1.kAppGradientPrim*/get kAppGradientPrim() {
      return C[96] || CT.C96;
    },
    /*colors$1.kPrimaryGradient*/get kPrimaryGradient() {
      return C[101] || CT.C101;
    }
  }, false);
  dart.defineLazy(constants$, {
    /*constants$.dbName*/get dbName() {
      return "dbName.db";
    },
    /*constants$.APP_NAME*/get APP_NAME() {
      return "V-Log";
    },
    /*constants$.APP_DESC*/get APP_DESC() {
      return "Visitor Log";
    },
    /*constants$.TAG_LINE*/get TAG_LINE() {
      return "Will never miss";
    },
    /*constants$.WA_ADMIN*/get WA_ADMIN() {
      return "971562681844";
    },
    /*constants$.APP_VERSI*/get APP_VERSI() {
      return "2.2111.6";
    },
    /*constants$.BASE_URL*/get BASE_URL() {
      return "https://study-alone.000webhostapp.com/";
    },
    /*constants$.TIME_OUT_DURATION*/get TIME_OUT_DURATION() {
      return 30;
    },
    /*constants$.tableCategoryName*/get tableCategoryName() {
      return "Category";
    },
    /*constants$.colMainCategoryId*/get colMainCategoryId() {
      return "ID";
    },
    /*constants$.colMainCategoryName*/get colMainCategoryName() {
      return "Name";
    },
    /*constants$.colMainCategoryImage*/get colMainCategoryImage() {
      return "Image";
    },
    /*constants$.tableQuestionName*/get tableQuestionName() {
      return "Question";
    },
    /*constants$.colQuestionId*/get colQuestionId() {
      return "ID";
    },
    /*constants$.colQuestionText*/get colQuestionText() {
      return "QuestionText";
    },
    /*constants$.colQuestionIsImage*/get colQuestionIsImage() {
      return "IsImageQuestion";
    },
    /*constants$.colQuestionImage*/get colQuestionImage() {
      return "QuestionImage";
    },
    /*constants$.colQuestionAnswerA*/get colQuestionAnswerA() {
      return "AnswerA";
    },
    /*constants$.colQuestionAnswerB*/get colQuestionAnswerB() {
      return "AnswerB";
    },
    /*constants$.colQuestionAnswerC*/get colQuestionAnswerC() {
      return "AnswerC";
    },
    /*constants$.colQuestionAnswerD*/get colQuestionAnswerD() {
      return "AnswerD";
    },
    /*constants$.colQuestionCorrectAnswer*/get colQuestionCorrectAnswer() {
      return "CorrectAnswer";
    },
    /*constants$.colQuestionCategoryId*/get colQuestionCategoryId() {
      return "CategoryID";
    },
    /*constants$.sSuccess*/get sSuccess() {
      return "Great";
    },
    /*constants$.sFail*/get sFail() {
      return "Failed";
    },
    /*constants$.sError*/get sError() {
      return "Eror";
    },
    /*constants$.sMsgSuccessExecution*/get sMsgSuccessExecution() {
      return "Process sucessfully executed";
    },
    /*constants$.sMsgSuccessAddData*/get sMsgSuccessAddData() {
      return "New data sucessfully added";
    },
    /*constants$.sMsgSuccessUpdateData*/get sMsgSuccessUpdateData() {
      return "Data sucessfully updated";
    },
    /*constants$.sMsgSuccessDeleteData*/get sMsgSuccessDeleteData() {
      return "Data sucessfully deleted";
    },
    /*constants$.sMsgFailExecution*/get sMsgFailExecution() {
      return "Process failed to be executed";
    },
    /*constants$.sMsgFailAddData*/get sMsgFailAddData() {
      return "New data failed to be added";
    },
    /*constants$.sMsgFailUpdateData*/get sMsgFailUpdateData() {
      return "Data failed to be updated";
    },
    /*constants$.sMsgFailDeleteData*/get sMsgFailDeleteData() {
      return "Data failed to be deleted";
    },
    /*constants$.sAuthFail*/get sAuthFail() {
      return "User ID is not registered, or Wrong Password!";
    },
    /*constants$.kEmailValidatorRegExp*/get kEmailValidatorRegExp() {
      return core.RegExp.new("^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[a-zA-Z]+");
    },
    /*constants$.kUserNullError*/get kUserNullError() {
      return "Please Enter your User ID";
    },
    /*constants$.kPassNullError*/get kPassNullError() {
      return "Please Enter your Password";
    },
    /*constants$.kEmailNullError*/get kEmailNullError() {
      return "Please Enter Valid Email";
    },
    /*constants$.kInvalidEmailError*/get kInvalidEmailError() {
      return "Please Enter Valid Email";
    },
    /*constants$.kFieldNullError*/get kFieldNullError() {
      return "The field cannot be empty";
    },
    /*constants$.kShortPassError*/get kShortPassError() {
      return "Password is too short";
    },
    /*constants$.kMatchPassError*/get kMatchPassError() {
      return "Passwords doesn't match";
    },
    /*constants$.kNamelNullError*/get kNamelNullError() {
      return "Please Enter your name";
    },
    /*constants$.kPhoneNumberNullError*/get kPhoneNumberNullError() {
      return "Please Enter your phone number";
    },
    /*constants$.kAddressNullError*/get kAddressNullError() {
      return "Please Enter your address";
    }
  }, false);
  dart.defineLazy(durations$, {
    /*durations$.kAnimationDuration*/get kAnimationDuration() {
      return C[105] || CT.C105;
    },
    /*durations$.kDefaultDuration*/get kDefaultDuration() {
      return C[106] || CT.C106;
    }
  }, false);
  dart.defineLazy(keys$, {
    /*keys$.API_KEY*/get API_KEY() {
      return "AIzaSyClb4GDpsXDFSvWumM4vyFj7dMT2ShTWak";
    }
  }, false);
  dart.defineLazy(sizes$, {
    /*sizes$.kDefaultPadding*/get kDefaultPadding() {
      return 16;
    },
    /*sizes$.kMobileWidth*/get kMobileWidth() {
      return 600;
    },
    /*sizes$.kTabletWidth*/get kTabletWidth() {
      return 1200;
    },
    /*sizes$.kTabletBreakpointWidth*/get kTabletBreakpointWidth() {
      return 768;
    },
    /*sizes$.kDesktopBreakpointWidth*/get kDesktopBreakpointWidth() {
      return 1440;
    },
    /*sizes$.kSideMenuWidth*/get kSideMenuWidth() {
      return 300;
    },
    /*sizes$.kNavigationRailWidth*/get kNavigationRailWidth() {
      return 72;
    }
  }, false);
  styles$.outlineInputBorder = function outlineInputBorder$() {
    return new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(15), borderSide: new borders.BorderSide.new({color: colors$1.kAppPrimary})});
  };
  dart.defineLazy(styles$, {
    /*styles$.kDefaultShadow*/get kDefaultShadow() {
      return C[107] || CT.C107;
    },
    /*styles$.kTextStyle*/get kTextStyle() {
      return C[111] || CT.C111;
    },
    /*styles$.kHeadingStyle*/get kHeadingStyle() {
      return new text_style.TextStyle.new({fontSize: 21, fontWeight: ui.FontWeight.bold, color: colors.Colors.black, height: 1.5});
    },
    /*styles$.otpInputDecoration*/get otpInputDecoration() {
      return new input_decorator.InputDecoration.new({contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 15}), border: styles$.outlineInputBorder(), focusedBorder: styles$.outlineInputBorder(), enabledBorder: styles$.outlineInputBorder()});
    }
  }, false);
  themes$.MyThemes = class MyThemes extends core.Object {
    static ['_#new#tearOff']() {
      return new themes$.MyThemes.new();
    }
  };
  (themes$.MyThemes.new = function() {
    ;
  }).prototype = themes$.MyThemes.prototype;
  dart.addTypeTests(themes$.MyThemes);
  dart.addTypeCaches(themes$.MyThemes);
  dart.setLibraryUri(themes$.MyThemes, I[23]);
  dart.setStaticFieldSignature(themes$.MyThemes, () => ['lightMode', 'darkMode']);
  dart.defineLazy(themes$.MyThemes, {
    /*themes$.MyThemes.lightMode*/get lightMode() {
      return theme_data.ThemeData.new({primarySwatch: colors$1.kAppPrimary, primaryColor: colors$1.kAppPrimary, brightness: ui.Brightness.light, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    },
    /*themes$.MyThemes.darkMode*/get darkMode() {
      return theme_data.ThemeData.new({primarySwatch: colors.Colors.red, primaryColor: new ui.Color.new(4293947751), brightness: ui.Brightness.dark, fontFamily: "Poppins", inputDecorationTheme: new input_decorator.InputDecorationTheme.new({border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(20), borderSide: borders.BorderSide.none}), filled: true, fillColor: colors.Colors.grey.withOpacity(0.1)})});
    }
  }, false);
  grocery_bloc$.GroceryEvent = class GroceryEvent extends core.Object {};
  (grocery_bloc$.GroceryEvent.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryEvent.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryEvent);
  dart.addTypeCaches(grocery_bloc$.GroceryEvent);
  dart.setLibraryUri(grocery_bloc$.GroceryEvent, I[24]);
  grocery_bloc$.GroceryState = class GroceryState extends core.Object {};
  (grocery_bloc$.GroceryState.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryState.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryState);
  dart.addTypeCaches(grocery_bloc$.GroceryState);
  dart.setLibraryUri(grocery_bloc$.GroceryState, I[24]);
  grocery_bloc$.GroceryBloc = class GroceryBloc extends bloc$.Bloc$(grocery_bloc$.GroceryEvent, grocery_bloc$.GroceryState) {
    static ['_#new#tearOff']() {
      return new grocery_bloc$.GroceryBloc.new();
    }
    handleGoceryInitialEvent(event, emit) {
      return async.async(dart.void, function* handleGoceryInitialEvent() {
        core.print("handleGoceryInitialEvent Clicked");
      });
    }
    handleAddGocery(event, emit) {
      return async.async(dart.void, function* handleAddGocery() {
        dart.dcall(emit, [new grocery_bloc$.GroceryLoadingState.new()]);
        yield async.Future.delayed(new core.Duration.new({seconds: 3}));
        dart.dcall(emit, [new grocery_bloc$.GroceryAddedState.new({data: grocery_mdl$.GroceryData.groceryItems[$map](grocery_mdl$.GroceryModel, dart.fn(e => new grocery_mdl$.GroceryModel.new({id: core.String.as(e[$_get]("id")), name: core.String.as(e[$_get]("name")), description: core.String.as(e[$_get]("description")), price: core.double.as(e[$_get]("price")), imageUrl: core.String.as(e[$_get]("imageUrl"))}), T$.MapOfString$dynamicToGroceryModel$1()))[$toList]()})]);
      });
    }
  };
  (grocery_bloc$.GroceryBloc.new = function() {
    grocery_bloc$.GroceryBloc.__proto__.new.call(this, new grocery_bloc$.GroceryInitialState.new());
    this.on(grocery_bloc$.GroceryInitialEvent, dart.bind(this, 'handleGoceryInitialEvent'));
    this.on(grocery_bloc$.GroceryAddEvent, dart.bind(this, 'handleAddGocery'));
  }).prototype = grocery_bloc$.GroceryBloc.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryBloc);
  dart.addTypeCaches(grocery_bloc$.GroceryBloc);
  dart.setMethodSignature(grocery_bloc$.GroceryBloc, () => ({
    __proto__: dart.getMethods(grocery_bloc$.GroceryBloc.__proto__),
    handleGoceryInitialEvent: dart.fnType(async.Future$(dart.void), [dart.dynamic, dart.dynamic]),
    handleAddGocery: dart.fnType(async.Future$(dart.void), [dart.dynamic, dart.dynamic])
  }));
  dart.setLibraryUri(grocery_bloc$.GroceryBloc, I[24]);
  grocery_bloc$.GroceryInitialEvent = class GroceryInitialEvent extends grocery_bloc$.GroceryEvent {
    static ['_#new#tearOff']() {
      return new grocery_bloc$.GroceryInitialEvent.new();
    }
  };
  (grocery_bloc$.GroceryInitialEvent.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryInitialEvent.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryInitialEvent);
  dart.addTypeCaches(grocery_bloc$.GroceryInitialEvent);
  dart.setLibraryUri(grocery_bloc$.GroceryInitialEvent, I[24]);
  grocery_bloc$.GroceryAddEvent = class GroceryAddEvent extends grocery_bloc$.GroceryEvent {
    static ['_#new#tearOff']() {
      return new grocery_bloc$.GroceryAddEvent.new();
    }
  };
  (grocery_bloc$.GroceryAddEvent.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryAddEvent.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryAddEvent);
  dart.addTypeCaches(grocery_bloc$.GroceryAddEvent);
  dart.setLibraryUri(grocery_bloc$.GroceryAddEvent, I[24]);
  grocery_bloc$.GroceryInitialState = class GroceryInitialState extends grocery_bloc$.GroceryState {
    static ['_#new#tearOff']() {
      return new grocery_bloc$.GroceryInitialState.new();
    }
  };
  (grocery_bloc$.GroceryInitialState.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryInitialState.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryInitialState);
  dart.addTypeCaches(grocery_bloc$.GroceryInitialState);
  dart.setLibraryUri(grocery_bloc$.GroceryInitialState, I[24]);
  grocery_bloc$.GroceryLoadingState = class GroceryLoadingState extends grocery_bloc$.GroceryState {
    static ['_#new#tearOff']() {
      return new grocery_bloc$.GroceryLoadingState.new();
    }
  };
  (grocery_bloc$.GroceryLoadingState.new = function() {
    ;
  }).prototype = grocery_bloc$.GroceryLoadingState.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryLoadingState);
  dart.addTypeCaches(grocery_bloc$.GroceryLoadingState);
  dart.setLibraryUri(grocery_bloc$.GroceryLoadingState, I[24]);
  var data$0 = dart.privateName(grocery_bloc$, "GroceryAddedState.data");
  grocery_bloc$.GroceryAddedState = class GroceryAddedState extends grocery_bloc$.GroceryState {
    get data() {
      return this[data$0];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let data = opts && 'data' in opts ? opts.data : null;
      return new grocery_bloc$.GroceryAddedState.new({data: data});
    }
  };
  (grocery_bloc$.GroceryAddedState.new = function(opts) {
    let data = opts && 'data' in opts ? opts.data : null;
    this[data$0] = data;
    ;
  }).prototype = grocery_bloc$.GroceryAddedState.prototype;
  dart.addTypeTests(grocery_bloc$.GroceryAddedState);
  dart.addTypeCaches(grocery_bloc$.GroceryAddedState);
  dart.setLibraryUri(grocery_bloc$.GroceryAddedState, I[24]);
  dart.setFieldSignature(grocery_bloc$.GroceryAddedState, () => ({
    __proto__: dart.getFields(grocery_bloc$.GroceryAddedState.__proto__),
    data: dart.finalFieldType(core.List$(grocery_mdl$.GroceryModel))
  }));
  var id$0 = dart.privateName(grocery_mdl$, "GroceryModel.id");
  var name$0 = dart.privateName(grocery_mdl$, "GroceryModel.name");
  var description$0 = dart.privateName(grocery_mdl$, "GroceryModel.description");
  var price$0 = dart.privateName(grocery_mdl$, "GroceryModel.price");
  var imageUrl$0 = dart.privateName(grocery_mdl$, "GroceryModel.imageUrl");
  grocery_mdl$.GroceryModel = class GroceryModel extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    get name() {
      return this[name$0];
    }
    set name(value) {
      super.name = value;
    }
    get description() {
      return this[description$0];
    }
    set description(value) {
      super.description = value;
    }
    get price() {
      return this[price$0];
    }
    set price(value) {
      super.price = value;
    }
    get imageUrl() {
      return this[imageUrl$0];
    }
    set imageUrl(value) {
      super.imageUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let price = opts && 'price' in opts ? opts.price : null;
      let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
      return new grocery_mdl$.GroceryModel.new({id: id, name: name, description: description, price: price, imageUrl: imageUrl});
    }
  };
  (grocery_mdl$.GroceryModel.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let price = opts && 'price' in opts ? opts.price : null;
    let imageUrl = opts && 'imageUrl' in opts ? opts.imageUrl : null;
    this[id$0] = id;
    this[name$0] = name;
    this[description$0] = description;
    this[price$0] = price;
    this[imageUrl$0] = imageUrl;
    ;
  }).prototype = grocery_mdl$.GroceryModel.prototype;
  dart.addTypeTests(grocery_mdl$.GroceryModel);
  dart.addTypeCaches(grocery_mdl$.GroceryModel);
  dart.setLibraryUri(grocery_mdl$.GroceryModel, I[25]);
  dart.setFieldSignature(grocery_mdl$.GroceryModel, () => ({
    __proto__: dart.getFields(grocery_mdl$.GroceryModel.__proto__),
    id: dart.finalFieldType(core.String),
    name: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    price: dart.finalFieldType(core.double),
    imageUrl: dart.finalFieldType(core.String)
  }));
  grocery_mdl$.GroceryData = class GroceryData extends core.Object {
    static ['_#new#tearOff']() {
      return new grocery_mdl$.GroceryData.new();
    }
  };
  (grocery_mdl$.GroceryData.new = function() {
    ;
  }).prototype = grocery_mdl$.GroceryData.prototype;
  dart.addTypeTests(grocery_mdl$.GroceryData);
  dart.addTypeCaches(grocery_mdl$.GroceryData);
  dart.setLibraryUri(grocery_mdl$.GroceryData, I[25]);
  dart.setStaticFieldSignature(grocery_mdl$.GroceryData, () => ['groceryItems']);
  dart.defineLazy(grocery_mdl$.GroceryData, {
    /*grocery_mdl$.GroceryData.groceryItems*/get groceryItems() {
      return T$.JSArrayOfMapOfString$dynamic().of([new (T$.IdentityMapOfString$dynamic()).from(["id", "1", "name", "Bananas", "description", "Fresh bananas from Ecuador", "price", 0.49, "imageUrl", "https://cdn.shopify.com/s/files/1/0258/4307/3103/products/asset_2_800x.jpg?v=1571839043"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "2", "name", "Grapes", "description", "Organic, locally grown apples", "price", 1.99, "imageUrl", "https://www.jiomart.com/images/product/original/590000452/sharad-seedless-grapes-1-kg-product-images-o590000452-p590116963-0-202203171004.jpg"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "3", "name", "Bread", "description", "Brown Bread, Tasty", "price", 2.49, "imageUrl", "https://thumbs.dreamstime.com/b/bread-cut-14027607.jpg"]), new (T$.IdentityMapOfString$dynamic()).from(["id", "4", "name", "Brown Eggs", "description", "Farm-fresh brown eggs", "price", 3.99, "imageUrl", "https://cdn.britannica.com/94/151894-050-F72A5317/Brown-eggs.jpg"])]);
    },
    set groceryItems(value) {}
  }, false);
  dashboard_pg$.DashboardPage = class DashboardPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new dashboard_pg$.DashboardPage.new({key: key});
    }
    createState() {
      return new dashboard_pg$._DashboardPageState.new();
    }
  };
  (dashboard_pg$.DashboardPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    dashboard_pg$.DashboardPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = dashboard_pg$.DashboardPage.prototype;
  dart.addTypeTests(dashboard_pg$.DashboardPage);
  dart.addTypeCaches(dashboard_pg$.DashboardPage);
  dart.setMethodSignature(dashboard_pg$.DashboardPage, () => ({
    __proto__: dart.getMethods(dashboard_pg$.DashboardPage.__proto__),
    createState: dart.fnType(framework.State$(dashboard_pg$.DashboardPage), [])
  }));
  dart.setLibraryUri(dashboard_pg$.DashboardPage, I[26]);
  dashboard_pg$._DashboardPageState = class _DashboardPageState extends framework.State$(dashboard_pg$.DashboardPage) {
    build(context) {
      let size = media_query.MediaQuery.of(context).size;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Zapp with BLoC")}), body: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: C[115] || CT.C115, child: new container.Container.new({height: 300, decoration: new box_decoration.BoxDecoration.new({color: colors$1.kAppPrimary._get(200), borderRadius: new border_radius.BorderRadius.circular(16)}), child: new basic.Center.new({child: new text.Text.new("Welcome User")})})}), new container.Container.new({margin: new edge_insets.EdgeInsets.only({top: 20}), width: size.width * 0.8, child: button_wdg.MyButtons.primaryOutlined(context, "Click Me", dart.fn(() => {
                this.groceryBloc.add(new grocery_bloc$.GroceryInitialEvent.new());
              }, T$.VoidToNull()))})])})});
    }
    static ['_#new#tearOff']() {
      return new dashboard_pg$._DashboardPageState.new();
    }
  };
  (dashboard_pg$._DashboardPageState.new = function() {
    this.groceryBloc = new grocery_bloc$.GroceryBloc.new();
    dashboard_pg$._DashboardPageState.__proto__.new.call(this);
    ;
  }).prototype = dashboard_pg$._DashboardPageState.prototype;
  dart.addTypeTests(dashboard_pg$._DashboardPageState);
  dart.addTypeCaches(dashboard_pg$._DashboardPageState);
  dart.setMethodSignature(dashboard_pg$._DashboardPageState, () => ({
    __proto__: dart.getMethods(dashboard_pg$._DashboardPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dashboard_pg$._DashboardPageState, I[26]);
  dart.setFieldSignature(dashboard_pg$._DashboardPageState, () => ({
    __proto__: dart.getFields(dashboard_pg$._DashboardPageState.__proto__),
    groceryBloc: dart.finalFieldType(grocery_bloc$.GroceryBloc)
  }));
  button_wdg.MyButtons = class MyButtons extends core.Object {
    static showMyButtons(context, label, txColor, bgColor, $function, opts) {
      let outlined = opts && 'outlined' in opts ? opts.outlined : null;
      let gradiented = opts && 'gradiented' in opts ? opts.gradiented : null;
      return new material_button.MaterialButton.new({onPressed: $function, child: new container.Container.new({alignment: alignment.Alignment.center, padding: new edge_insets.EdgeInsets.all(16 * 0.5), decoration: new box_decoration.BoxDecoration.new({color: outlined ? colors$1.kTransparent : bgColor, gradient: gradiented ? colors$1.kAppGradientPrim : null, borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(10)), border: outlined ? box_border.Border.all({color: bgColor, width: 2}) : null}), child: new text.Text.new(label, {style: widgets_hlp.getFont(16, {color: txColor})})})});
    }
    static primary(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kBlack, colors$1.kAppPrimary, $function, {outlined: false, gradiented: false});
    }
    static warning(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kBlack, colors$1.kBgWarning, $function, {outlined: false, gradiented: false});
    }
    static danger(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kWhite, colors$1.kRed, $function, {outlined: false, gradiented: false});
    }
    static primaryOutlined(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kBlack, colors$1.kAppPrimary, $function, {outlined: true, gradiented: false});
    }
    static dangerOutlined(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kRed, colors$1.kRed, $function, {outlined: true, gradiented: false});
    }
    static primaryGradiented(context, label, $function) {
      return button_wdg.MyButtons.showMyButtons(context, label, colors$1.kBlack, colors$1.kAppPrimary, $function, {outlined: false, gradiented: true});
    }
    static ['_#new#tearOff']() {
      return new button_wdg.MyButtons.new();
    }
  };
  (button_wdg.MyButtons.new = function() {
    ;
  }).prototype = button_wdg.MyButtons.prototype;
  dart.addTypeTests(button_wdg.MyButtons);
  dart.addTypeCaches(button_wdg.MyButtons);
  dart.setStaticMethodSignature(button_wdg.MyButtons, () => ['showMyButtons', 'primary', 'warning', 'danger', 'primaryOutlined', 'dangerOutlined', 'primaryGradiented']);
  dart.setLibraryUri(button_wdg.MyButtons, I[27]);
  const _is_BlocEventSink_default = Symbol('_is_BlocEventSink_default');
  bloc$.BlocEventSink$ = dart.generic(Event => {
    class BlocEventSink extends core.Object {}
    (BlocEventSink.new = function() {
      ;
    }).prototype = BlocEventSink.prototype;
    dart.addTypeTests(BlocEventSink);
    BlocEventSink.prototype[_is_BlocEventSink_default] = true;
    dart.addTypeCaches(BlocEventSink);
    BlocEventSink[dart.implements] = () => [bloc$.ErrorSink];
    dart.setLibraryUri(BlocEventSink, I[3]);
    return BlocEventSink;
  });
  bloc$.BlocEventSink = bloc$.BlocEventSink$();
  dart.addTypeTests(bloc$.BlocEventSink, _is_BlocEventSink_default);
  var isType$ = dart.privateName(bloc$, "_Handler.isType");
  var type$ = dart.privateName(bloc$, "_Handler.type");
  bloc$._Handler = class _Handler extends core.Object {
    get isType() {
      return this[isType$];
    }
    set isType(value) {
      super.isType = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    static ['_#new#tearOff'](opts) {
      let isType = opts && 'isType' in opts ? opts.isType : null;
      let type = opts && 'type' in opts ? opts.type : null;
      return new bloc$._Handler.new({isType: isType, type: type});
    }
  };
  (bloc$._Handler.new = function(opts) {
    let isType = opts && 'isType' in opts ? opts.isType : null;
    let type = opts && 'type' in opts ? opts.type : null;
    this[isType$] = isType;
    this[type$] = type;
    ;
  }).prototype = bloc$._Handler.prototype;
  dart.addTypeTests(bloc$._Handler);
  dart.addTypeCaches(bloc$._Handler);
  dart.setLibraryUri(bloc$._Handler, I[3]);
  dart.setFieldSignature(bloc$._Handler, () => ({
    __proto__: dart.getFields(bloc$._Handler.__proto__),
    isType: dart.finalFieldType(dart.fnType(core.bool, [dart.dynamic])),
    type: dart.finalFieldType(core.Type)
  }));
  bloc_observer.BlocObserver = class BlocObserver extends core.Object {
    onCreate(bloc) {
    }
    onEvent(bloc, event) {
    }
    onChange(bloc, change) {
    }
    onTransition(bloc, transition) {
    }
    onError(bloc, error, stackTrace) {
    }
    onClose(bloc) {
    }
  };
  (bloc_observer.BlocObserver.new = function() {
    ;
  }).prototype = bloc_observer.BlocObserver.prototype;
  dart.addTypeTests(bloc_observer.BlocObserver);
  dart.addTypeCaches(bloc_observer.BlocObserver);
  dart.setMethodSignature(bloc_observer.BlocObserver, () => ({
    __proto__: dart.getMethods(bloc_observer.BlocObserver.__proto__),
    onCreate: dart.fnType(dart.void, [bloc$.BlocBase]),
    onEvent: dart.fnType(dart.void, [bloc$.Bloc, dart.nullable(core.Object)]),
    onChange: dart.fnType(dart.void, [bloc$.BlocBase, change.Change]),
    onTransition: dart.fnType(dart.void, [bloc$.Bloc, transition.Transition]),
    onError: dart.fnType(dart.void, [bloc$.BlocBase, core.Object, core.StackTrace]),
    onClose: dart.fnType(dart.void, [bloc$.BlocBase])
  }));
  dart.setLibraryUri(bloc_observer.BlocObserver, I[28]);
  bloc$._DefaultBlocObserver = class _DefaultBlocObserver extends bloc_observer.BlocObserver {
    static ['_#new#tearOff']() {
      return new bloc$._DefaultBlocObserver.new();
    }
  };
  (bloc$._DefaultBlocObserver.new = function() {
    bloc$._DefaultBlocObserver.__proto__.new.call(this);
    ;
  }).prototype = bloc$._DefaultBlocObserver.prototype;
  dart.addTypeTests(bloc$._DefaultBlocObserver);
  dart.addTypeCaches(bloc$._DefaultBlocObserver);
  dart.setLibraryUri(bloc$._DefaultBlocObserver, I[3]);
  const _is__FlatMapStreamTransformer_default = Symbol('_is__FlatMapStreamTransformer_default');
  bloc$._FlatMapStreamTransformer$ = dart.generic(T => {
    var __t$StreamOfT = () => (__t$StreamOfT = dart.constFn(async.Stream$(T)))();
    var __t$StreamOfStreamOfT = () => (__t$StreamOfStreamOfT = dart.constFn(async.Stream$(__t$StreamOfT())))();
    var __t$StreamControllerOfT = () => (__t$StreamControllerOfT = dart.constFn(async.StreamController$(T)))();
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$StreamOfTTovoid = () => (__t$StreamOfTTovoid = dart.constFn(dart.fnType(dart.void, [__t$StreamOfT()])))();
    class _FlatMapStreamTransformer extends async.StreamTransformerBase$(async.Stream$(T), T) {
      static ['_#new#tearOff'](T) {
        return new (bloc$._FlatMapStreamTransformer$(T)).new();
      }
      bind(stream) {
        __t$StreamOfStreamOfT().as(stream);
        let controller = __t$StreamControllerOfT().broadcast({sync: true});
        controller.onListen = dart.fn(() => {
          let subscriptions = T$.JSArrayOfStreamSubscription().of([]);
          let outerSubscription = stream.listen(dart.fn(inner => {
            let subscription = inner.listen(__t$TTovoid().as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError')});
            subscription.onDone(dart.fn(() => {
              subscriptions[$remove](subscription);
              if (subscriptions[$isEmpty]) controller.close();
            }, T$.VoidTovoid()));
            subscriptions[$add](subscription);
          }, __t$StreamOfTTovoid()), {onError: dart.bind(controller, 'addError')});
          outerSubscription.onDone(dart.fn(() => {
            subscriptions[$remove](outerSubscription);
            if (subscriptions[$isEmpty]) controller.close();
          }, T$.VoidTovoid()));
          subscriptions[$add](outerSubscription);
          controller.onCancel = dart.fn(() => {
            if (subscriptions[$isEmpty]) return null;
            let cancels = (() => {
              let t5 = T$.JSArrayOfFutureOfvoid().of([]);
              for (let s of subscriptions)
                t5.push(s.cancel());
              return t5;
            })();
            return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => {
            }, T$.ListOfvoidToNull()));
          }, T$.VoidToFutureNOfvoid());
        }, T$.VoidTovoid());
        return controller.stream;
      }
    }
    (_FlatMapStreamTransformer.new = function() {
      _FlatMapStreamTransformer.__proto__.new.call(this);
      ;
    }).prototype = _FlatMapStreamTransformer.prototype;
    dart.addTypeTests(_FlatMapStreamTransformer);
    _FlatMapStreamTransformer.prototype[_is__FlatMapStreamTransformer_default] = true;
    dart.addTypeCaches(_FlatMapStreamTransformer);
    dart.setMethodSignature(_FlatMapStreamTransformer, () => ({
      __proto__: dart.getMethods(_FlatMapStreamTransformer.__proto__),
      bind: dart.fnType(async.Stream$(T), [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_FlatMapStreamTransformer, I[3]);
    return _FlatMapStreamTransformer;
  });
  bloc$._FlatMapStreamTransformer = bloc$._FlatMapStreamTransformer$();
  dart.addTypeTests(bloc$._FlatMapStreamTransformer, _is__FlatMapStreamTransformer_default);
  const _is_Streamable_default = Symbol('_is_Streamable_default');
  bloc$.Streamable$ = dart.generic(State => {
    class Streamable extends core.Object {}
    (Streamable.new = function() {
      ;
    }).prototype = Streamable.prototype;
    dart.addTypeTests(Streamable);
    Streamable.prototype[_is_Streamable_default] = true;
    dart.addTypeCaches(Streamable);
    dart.setLibraryUri(Streamable, I[3]);
    return Streamable;
  });
  bloc$.Streamable = bloc$.Streamable$();
  dart.addTypeTests(bloc$.Streamable, _is_Streamable_default);
  const _is_StateStreamable_default = Symbol('_is_StateStreamable_default');
  bloc$.StateStreamable$ = dart.generic(State => {
    class StateStreamable extends core.Object {}
    (StateStreamable.new = function() {
      ;
    }).prototype = StateStreamable.prototype;
    dart.addTypeTests(StateStreamable);
    StateStreamable.prototype[_is_StateStreamable_default] = true;
    dart.addTypeCaches(StateStreamable);
    StateStreamable[dart.implements] = () => [bloc$.Streamable$(State)];
    dart.setLibraryUri(StateStreamable, I[3]);
    return StateStreamable;
  });
  bloc$.StateStreamable = bloc$.StateStreamable$();
  dart.addTypeTests(bloc$.StateStreamable, _is_StateStreamable_default);
  const _is_StateStreamableSource_default = Symbol('_is_StateStreamableSource_default');
  bloc$.StateStreamableSource$ = dart.generic(State => {
    class StateStreamableSource extends core.Object {}
    (StateStreamableSource.new = function() {
      ;
    }).prototype = StateStreamableSource.prototype;
    dart.addTypeTests(StateStreamableSource);
    StateStreamableSource.prototype[_is_StateStreamableSource_default] = true;
    dart.addTypeCaches(StateStreamableSource);
    StateStreamableSource[dart.implements] = () => [bloc$.StateStreamable$(State), bloc$.Closable];
    dart.setLibraryUri(StateStreamableSource, I[3]);
    return StateStreamableSource;
  });
  bloc$.StateStreamableSource = bloc$.StateStreamableSource$();
  dart.addTypeTests(bloc$.StateStreamableSource, _is_StateStreamableSource_default);
  bloc$.Closable = class Closable extends core.Object {};
  (bloc$.Closable.new = function() {
    ;
  }).prototype = bloc$.Closable.prototype;
  dart.addTypeTests(bloc$.Closable);
  dart.addTypeCaches(bloc$.Closable);
  dart.setLibraryUri(bloc$.Closable, I[3]);
  const _is_Emittable_default = Symbol('_is_Emittable_default');
  bloc$.Emittable$ = dart.generic(State => {
    class Emittable extends core.Object {}
    (Emittable.new = function() {
      ;
    }).prototype = Emittable.prototype;
    dart.addTypeTests(Emittable);
    Emittable.prototype[_is_Emittable_default] = true;
    dart.addTypeCaches(Emittable);
    dart.setLibraryUri(Emittable, I[3]);
    return Emittable;
  });
  bloc$.Emittable = bloc$.Emittable$();
  dart.addTypeTests(bloc$.Emittable, _is_Emittable_default);
  bloc$.ErrorSink = class ErrorSink extends core.Object {};
  (bloc$.ErrorSink.new = function() {
    ;
  }).prototype = bloc$.ErrorSink.prototype;
  dart.addTypeTests(bloc$.ErrorSink);
  dart.addTypeCaches(bloc$.ErrorSink);
  bloc$.ErrorSink[dart.implements] = () => [bloc$.Closable];
  dart.setLibraryUri(bloc$.ErrorSink, I[3]);
  bloc$.BlocOverrides = class BlocOverrides extends core.Object {
    static get current() {
      return T$.BlocOverridesN().as(async.Zone.current._get(bloc$.BlocOverrides._token));
    }
    static runZoned(R, body, opts) {
      let blocObserver = opts && 'blocObserver' in opts ? opts.blocObserver : null;
      let eventTransformer = opts && 'eventTransformer' in opts ? opts.eventTransformer : null;
      let overrides = new bloc$._BlocOverridesScope.new(blocObserver, eventTransformer);
      return bloc$._asyncRunZoned(R, body, {zoneValues: new (T$.LinkedMapOfObjectN$ObjectN()).from([bloc$.BlocOverrides._token, overrides])});
    }
    get blocObserver() {
      return bloc$.Bloc.observer;
    }
    get eventTransformer() {
      return bloc$.Bloc.transformer;
    }
  };
  (bloc$.BlocOverrides.new = function() {
    ;
  }).prototype = bloc$.BlocOverrides.prototype;
  dart.addTypeTests(bloc$.BlocOverrides);
  dart.addTypeCaches(bloc$.BlocOverrides);
  dart.setStaticMethodSignature(bloc$.BlocOverrides, () => ['runZoned']);
  dart.setGetterSignature(bloc$.BlocOverrides, () => ({
    __proto__: dart.getGetters(bloc$.BlocOverrides.__proto__),
    blocObserver: bloc_observer.BlocObserver,
    eventTransformer: dart.fnType(async.Stream, [async.Stream, dart.fnType(async.Stream, [dart.dynamic])])
  }));
  dart.setStaticGetterSignature(bloc$.BlocOverrides, () => ['current']);
  dart.setLibraryUri(bloc$.BlocOverrides, I[3]);
  dart.setStaticFieldSignature(bloc$.BlocOverrides, () => ['_token']);
  dart.defineLazy(bloc$.BlocOverrides, {
    /*bloc$.BlocOverrides._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  var _previous = dart.privateName(bloc$, "_previous");
  bloc$._BlocOverridesScope = class _BlocOverridesScope extends bloc$.BlocOverrides {
    static ['_#new#tearOff'](_blocObserver, _eventTransformer) {
      return new bloc$._BlocOverridesScope.new(_blocObserver, _eventTransformer);
    }
    get blocObserver() {
      let blocObserver = this[_blocObserver$];
      if (blocObserver != null) return blocObserver;
      let previous = this[_previous];
      if (previous != null) return previous.blocObserver;
      return super.blocObserver;
    }
    get eventTransformer() {
      let eventTransformer = this[_eventTransformer$];
      if (eventTransformer != null) return eventTransformer;
      let previous = this[_previous];
      if (previous != null) return previous.eventTransformer;
      return super.eventTransformer;
    }
  };
  (bloc$._BlocOverridesScope.new = function(_blocObserver, _eventTransformer) {
    this[_previous] = bloc$.BlocOverrides.current;
    this[_blocObserver$] = _blocObserver;
    this[_eventTransformer$] = _eventTransformer;
    ;
  }).prototype = bloc$._BlocOverridesScope.prototype;
  dart.addTypeTests(bloc$._BlocOverridesScope);
  dart.addTypeCaches(bloc$._BlocOverridesScope);
  dart.setLibraryUri(bloc$._BlocOverridesScope, I[3]);
  dart.setFieldSignature(bloc$._BlocOverridesScope, () => ({
    __proto__: dart.getFields(bloc$._BlocOverridesScope.__proto__),
    [_previous]: dart.finalFieldType(dart.nullable(bloc$.BlocOverrides)),
    [_blocObserver$]: dart.finalFieldType(dart.nullable(bloc_observer.BlocObserver)),
    [_eventTransformer$]: dart.finalFieldType(dart.nullable(dart.fnType(async.Stream, [async.Stream, dart.fnType(async.Stream, [dart.dynamic])])))
  }));
  const _is_Emitter_default = Symbol('_is_Emitter_default');
  bloc$.Emitter$ = dart.generic(State => {
    class Emitter extends core.Object {}
    (Emitter.new = function() {
      ;
    }).prototype = Emitter.prototype;
    dart.addTypeTests(Emitter);
    Emitter.prototype[_is_Emitter_default] = true;
    dart.addTypeCaches(Emitter);
    dart.setLibraryUri(Emitter, I[3]);
    return Emitter;
  });
  bloc$.Emitter = bloc$.Emitter$();
  dart.addTypeTests(bloc$.Emitter, _is_Emitter_default);
  var _completer = dart.privateName(bloc$, "_completer");
  var _disposables = dart.privateName(bloc$, "_disposables");
  var _isCanceled = dart.privateName(bloc$, "_isCanceled");
  var _isCompleted = dart.privateName(bloc$, "_isCompleted");
  var _emit$ = dart.privateName(bloc$, "_emit");
  var _close = dart.privateName(bloc$, "_close");
  const _is__Emitter_default = Symbol('_is__Emitter_default');
  bloc$._Emitter$ = dart.generic(State => {
    var __t$ObjectAndStackTraceToState = () => (__t$ObjectAndStackTraceToState = dart.constFn(dart.fnType(State, [core.Object, core.StackTrace])))();
    var __t$ObjectAndStackTraceToNState = () => (__t$ObjectAndStackTraceToNState = dart.constFn(dart.nullable(__t$ObjectAndStackTraceToState())))();
    class _Emitter extends core.Object {
      static ['_#new#tearOff'](State, _emit) {
        return new (bloc$._Emitter$(State)).new(_emit);
      }
      onEach(T, stream, opts) {
        let t6;
        let onData = opts && 'onData' in opts ? opts.onData : null;
        let onError = opts && 'onError' in opts ? opts.onError : null;
        let completer = T$.CompleterOfvoid().new();
        let subscription = stream.listen(onData, {onDone: T$.FutureOrNOfvoidTovoid().as(dart.bind(completer, 'complete')), onError: (t6 = onError, t6 == null ? dart.bind(completer, 'completeError') : t6), cancelOnError: onError == null});
        this[_disposables][$add](dart.bind(subscription, 'cancel'));
        return async.Future.any(dart.void, T$.JSArrayOfFutureOfvoid().of([this.future, completer.future])).whenComplete(dart.fn(() => {
          subscription.cancel();
          this[_disposables][$remove](dart.bind(subscription, 'cancel'));
        }, T$.VoidToNull()));
      }
      forEach(T, stream, opts) {
        let onData = opts && 'onData' in opts ? opts.onData : null;
        dart.fnType(State, [T]).as(onData);
        let onError = opts && 'onError' in opts ? opts.onError : null;
        __t$ObjectAndStackTraceToNState().as(onError);
        return this.onEach(T, stream, {onData: dart.fn(data => this.call(onData(data)), dart.fnType(dart.void, [T])), onError: onError != null ? dart.fn((error, stackTrace) => {
            this.call(onError(error, stackTrace));
          }, T$.ObjectAndStackTraceTovoid()) : null});
      }
      call(state) {
        let t6;
        State.as(state);
        if (!!this[_isCompleted]) dart.assertFailed("\n\nemit was called after an event handler completed normally.\nThis is usually due to an unawaited future in an event handler.\nPlease make sure to await all asynchronous operations with event handlers\nand use emit.isDone after asynchronous operations before calling emit() to\nensure the event handler has not completed.\n\n  **BAD**\n  on<Event>((event, emit) {\n    future.whenComplete(() => emit(...));\n  });\n\n  **GOOD**\n  on<Event>((event, emit) async {\n    await future.whenComplete(() => emit(...));\n  });\n", I[29], 114, 7, "!_isCompleted");
        if (!this[_isCanceled]) {
          t6 = state;
          this[_emit$](t6);
        }
      }
      get isDone() {
        return this[_isCanceled] || this[_isCompleted];
      }
      cancel() {
        if (this.isDone) return;
        this[_isCanceled] = true;
        this[_close]();
      }
      complete() {
        if (this.isDone) return;
        if (!this[_disposables][$isEmpty]) dart.assertFailed("\n\nAn event handler completed but left pending subscriptions behind.\nThis is most likely due to an unawaited emit.forEach or emit.onEach. \nPlease make sure to await all asynchronous operations within event handlers.\n\n  **BAD**\n  on<Event>((event, emit) {\n    emit.forEach(...);\n  });  \n  \n  **GOOD**\n  on<Event>((event, emit) async {\n    await emit.forEach(...);\n  });\n\n  **GOOD**\n  on<Event>((event, emit) {\n    return emit.forEach(...);\n  });\n\n  **GOOD**\n  on<Event>((event, emit) => emit.forEach(...));\n\n", I[29], 150, 7, "_disposables.isEmpty");
        this[_isCompleted] = true;
        this[_close]();
      }
      [_close]() {
        for (let disposable of this[_disposables]) {
          disposable();
        }
        this[_disposables][$clear]();
        if (!this[_completer].isCompleted) this[_completer].complete();
      }
      get future() {
        return this[_completer].future;
      }
    }
    (_Emitter.new = function(_emit) {
      this[_completer] = T$.CompleterOfvoid().new();
      this[_disposables] = T$.JSArrayOfVoidToFutureOrOfvoid().of([]);
      this[_isCanceled] = false;
      this[_isCompleted] = false;
      this[_emit$] = _emit;
      ;
    }).prototype = _Emitter.prototype;
    dart.addTypeTests(_Emitter);
    _Emitter.prototype[_is__Emitter_default] = true;
    dart.addTypeCaches(_Emitter);
    _Emitter[dart.implements] = () => [bloc$.Emitter$(State)];
    dart.setMethodSignature(_Emitter, () => ({
      __proto__: dart.getMethods(_Emitter.__proto__),
      onEach: dart.gFnType(T => [async.Future$(dart.void), [async.Stream$(T)], {onError: dart.nullable(dart.fnType(dart.void, [core.Object, core.StackTrace]))}, {onData: dart.fnType(dart.void, [T])}], T => [dart.nullable(core.Object)]),
      forEach: dart.gFnType(T => [async.Future$(dart.void), [async.Stream$(T)], {onData: dart.nullable(core.Object), onError: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
      call: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      cancel: dart.fnType(dart.void, []),
      complete: dart.fnType(dart.void, []),
      [_close]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_Emitter, () => ({
      __proto__: dart.getGetters(_Emitter.__proto__),
      isDone: core.bool,
      future: async.Future$(dart.void)
    }));
    dart.setLibraryUri(_Emitter, I[3]);
    dart.setFieldSignature(_Emitter, () => ({
      __proto__: dart.getFields(_Emitter.__proto__),
      [_emit$]: dart.finalFieldType(dart.fnType(dart.void, [State])),
      [_completer]: dart.finalFieldType(async.Completer$(dart.void)),
      [_disposables]: dart.finalFieldType(core.List$(dart.fnType(dart.void, []))),
      [_isCanceled]: dart.fieldType(core.bool),
      [_isCompleted]: dart.fieldType(core.bool)
    }));
    return _Emitter;
  });
  bloc$._Emitter = bloc$._Emitter$();
  dart.addTypeTests(bloc$._Emitter, _is__Emitter_default);
  dart.defineLazy(bloc$, {
    /*bloc$._asyncRunZoned*/get _asyncRunZoned() {
      return C[117] || CT.C117;
    }
  }, false);
  var currentState$ = dart.privateName(change, "Change.currentState");
  var nextState$ = dart.privateName(change, "Change.nextState");
  const _is_Change_default = Symbol('_is_Change_default');
  change.Change$ = dart.generic(State => {
    var __t$ChangeOfState = () => (__t$ChangeOfState = dart.constFn(change.Change$(State)))();
    class Change extends core.Object {
      get currentState() {
        return this[currentState$];
      }
      set currentState(value) {
        super.currentState = value;
      }
      get nextState() {
        return this[nextState$];
      }
      set nextState(value) {
        super.nextState = value;
      }
      static ['_#new#tearOff'](State, opts) {
        let currentState = opts && 'currentState' in opts ? opts.currentState : null;
        let nextState = opts && 'nextState' in opts ? opts.nextState : null;
        return new (change.Change$(State)).new({currentState: currentState, nextState: nextState});
      }
      _equals(other) {
        if (other == null) return false;
        return this === other || __t$ChangeOfState().is(other) && this[$runtimeType]._equals(other[$runtimeType]) && dart.equals(this.currentState, other.currentState) && dart.equals(this.nextState, other.nextState);
      }
      get hashCode() {
        return (dart.hashCode(this.currentState) ^ dart.hashCode(this.nextState)) >>> 0;
      }
      toString() {
        return "Change { currentState: " + dart.str(this.currentState) + ", nextState: " + dart.str(this.nextState) + " }";
      }
    }
    (Change.new = function(opts) {
      let currentState = opts && 'currentState' in opts ? opts.currentState : null;
      let nextState = opts && 'nextState' in opts ? opts.nextState : null;
      this[currentState$] = currentState;
      this[nextState$] = nextState;
      ;
    }).prototype = Change.prototype;
    dart.addTypeTests(Change);
    Change.prototype[_is_Change_default] = true;
    dart.addTypeCaches(Change);
    dart.setLibraryUri(Change, I[30]);
    dart.setFieldSignature(Change, () => ({
      __proto__: dart.getFields(Change.__proto__),
      currentState: dart.finalFieldType(State),
      nextState: dart.finalFieldType(State)
    }));
    dart.defineExtensionMethods(Change, ['_equals', 'toString']);
    dart.defineExtensionAccessors(Change, ['hashCode']);
    return Change;
  });
  change.Change = change.Change$();
  dart.addTypeTests(change.Change, _is_Change_default);
  const _is_Cubit_default = Symbol('_is_Cubit_default');
  cubit.Cubit$ = dart.generic(State => {
    class Cubit extends bloc$.BlocBase$(State) {}
    (Cubit.new = function(initialState) {
      Cubit.__proto__.new.call(this, initialState);
      ;
    }).prototype = Cubit.prototype;
    dart.addTypeTests(Cubit);
    Cubit.prototype[_is_Cubit_default] = true;
    dart.addTypeCaches(Cubit);
    dart.setLibraryUri(Cubit, I[31]);
    return Cubit;
  });
  cubit.Cubit = cubit.Cubit$();
  dart.addTypeTests(cubit.Cubit, _is_Cubit_default);
  var event$ = dart.privateName(transition, "Transition.event");
  const _is_Transition_default = Symbol('_is_Transition_default');
  transition.Transition$ = dart.generic((Event, State) => {
    var __t$TransitionOfEvent$State = () => (__t$TransitionOfEvent$State = dart.constFn(transition.Transition$(Event, State)))();
    class Transition extends change.Change$(State) {
      get event() {
        return this[event$];
      }
      set event(value) {
        super.event = value;
      }
      static ['_#new#tearOff'](Event, State, opts) {
        let currentState = opts && 'currentState' in opts ? opts.currentState : null;
        let event = opts && 'event' in opts ? opts.event : null;
        let nextState = opts && 'nextState' in opts ? opts.nextState : null;
        return new (transition.Transition$(Event, State)).new({currentState: currentState, event: event, nextState: nextState});
      }
      _equals(other) {
        if (other == null) return false;
        return this === other || __t$TransitionOfEvent$State().is(other) && this[$runtimeType]._equals(other[$runtimeType]) && dart.equals(this.currentState, other.currentState) && dart.equals(this.event, other.event) && dart.equals(this.nextState, other.nextState);
      }
      get hashCode() {
        return (dart.hashCode(this.currentState) ^ dart.hashCode(this.event) ^ dart.hashCode(this.nextState)) >>> 0;
      }
      toString() {
        return "Transition { currentState: " + dart.str(this.currentState) + ", event: " + dart.str(this.event) + ", nextState: " + dart.str(this.nextState) + " }";
      }
    }
    (Transition.new = function(opts) {
      let currentState = opts && 'currentState' in opts ? opts.currentState : null;
      let event = opts && 'event' in opts ? opts.event : null;
      let nextState = opts && 'nextState' in opts ? opts.nextState : null;
      this[event$] = event;
      Transition.__proto__.new.call(this, {currentState: currentState, nextState: nextState});
      ;
    }).prototype = Transition.prototype;
    dart.addTypeTests(Transition);
    Transition.prototype[_is_Transition_default] = true;
    dart.addTypeCaches(Transition);
    dart.setLibraryUri(Transition, I[32]);
    dart.setFieldSignature(Transition, () => ({
      __proto__: dart.getFields(Transition.__proto__),
      event: dart.finalFieldType(Event)
    }));
    dart.defineExtensionMethods(Transition, ['_equals', 'toString']);
    dart.defineExtensionAccessors(Transition, ['hashCode']);
    return Transition;
  });
  transition.Transition = transition.Transition$();
  dart.addTypeTests(transition.Transition, _is_Transition_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[16]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[33]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[33]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t6;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t6 = controller;
      t6 == null ? null : t6.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t6;
        t6 = value;
        t6 == null ? null : t6.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t6;
          t6 = value;
          return t6 == null ? null : t6.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[119] || CT.C119, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[119] || CT.C119, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[34]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t6;
        t6 = notifier;
        t6 == null ? null : t6.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[35]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[119] || CT.C119, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[34]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[34]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[35]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[35]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[34]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[35]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[34]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[35]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[34]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[35]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[34]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[35]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[34]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[118] || CT.C118, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[35]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  var builder$3 = dart.privateName(consumer, "Consumer.builder");
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(T, context);
        t8 = child;
        return this.builder(t6, t7, t8);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$3] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[36]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  var builder$4 = dart.privateName(consumer, "Consumer2.builder");
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t9, t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(A, context);
        t8 = provider$.Provider.of(B, context);
        t9 = child;
        return this.builder(t6, t7, t8, t9);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$4] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[36]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  var builder$5 = dart.privateName(consumer, "Consumer3.builder");
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t10, t9, t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(A, context);
        t8 = provider$.Provider.of(B, context);
        t9 = provider$.Provider.of(C, context);
        t10 = child;
        return this.builder(t6, t7, t8, t9, t10);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$5] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[36]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  var builder$6 = dart.privateName(consumer, "Consumer4.builder");
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t11, t10, t9, t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(A, context);
        t8 = provider$.Provider.of(B, context);
        t9 = provider$.Provider.of(C, context);
        t10 = provider$.Provider.of(D, context);
        t11 = child;
        return this.builder(t6, t7, t8, t9, t10, t11);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$6] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[36]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  var builder$7 = dart.privateName(consumer, "Consumer5.builder");
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t12, t11, t10, t9, t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(A, context);
        t8 = provider$.Provider.of(B, context);
        t9 = provider$.Provider.of(C, context);
        t10 = provider$.Provider.of(D, context);
        t11 = provider$.Provider.of(E, context);
        t12 = child;
        return this.builder(t6, t7, t8, t9, t10, t11, t12);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$7] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[36]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  var builder$8 = dart.privateName(consumer, "Consumer6.builder");
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$8];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t13, t12, t11, t10, t9, t8, t7, t6;
        t6 = context;
        t7 = provider$.Provider.of(A, context);
        t8 = provider$.Provider.of(B, context);
        t9 = provider$.Provider.of(C, context);
        t10 = provider$.Provider.of(D, context);
        t11 = provider$.Provider.of(E, context);
        t12 = provider$.Provider.of(F, context);
        t13 = child;
        return this.builder(t6, t7, t8, t9, t10, t11, t12, t13);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$8] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[36]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  var valueType$ = dart.privateName(provider$, "ProviderNullException.valueType");
  var widgetType$ = dart.privateName(provider$, "ProviderNullException.widgetType");
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[valueType$];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[valueType$] = valueType;
    this[widgetType$] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[16]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  var valueType$0 = dart.privateName(provider$, "ProviderNotFoundException.valueType");
  var widgetType$0 = dart.privateName(provider$, "ProviderNotFoundException.widgetType");
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[valueType$0];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$0];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[valueType$0] = valueType;
    this[widgetType$0] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[16]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[16]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[16]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  var _removeListener = dart.privateName(provider$, "_removeListener");
  var _value$0 = dart.privateName(provider$, "_value");
  var _hasValue = dart.privateName(provider$, "_hasValue");
  var _isNotifyDependentsEnabled = dart.privateName(provider$, "_isNotifyDependentsEnabled");
  var element = dart.privateName(provider$, "_DelegateState.element");
  var _debugSetInheritedLock = dart.privateName(provider$, "_debugSetInheritedLock");
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[element];
      }
      set element(value) {
        this[element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[_delegate]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[_debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[16]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t10, t9, t8, t7, t6;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t6 = this.delegate, t7 = dart.nullCheck(this.element), t8 = dart.bind(this, 'setState'), t9 = this.controller, t10 = this[_value$0], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t6.startListening)(t7, t8, t9, t10)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[37], 109, 12, "element!.hasValue");
        if (!(this[_removeListener] != null)) dart.assertFailed(null, I[37], 128, 12, "_removeListener != null");
        return R.as(this[_value$0]);
      }
      dispose() {
        let t6;
        super.dispose();
        t6 = this[_removeListener];
        t6 == null ? null : t6();
      }
      get isLoaded() {
        return this[_removeListener] != null;
      }
      get hasValue() {
        return this[_hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[_hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[_value$0]), value) : !dart.equals(this[_value$0], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[_hasValue] = true;
        this[_value$0] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[_removeListener] = null;
      this[_value$0] = null;
      this[_hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[16]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_value$0]: dart.fieldType(dart.nullable(R)),
      [_hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[16]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  var _didBuild = dart.privateName(provider$, "_didBuild");
  var _controller = dart.privateName(provider$, "_controller");
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t7, t6;
        if (!this[_didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[37], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[37], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[37], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[_controller] = (t6 = this.delegate, t7 = dart.nullCheck(this.element), t6.create(t7));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[37], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[_didBuild] = true;
        }
        return T.as(this[_controller]);
      }
      dispose() {
        let t6;
        super.dispose();
        if (this[_didBuild]) {
          t6 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t6 == null ? null : t6(dart.nullCheck(this.element), T.as(this[_controller]));
        }
      }
      debugFillProperties(properties) {
        let t6, t6$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t6 = properties;
          (() => {
            t6.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t6.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t6;
          })();
        } else {
          t6$ = properties;
          (() => {
            t6$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t6$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t6$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[_didBuild] = false;
      this[_controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[16]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [_didBuild]: dart.fieldType(core.bool),
      [_controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[16]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[_removeListener] != null) {
            dart.nullCheck(this[_removeListener])();
            this[_removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[_removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[16]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  var eventKind$ = dart.privateName(provider$, "PostEventCall.eventKind");
  var event$0 = dart.privateName(provider$, "PostEventCall.event");
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[eventKind$];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[event$0];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[eventKind$] = eventKind;
    this[event$0] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[16]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  var logs = dart.privateName(provider$, "PostEventSpy.logs");
  var _postEvent = dart.privateName(provider$, "_postEvent");
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, _postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[38], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [_postEvent](eventKind, event) {
      this.logs[$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[16]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  var id$1 = dart.privateName(provider$, "ProviderNode.id");
  var type$0 = dart.privateName(provider$, "ProviderNode.type");
  var childrenNodeIds$ = dart.privateName(provider$, "ProviderNode.childrenNodeIds");
  var _element = dart.privateName(provider$, "ProviderNode._element");
  var _element$ = dart.privateName(provider$, "_element");
  var _delegateState = dart.privateName(provider$, "_delegateState");
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[id$1];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[childrenNodeIds$];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [_element$]() {
      return this[_element];
    }
    set [_element$](value) {
      super[_element$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[_element$][_delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[id$1] = id;
    this[childrenNodeIds$] = childrenNodeIds;
    this[type$0] = type;
    this[_element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[16]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [_element$]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  var _providerDetails = dart.privateName(provider$, "_providerDetails");
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[_providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[_providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[_providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[16]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [_providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  var _parent = dart.privateName(nested, "_parent");
  var _parent$ = dart.privateName(nested, "SingleChildWidgetElementMixin._parent");
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [_parent]() {
      return this[_parent$];
    }
    set [_parent](value) {
      this[_parent$] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[_parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[_parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[_parent$] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[9]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [_parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[_parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[9]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[16]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[16]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  var owner$ = dart.privateName(provider$, "_InheritedProviderScope.owner");
  var debugType$ = dart.privateName(provider$, "_InheritedProviderScope.debugType");
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[owner$];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[debugType$];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[owner$] = owner;
      this[debugType$] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[21], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[16]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[16]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  var _shouldNotifyDependents = dart.privateName(provider$, "_shouldNotifyDependents");
  var _debugInheritLocked = dart.privateName(provider$, "_debugInheritLocked");
  var _updatedShouldNotify = dart.privateName(provider$, "_updatedShouldNotify");
  var _isBuildFromExternalSources = dart.privateName(provider$, "_isBuildFromExternalSources");
  var ___InheritedProviderScopeElement__delegateState = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState");
  var ___InheritedProviderScopeElement__debugId = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId");
  var _debugId = dart.privateName(provider$, "_debugId");
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [_delegateState]() {
        let t7, t7$, t6;
        t6 = this[___InheritedProviderScopeElement__delegateState];
        return t6 == null ? (t7$ = (t7 = this.widget.owner[_delegate].createState(), (() => {
          t7.element = this;
          return t7;
        })()), this[___InheritedProviderScopeElement__delegateState] == null ? this[___InheritedProviderScopeElement__delegateState] = t7$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t6;
      }
      get [_debugId]() {
        let t6;
        t6 = this[___InheritedProviderScopeElement__debugId];
        return t6 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t6;
      }
      set [_debugId](_debugId$35param) {
        this[___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t6;
        {
          this[_debugId] = dart.str((t6 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t6 + 1, t6));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t6 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t6[$_set](this[_debugId], new provider$.ProviderNode.new({id: this[_debugId], childrenNodeIds: C[120] || CT.C120, type: this.widget.debugType, element: this}));
            return t6;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[_delegateState].hasValue ? this[_delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t7;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t7 = dependencies, t7 == null ? new (__t$_DependencyOfT()).new() : t7));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t7;
              t7 = selectorDependency;
              (() => {
                t7.shouldClearMutationScheduled = false;
                t7.shouldClearSelectors = true;
                return t7;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[121] || CT.C121);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[_debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[_delegate][$runtimeType]._equals(newWidget.owner[_delegate][$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[_isBuildFromExternalSources] = true;
        this[_updatedShouldNotify] = this[_delegateState].willUpdateDelegate(newWidget.owner[_delegate]);
        super.update(newWidget);
        this[_updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[_updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[_isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[_lazy] === false) {
          this.value;
        }
        this[_delegateState].build({isBuildFromExternalSources: this[_isBuildFromExternalSources]});
        this[_isBuildFromExternalSources] = false;
        if (this[_shouldNotifyDependents]) {
          this[_shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t8;
        this[_delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t8 = (() => {
            let t7 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t7;
          })(), (() => {
            t8[$remove](this[_debugId]);
            return t8;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[_delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[_isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[_shouldNotifyDependents] = true;
      }
      [_debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[_debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[_delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[_debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[_shouldNotifyDependents] = false;
      this[_debugInheritLocked] = false;
      this[_isNotifyDependentsEnabled] = true;
      this[_updatedShouldNotify] = false;
      this[_isBuildFromExternalSources] = false;
      this[___InheritedProviderScopeElement__delegateState] = null;
      this[___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [_debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [_debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[16]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [_shouldNotifyDependents]: dart.fieldType(core.bool),
      [_debugInheritLocked]: dart.fieldType(core.bool),
      [_isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [_updatedShouldNotify]: dart.fieldType(core.bool),
      [_isBuildFromExternalSources]: dart.fieldType(core.bool),
      [___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  var _updateShouldNotify = dart.privateName(provider$, "_updateShouldNotify");
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[21], 674, 16, "create != null || update != null");
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[16]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  var _didInitValue = dart.privateName(provider$, "_didInitValue");
  var _previousWidget = dart.privateName(provider$, "_previousWidget");
  var _initError = dart.privateName(provider$, "_initError");
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t8, t9;
        if (this[_didInitValue] && this[_initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t8 = this[_initError], t8 == null ? null : dart.toString(t8)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[_didInitValue]) {
          this[_didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[21], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[_value$0] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[_initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[21], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t9;
              t9 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t9 == null ? null : t9(T.as(this[_value$0]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[_value$0] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[_value$0]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t9;
              t9 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t9 == null ? null : t9(T.as(this[_value$0]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t9 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t9 == null ? null : t9(dart.nullCheck(this.element), T.as(this[_value$0]))) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[21], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[_value$0]);
      }
      dispose() {
        let t9, t9$;
        super.dispose();
        t9 = this[_removeListener];
        t9 == null ? null : t9();
        if (this[_didInitValue]) {
          t9$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t9$ == null ? null : t9$(dart.nullCheck(this.element), T.as(this[_value$0]));
        }
      }
      debugFillProperties(properties) {
        let t9;
        super.debugFillProperties(properties);
        if (this[_didInitValue]) {
          t9 = properties;
          (() => {
            t9.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t9.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t9;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t10, t9;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[_didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[_value$0];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[_value$0] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[_value$0]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(T.as(previousValue), T.as(this[_value$0]));
          } else {
            shouldNotify = !dart.equals(this[_value$0], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t9;
              t9 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t9 == null ? null : t9(T.as(this[_value$0]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[_removeListener] != null) {
              dart.nullCheck(this[_removeListener])();
              this[_removeListener] = null;
            }
            t9 = this[_previousWidget];
            t9 == null ? null : (t10 = __t$BuildContextAndTToNvoid().as(t9.dispose), t10 == null ? null : t10(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[_shouldNotifyDependents] = true;
        }
        this[_previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[_didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[_removeListener] = null;
      this[_didInitValue] = false;
      this[_value$0] = null;
      this[_previousWidget] = null;
      this[_initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[16]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_didInitValue]: dart.fieldType(core.bool),
      [_value$0]: dart.fieldType(dart.nullable(T)),
      [_previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [_initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[16]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t9;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t9 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t9 == null ? null : t9(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[21], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[_removeListener] != null) {
          dart.nullCheck(this[_removeListener])();
          this[_removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t9;
        super.dispose();
        t9 = this[_removeListener];
        t9 == null ? null : t9();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[_removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[16]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  var DeepCollectionEquality__unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var DeepCollectionEquality__base = dart.privateName(equality, "DeepCollectionEquality._base");
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[122] || CT.C122) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[38], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, _postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t10;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[21], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[21], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t10 = inheritedElement, t10 == null ? null : t10.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
            }
            return !(C[123] || CT.C123).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t15;
          t15 = provider$.Provider.debugCheckInvalidValueType;
          return t15 == null ? null : t15(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[39]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[39]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[39]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[39]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[39]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[39]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[39]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[40]);
  var builder$9 = dart.privateName(selector$, "Selector0.builder");
  var selector$1 = dart.privateName(selector$, "Selector0.selector");
  var _shouldRebuild = dart.privateName(selector$, "_shouldRebuild");
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[builder$9];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$1];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$9] = builder;
      this[selector$1] = selector;
      this[_shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[41]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [_shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  var value$ = dart.privateName(selector$, "_Selector0State.value");
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t16, t15, t18, t17, t16$, t15$;
        let selected = (t15 = this.widget, t16 = context, t15.selector(t16));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[_shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) == null && !(C[123] || CT.C123).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = (t15$ = this.widget, t16$ = context, t17 = selected, t18 = child, __t$BuildContextAndTAndWidgetNToWidget().as(t15$.builder)(t16$, t17, t18));
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[value$] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[41]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[41]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[41]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[41]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[41]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[41]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[41]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  var _valueListenable = dart.privateName(value_listenable_provider, "_valueListenable");
  var _updateShouldNotify$ = dart.privateName(value_listenable_provider, "_updateShouldNotify");
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[_valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[_updateShouldNotify$], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[_valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[_valueListenable] = value;
      this[_updateShouldNotify$] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[42]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [_valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [_updateShouldNotify$]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t15, t15$, t15$0;
      let nestedHook = null;
      let nextNode = (t15$ = (t15 = this[_parent], t15 == null ? null : t15.injectedChild), t15$ == null ? this.widget[_child$] : t15$);
      for (let child of this.widget[_children][$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t15$0 = node;
          (() => {
            t15$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t15$0.injectedChild = nestedHook.injectedChild;
            return t15$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[9]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[9]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  var _injectedChild = dart.privateName(nested, "_injectedChild");
  var _wrappedChild = dart.privateName(nested, "_wrappedChild");
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[_injectedChild];
    }
    set injectedChild(value) {
      let previous = this[_injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[_injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[_wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[_wrappedChild], value)) {
        this[_wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[_wrappedChild] = this.widget.wrappedWidget;
      this[_injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[_injectedChild] = null;
    this[_wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[9]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [_injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [_wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[9]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[9]);
  var builder$10 = dart.privateName(nested, "SingleChildBuilder.builder");
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[builder$10];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t16, t15;
      t15 = context;
      t16 = child;
      return this.builder(t15, t16);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[builder$10] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[9]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [_child$]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [_child$]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[9]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[9]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[9]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[9]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[_parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[9]);
  widgets_hlp.getFont = function getFont(fontSize, opts) {
    let t15;
    let color = opts && 'color' in opts ? opts.color : null;
    let isBold = opts && 'isBold' in opts ? opts.isBold : false;
    let fontName = opts && 'fontName' in opts ? opts.fontName : null;
    return new text_style.TextStyle.new({fontSize: fontSize, color: (t15 = color, t15 == null ? colors$1.kBlack : t15), fontWeight: isBold ? ui.FontWeight.bold : ui.FontWeight.normal, fontFamily: fontName});
  };
  widgets_hlp.buildLoading = function buildLoading() {
    return new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()});
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/configs/x_configs.dart": x_configs,
    "file:///zapp/project/lib/modules/dashboard/x_dashboards.dart": x_dashboards,
    "file:///zapp/project/lib/configs/colors.dart": colors$0,
    "file:///zapp/project/lib/configs/constants.dart": constants,
    "file:///zapp/project/lib/configs/durations.dart": durations,
    "file:///zapp/project/lib/configs/keys.dart": keys,
    "file:///zapp/project/lib/configs/sizes.dart": sizes,
    "file:///zapp/project/lib/configs/styles.dart": styles,
    "file:///zapp/project/lib/configs/themes.dart": themes,
    "file:///zapp/project/lib/modules/dashboard/controllers/grocery_bloc.dart": grocery_bloc,
    "file:///zapp/project/lib/modules/dashboard/models/grocery_mdl.dart": grocery_mdl,
    "file:///zapp/project/lib/modules/dashboard/pages/dashboard_pg.dart": dashboard_pg,
    "package:flutter_bloc/flutter_bloc.dart": flutter_bloc,
    "package:flutter_app/configs/x_configs.dart": x_configs$,
    "package:flutter_app/modules/dashboard/x_dashboards.dart": x_dashboards$,
    "package:flutter_app/widgets/x_widgets.dart": x_widgets,
    "package:bloc/bloc.dart": bloc,
    "package:provider/provider.dart": provider,
    "package:flutter_bloc/src/bloc_builder.dart": bloc_builder,
    "package:flutter_bloc/src/bloc_consumer.dart": bloc_consumer,
    "package:flutter_bloc/src/bloc_listener.dart": bloc_listener,
    "package:flutter_bloc/src/bloc_provider.dart": bloc_provider,
    "package:flutter_bloc/src/bloc_selector.dart": bloc_selector,
    "package:flutter_bloc/src/multi_bloc_listener.dart": multi_bloc_listener,
    "package:flutter_bloc/src/multi_bloc_provider.dart": multi_bloc_provider,
    "package:flutter_bloc/src/multi_repository_provider.dart": multi_repository_provider,
    "package:flutter_bloc/src/repository_provider.dart": repository_provider,
    "package:flutter_app/configs/colors.dart": colors$1,
    "package:flutter_app/configs/constants.dart": constants$,
    "package:flutter_app/configs/durations.dart": durations$,
    "package:flutter_app/configs/keys.dart": keys$,
    "package:flutter_app/configs/sizes.dart": sizes$,
    "package:flutter_app/configs/styles.dart": styles$,
    "package:flutter_app/configs/themes.dart": themes$,
    "package:flutter_app/modules/dashboard/controllers/grocery_bloc.dart": grocery_bloc$,
    "package:flutter_app/modules/dashboard/models/grocery_mdl.dart": grocery_mdl$,
    "package:flutter_app/modules/dashboard/pages/dashboard_pg.dart": dashboard_pg$,
    "package:flutter_app/widgets/button_wdg.dart": button_wdg,
    "package:bloc/src/bloc.dart": bloc$,
    "package:bloc/src/bloc_observer.dart": bloc_observer,
    "package:bloc/src/change.dart": change,
    "package:bloc/src/cubit.dart": cubit,
    "package:bloc/src/transition.dart": transition,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "package:provider/single_child_widget.dart": single_child_widget,
    "package:flutter_app/helpers/x_helpers.dart": x_helpers,
    "package:nested/nested.dart": nested,
    "package:flutter_app/helpers/widgets_hlp.dart": widgets_hlp
  }, {
    "file:///zapp/project/lib/modules/dashboard/controllers/grocery_bloc.dart": ["grocery_event.dart", "grocery_state.dart"],
    "package:flutter_app/modules/dashboard/controllers/grocery_bloc.dart": ["grocery_event.dart", "grocery_state.dart"],
    "package:bloc/src/bloc.dart": ["bloc_base.dart", "bloc_overrides.dart", "emitter.dart"],
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/configs/colors.dart","/zapp/project/lib/configs/constants.dart","/zapp/project/lib/configs/durations.dart","/zapp/project/lib/configs/keys.dart","/zapp/project/lib/configs/sizes.dart","/zapp/project/lib/configs/styles.dart","/zapp/project/lib/configs/themes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/bloc_base.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/bloc.dart","/zapp/project/lib/modules/dashboard/controllers/grocery_event.dart","/zapp/project/lib/modules/dashboard/controllers/grocery_bloc.dart","/zapp/project/lib/modules/dashboard/controllers/grocery_state.dart","/zapp/project/lib/modules/dashboard/models/grocery_mdl.dart","/zapp/project/lib/modules/dashboard/pages/dashboard_pg.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_builder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_listener.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/bloc_selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/multi_bloc_listener.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/multi_bloc_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/multi_repository_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_bloc-8.1.3/lib/src/repository_provider.dart","/zapp/project/lib/widgets/button_wdg.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/bloc_observer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/bloc_overrides.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/emitter.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/cubit.dart","/zapp/pub/.pub_cache/hosted/pub.dev/bloc-8.1.2/lib/src/transition.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.1/lib/src/value_listenable_provider.dart","/zapp/project/lib/helpers/widgets_hlp.dart"],"names":[],"mappingsiCAAgB;AACd,UAAoB,8BAGD;AAF8B,QAA9B,AAAkB,8BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;yBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;4DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;8CAEe;AACmB,UAAjB;;IAGvB;;;;;;;UCtC4B;AACxB,YAAO,sDACuB,cACrB,wBACS,sCACI,gCAId;IAEV;;;QAfmB;AAAb,8CAAa,GAAG;;EAAE;;;;;;;;;;AAJH,IAArB;EACF;;ECHwB;;;;;;;;;;;;;;qBCHZ;;;MACN,eAAM;;;MACN,qBAAY;;;MACZ,aAAI;;;MACJ,eAAM;;;MACN,cAAK;;;MACL,gBAAO;;;MACP,cAAK;;;MAGL,oBAAW;;;MACX,wBAAe;;;MACf,yBAAgB;;;MAChB,yBAAgB;;;MAChB,sBAAa;;;MACb,2BAAkB;;;MAGlB,qBAAY;;;MACZ,sBAAa;YAAG,kBAAM;;MACtB,mBAAU;;;MACV,mBAAU;;;MACV,kBAAS;;;MACT,iBAAQ;;;MAIR,mBAAU;;;MACV,qBAAY;;;MACZ,mBAAU;;;MACV,kBAAS;;;MACT,mBAAU;;;MACV,gBAAO;;;MACP,iBAAQ;;;MACR,gBAAO;;;MAGP,yBAAgB;;;MAMhB,yBAAgB;;;;;MC9ChB,gBAAM;YAAG;;MAGF,kBAAQ;;;MACR,kBAAQ;;;MACR,kBAAQ;;;MACR,kBAAQ;;;MACR,mBAAS;;;MAIT,kBAAQ;;;MAGX,2BAAiB;;;MAKrB,2BAAiB;YAAG;;MACpB,2BAAiB;YAAG;;MACpB,6BAAmB;YAAG;;MACtB,8BAAoB;YAAG;;MAGvB,2BAAiB;YAAG;;MACpB,uBAAa;YAAG;;MAChB,yBAAe;YAAG;;MAClB,4BAAkB;YAAG;;MACrB,0BAAgB;YAAG;;MACnB,4BAAkB;YAAG;;MACrB,4BAAkB;YAAG;;MACrB,4BAAkB;YAAG;;MACrB,4BAAkB;YAAG;;MACrB,kCAAwB;YAAG;;MAC3B,+BAAqB;YAAG;;MAIjB,kBAAQ;;;MACR,eAAK;;;MACL,gBAAM;;;MAEN,8BAAoB;;;MACpB,4BAAkB;;;MAClB,+BAAqB;;;MACrB,+BAAqB;;;MAErB,2BAAiB;;;MACjB,yBAAe;;;MACf,4BAAkB;;;MAClB,4BAAkB;;;MAElB,mBAAS;;;MAuBT,+BAAqB;YAC9B,iBAAO;;MACE,wBAAc;;;MACd,wBAAc;;;MACd,yBAAe;;;MACf,4BAAkB;;;MAClB,yBAAe;;;MACf,yBAAe;;;MACf,yBAAe;;;MACf,yBAAe;;;MACf,+BAAqB;;;MACrB,2BAAiB;;;;;;MCtFxB,4BAAkB;;;MAClB,0BAAgB;;;;;MCHT,YAAO;;;;;MCEP,qBAAe;;;MAItB,kBAAY;;;MACZ,kBAAY;;;MAEZ,4BAAsB;;;MACtB,6BAAuB;;;MAEvB,oBAAc;;;MACd,0BAAoB;;;;;ACoBxB,UAAO,wDACsB,wCAAS,iBACxB,mCAAkB;EAElC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA/BM,qBAAc;;;MAQd,iBAAU;;;MAGV,oBAAa;YAAG,yCACV,gBACa,2BACT,6BACN;;MAIJ,yBAAkB;YAAG,0DACE,gDAAoB,cACvC,4CACO,4CACA;;;;;;;;;;ECDjB;;;;;;MAvBe,yBAAS;YAAG,0CACN,oCACD,kCACS,iCACX,iCACU,sDACV,uDACuB,wCAAS,iBACb,mCACnB,iBACU,AAAK,+BAAY;;MAE9B,wBAAQ;YAAG,0CACE,iCACR,iBAAM,yBACG,gCACX,iCACU,sDACV,uDACuB,wCAAS,iBACb,mCACnB,iBACU,AAAK,+BAAY;;;;;;;;;;;;;;;;;;;;;ACmChC;kCAAmB,4KAAnB;MAAsD;;AAO9C;MAAM;;AAGG,cAAA,AAAiB;MAAM;;AAO9B,cAAA,AAAiB;MAAQ;WAc9B;;AACd;AACE,cAAI;AAC4D,YAA9D,WAAM,wBAAW;;AAEnB,cAAU,YAAN,KAAK,EAAI,kBAAU,gBAAU;AACkC,UAAnE,cAAS,6CAAiC,uBAAkB,KAAK;AACnD,UAAd,gBAAS,KAAK;AACc,UAA5B,AAAiB,2BAAI;AACN,UAAf,iBAAW;;cACJ;cAAO;AAAd;AAC0B,YAA1B,aAAQ,KAAK,EAAE,UAAU;AAClB,YAAP;;;;MAEJ;eAwB4B;;AAEU,QAApC,AAAc,8BAAS,MAAM,MAAM;MACrC;eAMqB,OAAoB;;AACS,QAAhD,aAAQ,KAAK,GAAa,KAAX,UAAU,EAAV,aAAyB;MAC1C;cAiBoB,OAAkB;AAEU,QAA9C,AAAc,6BAAQ,MAAM,KAAK,EAAE,UAAU;MAC/C;;AAOkB;AAEW,UAA3B,AAAc,6BAAQ;AACQ,UAA9B,MAAM,AAAiB;QACzB;;;6BAvHc;;MAMR,wBAAoD,sDAAtB,OAAS,kBAAT,cAA8B;0CAEvD;;MAIN,iBAAW;MAZF;AAEgB,MAA5B,AAAc,8BAAS;IACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC2Be;;AAEb,aAAO,AAUN;AATO,8BAAgB,AAAU,sBAAI,QAAC;;AAAY,wBAAO;iBAAQ,KAAK;kBAAN;;AAC/D,eAAK,aAAa;AACV,4BAAkB,iBAAN,KAAK;AAItB,YAHD,WAAM,wBAAU,AACd,kBAAQ,SAAS,2DACjB,qDAA2C,SAAS;;AAGxD,gBAAO;;AAET;AACgB,UAAd,aAAQ,KAAK;AACc,UAA3B,AAAiB,2BAAI,KAAK;;cACnB;cAAO;AAAd;AAC0B,YAA1B,aAAQ,KAAK,EAAE,UAAU;AAClB,YAAP;;;;MAEJ;cAsBmB;;AAEiB,QAAlC,AAAc,6BAAQ,MAAM,KAAK;MACnC;WAwBgB;;AAAU,cAAM,YAAK,KAAK;MAAC;YA4BlB;;;YACF;AAGrB,aAAO,AAUN;AATO,8BAAgB,AAAU,sBAAI,QAAC,WAAY,AAAQ,AAAK,OAAN,cAAS;AACjE,cAAI,aAAa;AAId,YAHD,WAAM,wBAAU,AACd,iBAAK,oBAAC,kCACN;;AAG2D,UAA/D,AAAU,sBAAI,gCAAiB,QAAS,KAAQ,KAAF,CAAC,8BAAa;AAC5D,gBAAO;;AAGH,2BAAiD,AA2CrD,CA3CgC,KAAZ,WAAW,EAAX,aAAe,+BACnC,AAAiB,AAAO,AAA6B,oCAAvB,QAAC,SAAgB,KAAN,KAAK,gCAC9C,QAAS;AACP,gBAAK,SAAa;AAChB,gBAAI,eAAU;AACd,gBAAe,YAAN,YAAS,KAAK,KAAI,gBAAU;AAOpC,YAND,kBACE,uDACqB,mBACN,KAAN,KAAK,cACD,KAAK;AAGT,YAAX,UAAK,KAAK;;;AAGN,wBAAU,gCAAS,MAAM;AACzB,2BAAa,4CACX,gBACY,UAAR,OAAO;AAGnB,gBAAa;AAAW;AACtB,oBAAK;AACe,gBAAlB,AAAQ,OAAD;AACkB,gBAAzB,AAAU,yBAAO,OAAO;AACxB,qBAAK,AAAW,UAAD,WAAW,AAAW,AAAO,UAAR;;;AAGtC;AACwB,gBAAtB,AAAU,sBAAI,OAAO;AACa,gBAAlC,MAAM,AAAO,OAAA,CAAO,KAAN,KAAK,GAAO,OAAO;;oBAC1B;oBAAO;AAAd;AAC0B,kBAA1B,aAAQ,KAAK,EAAE,UAAU;AAClB,kBAAP;;;;AAEQ,gBAAR,MAAM;;YAEV;;;AAEa,UAAb,WAAW;AACX,gBAAO,AAAW,WAAD;kEAEZ;AACuB,QAAhC,AAAe,2BAAI,YAAY;MACjC;mBA0B2C;;AAEG,QAA5C,AAAc,kCAAa,MAAM,UAAU;MAC7C;;AAUkB;AACc,UAA9B,MAAM,AAAiB;AACvB,mBAAW,UAAW;AACJ,YAAhB,AAAQ,OAAD;;AAE8C,UAAvD,MAAa,6BAAW,AAAU,yCAAI,QAAC,KAAM,AAAE,CAAD;AACgB,UAA9D,MAAa,6BAAW,AAAe,8CAAI,QAAC,KAAM,AAAE,CAAD;AACnD,gBAAa;QACf;;;;;;yBApPW;;MAsBL,yBAAmB;MACnB,uBAA8C;MAC9C,kBAAsB;MACtB,kBAA+B;MAC/B,4BAEsC,sDAA1B,OAAS,sBAAT,cAAkC;AA5BzB,oCAAM,YAAY;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;MAG1B,mBAAQ;;;;MAaK,sBAAW;YAAG,UAAC,QAAQ,WAC/C,AACF,AACA,MAFQ,mBACJ,MAAM;;;;;;;;EC5DU;;;;;;;;;;;;;;;6BCUW,OAAO;AAAR;AACM,QAAzC,WAAM;MACR;;oBAE6B,OAAO;AAAR;AACC,QAAvB,WAAJ,IAAI,GAAC;AACqC,QAA1C,MAAa,qBAAQ,gCAAkB;AASpB,QARf,WAAJ,IAAI,GAAC,8CACiB,AACb,AAMA,qEANI,QAAC,KAAM,qDACJ,AAAC,CAAA,QAAC,6BACA,AAAC,CAAA,QAAC,sCACK,AAAC,CAAA,QAAC,uCACR,AAAC,CAAA,QAAC,oCACC,AAAC,CAAA,QAAC;MAE1B;;;;AArBgB,sDAAM;AAC6B,IAAjD,oDAAwB;AACY,IAApC,gDAAoB;EACtB;;;;;;;;;;;;;;;;EDN8C;;;;;;;;;;;EAEJ;;;;;;;;;;;EEFI;;;;;;;;;;;EAEA;;;;;;IAGrB;;;;;;;;;;;;QAEQ;;;EAAM;;;;;;;;;;;;;;ICX1B;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;;QAEG;QACA;QACA;QACA;QACA;IAJA;IACA;IACA;IACA;IACA;;EACd;;;;;;;;;;;;;;;;;;;EAqCJ;;;;;;MAjCoC,oCAAY;YAAG,uCAC/C,6CACE,MAAM,KACN,QAAQ,WACR,eAAe,8BACf,SAAS,MACT,YACI,6FAEN,6CACE,MAAM,KACN,QAAQ,UACR,eAAe,iCACf,SAAS,MACT,YACI,mJAEN,6CACE,MAAM,KACN,QAAQ,SACR,eAAe,sBACf,SAAS,MACT,YAAY,4DAEd,6CACE,MAAM,KACN,QAAQ,cACR,eAAe,yBACf,SAAS,MACT,YACI;;;;;;;;;;ACpC8B;IAAqB;;;QAHhC;AAArB,8DAAqB,GAAG;;EAAE;;;;;;;;;;;;;UASN;AACpB,iBAAkB,AAAY,0BAAT,OAAO;AAEhC,YAAO,oCACG,+BACC,kBAAK,2BAER,gCACM,yBACR,0DAES,qCACG,iBACI,6CACH,AAAW,0BAAC,oBACQ,wCAAS,cAE/B,6BACE,kBAAK,uBAIlB,qCACqB,sCAAU,aACtB,AAAK,AAAM,IAAP,SAAS,YACH,qCAAgB,OAAO,EAAE,YAAY;AAEd,gBAAtC,AAAY,qBAAI;;IAM5B;;;;;;IAnCkB,mBAAc;;;EAoClC;;;;;;;;;;;;;;;;;;;MC2DW;;;;;;MAGsB;;;;;;;AAMe;MAA6B;;;UAf/C;UAAU;UAAW;MAAX;MAAW;AAC3C,qDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;MAlBM;;;;;;;;;;;;;YAGD,SAAW;;;AAAU,aAAQ,OAAO;aAAE,KAAK;cAAtB,AAAO;MAAgB;;;UAbtD;UACT;UACF;UACsB;MAHX;AAIX,iDAAW,GAAG,QAAQ,IAAI,aAAa,SAAS;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2C/C;;MAAK;kBAAL;;MAAK;;;AACL;MAAM;mBAAN;;;MAAM;;;AAIM,QAAX;AACkC,QAAxC,eAAoB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AACH,QAApB,eAAS,AAAM;MACjB;sBAG2C;;;AACT,QAA1B,sBAAgB,SAAS;AACzB,uBAAyB,KAAf,AAAU,SAAD,OAAC,aAAgB,iCAAR;AAC5B,2BAA0B,MAAZ,AAAO,kBAAA,cAAQ,OAAO;AAC1C,aAAI,OAAO,WAAI,WAAW;AACL,UAAnB,cAAQ,WAAW;AACC,UAApB,eAAS,AAAM;;MAEnB;;;AAI+B,QAAvB;AACA,oBAAmB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AAC5B,aAAI,sBAAS,IAAI;AACH,UAAZ,cAAQ,IAAI;AACQ,UAApB,eAAS,AAAM;;MAEnB;YAG0B;AACxB,YAAI,AAAO,AAAK;AAG2C,UAAjD,gDAAR,OAAO,EAAiB,QAAC,QAAS,AAAU,gBAAO,IAAI;;AAEzD,cAAO,0CACC,+CACM,AAAO,kCACT,SAAC,SAAS,UAAU,cAAS,cAAM,eAAS,KAAK,2DACpD,AAAO,kBAAM,OAAO,EAAE;MAEjC;;;;;;4CA5CO;6CACA;;;;IA4CT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC9FW;;;;;;MAMkB;;;;;;MAIC;;;;;;MAKG;;;;;;MAKC;;;;;;;;;;;;;;;;AAGW;MAA0B;;;UAlCrD;UACA;UACT;UACA;UACA;UACA;MALS;MACA;MAET;MACA;MACA;AACF,kDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCb;;MAAK;mBAAL;;MAAK;;;AAIO,QAAX;AACkC,QAAxC,gBAAoB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;MACzB;sBAGwC;;;AACN,QAA1B,sBAAgB,SAAS;AACzB,uBAAyB,KAAf,AAAU,SAAD,OAAC,aAAgB,iCAAR;AAC5B,2BAA0B,MAAZ,AAAO,kBAAA,cAAQ,OAAO;AAC1C,aAAI,OAAO,WAAI,WAAW,GAAE,AAAmB,eAAX,WAAW;MACjD;;;AAI+B,QAAvB;AACA,oBAAmB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AAC5B,aAAI,uBAAS,IAAI,GAAE,AAAY,eAAJ,IAAI;MACjC;YAG0B;AACxB,YAAI,AAAO,AAAK;AAG2C,UAAjD,gDAAR,OAAO,EAAiB,QAAC,QAAS,AAAU,iBAAO,IAAI;;AAEzD,cAAO,yCACC,yDACG,AAAO,iCACL,SAAC,UAAU;;AACpB,2BAA+C,kCAA3C,AAAO,sCAAA,OAAY,GAAK,QAAQ,EAAE,OAAO,IAAlC,cAAuC;AACf,qBAAjC;mBAAgB,OAAO;mBAAE,OAAO;cAAjB,gCAAR;;AAET,iDAAO,AAAO,uCAAA,OAAW,KAAK,QAAQ,EAAE,OAAO;kBAAjC,gBAAsC;;MAG1D;;;;;;yCAxCO;;;IAyCT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICuJgB;;;;;;;AAIZ,YAAO,2CAA2B;IACpC;;;QATsC;QAAa;IACtC,eAAE,KAAK;AACd,oEAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;MClLP;;;;;;MAIL;;;;;;MAKmB;;;;;;MAGI;;;;;;;AAI5B;MAA8B;;;UAzBlB;UACT;UACA;UACA;UACA;MAJS;MAET;MACA;MACA;AACF,sDAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA9BD;UAC1B;UACF;UACuB;UAClB;AACL,kDACQ,GAAG,SACD,KAAK,YACF,QAAQ,QACZ,IAAI,cACE,UAAU;;IACvB;;;;;;;;;;;;;;;;;;;;YDiOmB;AAAY,mCAAe,OAAO,EAAE,AAAO;MAAO;;;;;IAC9E;;;;;;;;;;;;;;;;;;;;;;;;ACrLS;;MAAK;oBAAL;;MAAK;;;AACL;MAAc;2BAAd;;;MAAc;;;AAIF,QAAX;AACkC,QAAxC,iBAAoB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AACK,QAA5B,uBAAiB,AAAM;AACX,QAAZ;MACF;sBAG4C;;;AACV,QAA1B,sBAAgB,SAAS;AACzB,uBAAyB,KAAf,AAAU,SAAD,OAAC,aAAgB,iCAAR;AAC5B,2BAA0B,MAAZ,AAAO,kBAAA,cAAQ,OAAO;AAC1C,aAAI,OAAO,WAAI,WAAW;AACxB,cAAI;AACY,YAAd;AACmB,YAAnB,gBAAQ,WAAW;AACS,YAA5B,uBAAiB,AAAM;;AAEb,UAAZ;;MAEJ;;;AAI+B,QAAvB;AACA,oBAAmB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AAC5B,aAAI,wBAAS,IAAI;AACf,cAAI;AACY,YAAd;AACY,YAAZ,gBAAQ,IAAI;AACgB,YAA5B,uBAAiB,AAAM;;AAEb,UAAZ;;MAEJ;qBAGmC,SAAiB;AAClD,cACE,AAAM,KAAD,6BAC6E,SAA7E,AAAO,6BAAY;AAE1B,YAAI,AAAO,AAAK;AAG2C,UAAjD,gDAAR,OAAO,EAAiB,QAAC,QAAS,AAAU,kBAAO,IAAI;;AAEzD,cAAY,gBAAL,KAAK;MACd;;AAIgB,QAAd;AACe,QAAT;MACR;;AAQI,QALF,sBAAgB,AAAM,AAAO,4BAAO,QAAC;;AACnC,yBAAmD,kCAA/C,AAAO,sCAAA,OAAY,GAAK,sBAAgB,KAAK,IAAtC,cAA2C;AACrB,mBAA/B;iBAAgB;iBAAS,KAAK;YAAf,gCAAR;;AAEa,UAAtB,uBAAiB,KAAK;;MAE1B;;;AAGyB,aAAvB;4BAAe;AACK,QAApB,sBAAgB;MAClB;;;;;;MAzEuB;6CAChB;sDACA;;;;IAwET;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IDsCgB;;;;;;UAWY;AAAY,iCAAe,OAAO,EAAE;IAAO;;AAInE,YAAO,4CAA4B;IACrC;;;QApBuC;QAAa;IACvC,iBAAE,KAAK;AACd,qEAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;ME9KP;;;;;;MAIH;;;;;;MAEM;;;;;;MAER;;;;;;;;;;;;;;;;;;;mBAYM;YACR;AAEL;AACE,gBAAgB,0BAAM,OAAO,WAAU,MAAM;;cACT;AAApC;AACA,iBAAI,AAAE,CAAD,mBAAc,mBAAG,AAAO;AAU5B,YATD,WAAM,4BACJ,AAOG,sFAN8D,oBAAC,iHACuB,oBAAC,mJAInE,OAAO;;;;MAIpC;qBAGmC,SAAiB;AAClD,cACE,AAAM,KAAD,6BACgE,SAAnE,sBAAW;AAET,oBAAQ;AACd,cAAO,AAAM,MAAD,WACN,+CACS,KAAK,2CAEN,kBACC,KAAK,KAEd,8CACU,yBACC,SAAC,GAAG,SAAS,AAAK,IAAD,kFAEpB,kBACC,KAAK;MAEtB;6BAG8C,GACnB;AAEnB,2BAAe,AAAM,AAAO,KAAR,eACxB,QAAS,KAAM,AAAE,CAAD;AAElB,cAAoB,WAAb,YAAY;MACrB;;;UA1GqB;UACd;UACA;UACA;MADA;MACA;MACO,gBAAE,MAAM;MACT,eAAE;AACT,kDAAW,GAAG,SAAS,KAAK;;IAAC;;UAoBtB;UACN;UACA;;MACM,eAAE,KAAK;MACN,gBAAE;MACL,cAAE;AACP,kDAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC9B1B;;;;;;MAOkB;;;;;;MAKI;;;;;;;;;;;;;;AAGe;MAA6B;;;UAxB3D;UACA;UACT;UACA;MAHS;MACA;MAET;AACF,kDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBb;;MAAK;oBAAL;;MAAK;;;AACL;MAAM;qBAAN;;;MAAM;;;AAIM,QAAX;AACkC,QAAxC,iBAAoB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AACc,QAArC,wBAAS,kBAAgB,AAAM,qBAAP,cAAR;MAClB;sBAG2C;;;AACT,QAA1B,sBAAgB,SAAS;AACzB,uBAAyB,KAAf,AAAU,SAAD,OAAC,aAAgB,iCAAR;AAC5B,2BAA0B,MAAZ,AAAO,kBAAA,cAAQ,OAAO;AAC1C,aAAI,OAAO,WAAI,WAAW;AACL,UAAnB,gBAAQ,WAAW;AACkB,UAArC,yBAAS,kBAAgB,AAAM,qBAAP,cAAR;;MAEpB;;;AAI+B,QAAvB;AACA,oBAAmB,KAAZ,AAAO,kBAAA,aAAgB,iCAAR;AAC5B,aAAI,wBAAS,IAAI;AACH,UAAZ,gBAAQ,IAAI;AACyB,UAArC,wBAAS,kBAAgB,AAAM,qBAAP,cAAR;;MAEpB;YAG0B;;AACxB,YAAI,AAAO,AAAK;AAG2C,UAAjD,gDAAR,OAAO,EAAiB,QAAC,QAAS,AAAU,kBAAO,IAAI;;AAEzD,cAAO,0CACC,yBACI,SAAC,SAAS;;AACZ,sCAAgB,kBAAgB,KAAK,EAAN,cAAR;AAC7B,6BAAI,gBAAU,aAAa,GAAE,AAAsC,cAA7B,cAAM,iBAAS,aAAa;yDAE7D,kBAAe,OAAO,OAAE,gBAAV,kCAAP;MAElB;;;;;;yCA9CO;0CACA;;;;IA8CT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UH1B4B;AACkB,MAA1C,WAAM,wBAAW;IACnB;;AAGkC,2CAAe;IAAK;;;QAjB/C;QAC4B;QACzB;SACG,AAAS,QAAD;IACL,kBAAE,QAAQ;IACb,gBAAE,KAAK;AACd,iDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;QIoDd;QAC4B;QACzB;QACW;AAChB,2DACQ,GAAG,YACE,SAAS,SACZ,AAAQ,OAAD,WACR,gCACW,QAAC,WAAY,AAAO,OAAA,CAAC,OAAO,EAAE,KAAK,kCAE9C,KAAK;;EACZ;;;;;;;;;;;;;QCpF4B;QACjB;QACX;AACF,yEAAW,GAAG,aAAa,SAAS,SAAS,KAAK;;EAAC;;;;;;;;;;;;;QCHrB;QACjB;QACX;AACF,yEAAW,GAAG,aAAa,SAAS,SAAS,KAAK;;EAAC;;;;;;;;;;;;;QCTrB;QACjB;QACX;AACF,qFAAW,GAAG,aAAa,SAAS,SAAS,KAAK;;EAAC;;;;;;;;;;;;;;;MC2F/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAG4B;AACd,QAA/B,0BAAoB,UAAU;AACK,QAAzC,AAAU,oCAAoB,UAAU;MAC1C;;AAIE,cAAO,8CAA6B;MACtC;qBAGmC,SAAiB;AAClD,cACE,AAAgB,wBAAG,KAAK,6BACyC,SAA/D,sBAAW;AAEf,cAAO,qDACE,iBAEgC,SAAb,4BACnB,AAAQ,uBACT,gCACW,QAAC,WAAmB,AAAC,eAAR,cAAS,OAAO,EAAE,KAAK,kCAE1C,eAAL,KAAK;MAEf;;;UA/GO;UACM;UACiC;UACrB;UACC;UACL;UACP;UACP;UACC;UACE;MAFH;MAGK,cAAE,IAAI;MACF,kBAAE,qDACF,MAAM,UACN,MAAM,sBACM,kBAAkB,8BACV,0BAA0B,kBACtC,cAAc,WACrB,OAAO;AAElB,uDAAW,GAAG,SAAS,KAAK;;IAAC;;UAI5B;UACM;UACY;UACJ;UACb;UACD;UACG;MADH;MAEK,cAAE,IAAI;MACF,kBAAE,mDACH,KAAK,sBACQ,kBAAkB,kBACtB,cAAc;AAEhC,uDAAW,GAAG,SAAS,KAAK;;IAAC;;UAG5B;UACiB;UAChB;UACD;UACG;MADH;MAEK,cAAE,IAAI;MACF,kBAAE,QAAQ;AACpB,uDAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBJsKP;;YAAe;AACzC,cACe,AAAE,AACK,eADpB,AAAQ,OAAD,yBACH,AAAO,MAAD,KAAI,SACV,+DACJ,AAaH,mQANU,oBAAC,uNAKS,OAAO;AAIpB,+BAAmB,0CAAuB,OAAO;AAEvD,YAAI,MAAM;AAKiE,UAAzE,AAAQ,OAAD;;AAGH,0BAAQ,gBAAgB,eAAhB,OAAkB;AAEhC,YAAI;AACF,eAAU,KAAN,KAAK;AACmD,YAA1D,WAAM,wCAAsB,kBAAG,AAAQ,AAAO,OAAR;;AAExC,gBAAO,MAAK;;AAGd,cAAa,MAAN,KAAK;MACd;oCAGe;AAGb,cAAO,AAAQ,OAAD,8BAAU;AAMxB,cACE,AAAkB,gCAAG,0BACrB;AAEF,aACI,CAAF,yEACA;AAQI,+BAC6B,8EADV,AAAQ,OAAD;AAGhC,YAAI,AAAiB,gBAAD,aAAiB,KAAL;AACgC,UAA9D,WAAM,4CAA0B,kBAAG,AAAQ,AAAO,OAAR;;AAG5C,cAAO,iBAAgB;MACzB;;;UA1IO;UACc;UACP;UACN;UACa;UACX;AACL,8CACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,WACL,OAAO,8BAGV,QAAG;;AACD,eAAS;qCAA4B,MAAQ,KAAK;kCACnD,KAAK;;IACb;;UAYA;UACM;UACY;UACJ;UACX;WACG,AAGN;;AAFoD,aAA1C;4BAA4B,MAAQ,KAAK;AAClD,cAAO;;AAEH,gDACC,GAAG,WACC,OAAO,SACT,KAAK,sBACQ,kBAAkB,SAC/B,KAAK;;IACb;;;;;;;;;;;MAmI2B,6CAA0B;YAAM,aAAG;AACnE,aAAO,AA6BN;AA5BC,cAAU,8BAAN,KAAK,KAAwB,gBAAN,KAAK;AAyBlC,YAxBI,WAAM,4BAAa,AAwBxB,yEAvByD,oBAAC,yGAGvD,oBAAC;;AAsBD,gBAAO;;;;;;;;;;;;;;;;;;;;;;;;mBKlWiB;YAAe;AACzC;AACE,gBAAgB,0BAAM,OAAO,WAAU,MAAM;;cACT;AAApC;AACA,iBAAI,AAAE,CAAD,mBAAc,mBAAG,AAAO;AAU5B,YATD,WAAM,4BACJ,AAOG,+GANuF,oBAAC,uHACI,oBAAC,yJAIzE,OAAO;;;;MAIpC;;;UA5CqB;UACd;UACG;UACF;AACH,wDACQ,GAAG,UACA,MAAM,WACL,SAAC,GAAG;iDACN,KAAK,QACN,IAAI;;IACX;;UAOM;UACN;UACG;AACC,0DACE,GAAG,SACD,KAAK,SACL,KAAK;;IACb;;;;;;;;;;;MzBlDH,eAAM;;;MACN,eAAM;;;MACN,qBAAY;;;MACZ,aAAI;;;MACJ,eAAM;;;MACN,cAAK;;;MACL,gBAAO;;;MACP,cAAK;;;MAGL,oBAAW;;;MACX,wBAAe;;;MACf,yBAAgB;;;MAChB,yBAAgB;;;MAChB,sBAAa;;;MACb,2BAAkB;;;MAGlB,qBAAY;;;MACZ,sBAAa;YAAG,kBAAM;;MACtB,mBAAU;;;MACV,mBAAU;;;MACV,kBAAS;;;MACT,iBAAQ;;;MAIR,mBAAU;;;MACV,qBAAY;;;MACZ,mBAAU;;;MACV,kBAAS;;;MACT,mBAAU;;;MACV,gBAAO;;;MACP,iBAAQ;;;MACR,gBAAO;;;MAGP,yBAAgB;;;MAMhB,yBAAgB;;;;;MC9ChB,iBAAM;YAAG;;MAGF,mBAAQ;;;MACR,mBAAQ;;;MACR,mBAAQ;;;MACR,mBAAQ;;;MACR,oBAAS;;;MAIT,mBAAQ;;;MAGX,4BAAiB;;;MAKrB,4BAAiB;YAAG;;MACpB,4BAAiB;YAAG;;MACpB,8BAAmB;YAAG;;MACtB,+BAAoB;YAAG;;MAGvB,4BAAiB;YAAG;;MACpB,wBAAa;YAAG;;MAChB,0BAAe;YAAG;;MAClB,6BAAkB;YAAG;;MACrB,2BAAgB;YAAG;;MACnB,6BAAkB;YAAG;;MACrB,6BAAkB;YAAG;;MACrB,6BAAkB;YAAG;;MACrB,6BAAkB;YAAG;;MACrB,mCAAwB;YAAG;;MAC3B,gCAAqB;YAAG;;MAIjB,mBAAQ;;;MACR,gBAAK;;;MACL,iBAAM;;;MAEN,+BAAoB;;;MACpB,6BAAkB;;;MAClB,gCAAqB;;;MACrB,gCAAqB;;;MAErB,4BAAiB;;;MACjB,0BAAe;;;MACf,6BAAkB;;;MAClB,6BAAkB;;;MAElB,oBAAS;;;MAuBT,gCAAqB;YAC9B,iBAAO;;MACE,yBAAc;;;MACd,yBAAc;;;MACd,0BAAe;;;MACf,6BAAkB;;;MAClB,0BAAe;;;MACf,0BAAe;;;MACf,0BAAe;;;MACf,0BAAe;;;MACf,gCAAqB;;;MACrB,4BAAiB;;;;;MCtFxB,6BAAkB;;;MAClB,2BAAgB;;;;;MCHT,aAAO;;;;;MCEP,sBAAe;;;MAItB,mBAAY;;;MACZ,mBAAY;;;MAEZ,6BAAsB;;;MACtB,8BAAuB;;;MAEvB,qBAAc;;;MACd,2BAAoB;;;;;ACoBxB,UAAO,wDACsB,wCAAS,iBACxB,mCAAkB;EAElC;;MA/BM,sBAAc;;;MAQd,kBAAU;;;MAGV,qBAAa;YAAG,yCACV,gBACa,2BACT,6BACN;;MAIJ,0BAAkB;YAAG,0DACE,gDAAoB,cACvC,6CACO,6CACA;;;;;;;;;;ECDjB;;;;;;MAvBe,0BAAS;YAAG,0CACN,oCACD,kCACS,iCACX,iCACU,sDACV,uDACuB,wCAAS,iBACb,mCACnB,iBACU,AAAK,+BAAY;;MAE9B,yBAAQ;YAAG,0CACE,iCACR,iBAAM,yBACG,gCACX,iCACU,sDACV,uDACuB,wCAAS,iBACb,mCACnB,iBACU,AAAK,+BAAY;;;;;;EGxBhB;;;;;;;;;;;;;;;6BCUW,OAAO;AAAR;AACM,QAAzC,WAAM;MACR;;oBAE6B,OAAO;AAAR;AACC,QAAvB,WAAJ,IAAI,GAAC;AACqC,QAA1C,MAAa,qBAAQ,gCAAkB;AASpB,QARf,WAAJ,IAAI,GAAC,+CACiB,AACb,AAMA,uEANI,QAAC,KAAM,sDACJ,AAAC,CAAA,QAAC,6BACA,AAAC,CAAA,QAAC,sCACK,AAAC,CAAA,QAAC,uCACR,AAAC,CAAA,QAAC,oCACC,AAAC,CAAA,QAAC;MAE1B;;;;AArBgB,uDAAM;AAC6B,IAAjD,qDAAwB;AACY,IAApC,iDAAoB;EACtB;;;;;;;;;;;;;;;;EDN8C;;;;;;;;;;;EAEJ;;;;;;;;;;;EEFI;;;;;;;;;;;EAEA;;;;;;IAGrB;;;;;;;;;;;;QAEQ;;;EAAM;;;;;;;;;;;;;;ICX1B;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;;;;;;;;;QAEG;QACA;QACA;QACA;QACA;IAJA;IACA;IACA;IACA;IACA;;EACd;;;;;;;;;;;;;;;;;;;EAqCJ;;;;;;MAjCoC,qCAAY;YAAG,uCAC/C,6CACE,MAAM,KACN,QAAQ,WACR,eAAe,8BACf,SAAS,MACT,YACI,6FAEN,6CACE,MAAM,KACN,QAAQ,UACR,eAAe,iCACf,SAAS,MACT,YACI,mJAEN,6CACE,MAAM,KACN,QAAQ,SACR,eAAe,sBACf,SAAS,MACT,YAAY,4DAEd,6CACE,MAAM,KACN,QAAQ,cACR,eAAe,yBACf,SAAS,MACT,YACI;;;;;;;;;;ACpC8B;IAAqB;;;QAHhC;AAArB,+DAAqB,GAAG;;EAAE;;;;;;;;;UASN;AACpB,iBAAkB,AAAY,0BAAT,OAAO;AAEhC,YAAO,oCACG,+BACC,kBAAK,2BAER,gCACM,yBACR,0DAES,qCACG,iBACI,6CACH,AAAW,0BAAC,oBACQ,wCAAS,cAE/B,6BACE,kBAAK,uBAIlB,qCACqB,sCAAU,aACtB,AAAK,AAAM,IAAP,SAAS,YACH,qCAAgB,OAAO,EAAE,YAAY;AAEd,gBAAtC,AAAY,qBAAI;;IAM5B;;;;;;IAnCkB,mBAAc;;;EAoClC;;;;;;;;;;;;;yBa3CiB,SACN,OACD,SACA,SACK;UACG;UACA;AAuCd,YAAO,oDACM,kBACJ,wCACgB,qCACD,+BAAoB,KAAE,kBAC9B,6CACD,QAAQ,GAAG,wBAAe,OAAlB,AAAyB,YAC9B,UAAU,GAAG,4BAAmB,IAAtB,gBACO,mCAAW,uBAAS,cACvC,QAAQ,GAAU,8BAAW,OAAO,SAAS,MAAK,IAA1C,WACb,kBAAK,KAAK,UAAS,oBAAQ,YAAW,OAAO;IAG1D;mBAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,iBAAQ,sBAAa,sBAC5C,mBAAmB;IACnC;mBAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,iBAAQ,qBAAY,sBAC3C,mBAAmB;IACnC;kBAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,iBAAQ,eAAM,sBACrC,mBAAmB;IACnC;2BAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,iBAAQ,sBAAa,sBAC5C,kBAAkB;IAClC;0BAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,eAAM,eAAM,sBACnC,kBAAkB;IAClC;6BAGiB,SAAgB,OAAkB;AACjD,YAAO,oCAAc,OAAO,EAAE,KAAK,EAAE,iBAAQ,sBAAa,sBAC5C,mBAAmB;IACnC;;;;;;;EACF;;;;;;;;;;IlBrFA;;;;;;;;;;;;;IAqRqC;;;;;;IACxB;;;;;;;;;;;;;QAFmB;QAAsB;IAAtB;IAAsB;;EAAM;;;;;;;;;;amBrR1B;IAAO;YAMH,MAAc;IAAQ;aAO1B,MAAsB;IAAS;iBAUtC,MACM;IAC5B;YAO4B,MAAa,OAAkB;IAAa;YAQ5C;IAAO;;;;EAhDlB;;;;;;;;;;;;;;;;;;;AnBmSd;;EAAsB;;;;;;;;;;;;;;;WAOK;;AACzB,yBAAa,2CAAoC;AAkCtD,QAhCD,AAAW,UAAD,YAAY;AACd,8BAA6C;AAE7C,kCAAoB,AAAO,MAAD,QAC9B,QAAC;AACO,+BAAe,AAAM,KAAD,yBACb,UAAX,UAAU,qBACU,UAAX,UAAU;AAMnB,YAHF,AAAa,YAAD,QAAQ;AACgB,cAAlC,AAAc,aAAD,UAAQ,YAAY;AACjC,kBAAI,AAAc,aAAD,YAAU,AAAW,AAAO,UAAR;;AAGR,YAA/B,AAAc,aAAD,OAAK,YAAY;+CAEZ,UAAX,UAAU;AAMnB,UAHF,AAAkB,iBAAD,QAAQ;AACgB,YAAvC,AAAc,aAAD,UAAQ,iBAAiB;AACtC,gBAAI,AAAc,aAAD,YAAU,AAAW,AAAO,UAAR;;AAGH,UAApC,AAAc,aAAD,OAAK,iBAAiB;AAMlC,UAJD,AAAW,UAAD,YAAY;AACpB,gBAAI,AAAc,aAAD,YAAU,MAAO;AAC5B,0BAAU;;AAAC,uBAAW,IAAK,cAAa;AAAI,wBAAF,CAAC;;;AACjD,kBAAc,AAAc,8BAAT,OAAO,kBAAO,QAAC;;;;AAItC,cAAO,AAAW,WAAD;MACnB;;;AAzCM;;IAA2B;;;;;;;;;;;;;;;;;;IDzSnC;;;;;;;;;;;;;;IAMA;;;;;;;;;;;;;;;IAIiD;;;;;;;;;;;;;EAYjD;;;;;;;;;IAOA;;;;;;;;;;;;EAUA;;;;;;;AqBJuC,YAAqB,wBAAhB,AAAO,wBAAC;IAAyB;uBAO5D;UACC;UACa;AAErB,sBAAY,kCAAoB,YAAY,EAAE,gBAAgB;AACpE,YAAO,AAAc,yBAAC,IAAI,eAAc,4CAAC,4BAAQ,SAAS;IAC5D;;AAMiC,YAAK;IAAQ;;AAeI,YAAK;IAAW;;;;EACpE;;;;;;;;;;;;;MAhDe,0BAAM;YAAG;;;;;;;;;AA2Dd,yBAAe;AACrB,UAAI,YAAY,UAAU,MAAO,aAAY;AAEvC,qBAAW;AACjB,UAAI,QAAQ,UAAU,MAAO,AAAS,SAAD;AAErC,YAAa;IACf;;AAIQ,6BAAmB;AACzB,UAAI,gBAAgB,UAAU,MAAO,iBAAgB;AAE/C,qBAAW;AACjB,UAAI,QAAQ,UAAU,MAAO,AAAS,SAAD;AAErC,YAAa;IACf;;4CA1ByB,eAAoB;IAExB,kBAA0B;IAFtB;IAAoB;;EAAkB;;;;;;;;;;;;;;;IClBjE;;;;;;;;;;;;;;;;;;;;;;;gBAcc;;YACqB;YACqB;AAE9C,wBAAY;AACZ,2BAAe,AAAO,MAAD,QACzB,MAAM,yCACY,UAAV,SAAS,0BACA,KAAR,OAAO,EAAP,aAAqB,UAAV,SAAS,yCACd,AAAQ,OAAD;AAEa,QAArC,AAAa,yBAAiB,UAAb,YAAY;AAC7B,cAAc,AAAgC,6BAA5B,+BAAC,aAAQ,AAAU,SAAD,wBAAuB;AACpC,UAArB,AAAa,YAAD;AAC4B,UAAxC,AAAa,4BAAoB,UAAb,YAAY;;MAEpC;iBAIY;YACsB;;YACqB;;AAErD,cAAO,gBACL,MAAM,WACE,QAAC,QAAS,UAAK,AAAM,MAAA,CAAC,IAAI,2CACzB,AAAQ,OAAD,WACV,SAAQ,OAAkB;AACQ,YAAhC,UAAK,AAAO,OAAA,CAAC,KAAK,EAAE,UAAU;+CAEhC;MAEV;WAGgB;;;AACd,cACG,sCACD;AAoBF,aAAK,mBAAyB;eAAN,KAAK;UAAX,AAAK;;MACzB;;AAGmB,cAAA,AAAY,sBAAG;MAAY;;AAG5C,YAAI,aAAQ;AACM,QAAlB,oBAAc;AACN,QAAR;MACF;;AAGE,YAAI,aAAQ;AACZ,aACE,AAAa,gDACb;AA2BiB,QAAnB,qBAAe;AACP,QAAR;MACF;;AAGE,iBAAW,aAAc;AACN,UAAjB,AAAW,UAAD;;AAEQ,QAApB,AAAa;AACb,aAAK,AAAW,8BAAa,AAAW,AAAU;MACpD;;AAE2B,cAAA,AAAW;MAAM;;6BA7H9B;MAGR,mBAAa;MACb,qBAA0C;MAE5C,oBAAc;MACd,qBAAe;MAPL;;IAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MD5DhB,oBAAc;;;;;;;;;;MEQN;;;;;;MAGA;;;;;;;;;;;cAGY;;AACpB,cAAA,AAAU,AAAa,UAAP,KAAK,IACf,uBAAN,KAAK,KACD,AAAY,2BAAG,AAAM,KAAD,mBACP,YAAb,mBAAgB,AAAM,KAAD,kBACX,YAAV,gBAAa,AAAM,KAAD;MAAU;;AAGhB,cAAsB,EAAT,cAAb,qBAAkC,cAAV;MAAkB;;AAI5D,cAAO,AAA+D,sCAAtC,qBAAY,2BAAc,kBAAS;MACrE;;;UAtB4B;UAA4B;MAA5B;MAA4B;;IAAW;;;;;;;;;;;;;;;;;;;0BCavD;AAAgB,qCAAM,YAAY;;IAAC;;;;;;;;;;;;;;MCLnC;;;;;;;;;;;;cAGY;;AACpB,cAAA,AAAU,AAAa,UAAP,KAAK,IACf,iCAAN,KAAK,KACD,AAAY,2BAAG,AAAM,KAAD,mBACP,YAAb,mBAAgB,AAAM,KAAD,kBACf,YAAN,YAAS,AAAM,KAAD,WACJ,YAAV,gBAAa,AAAM,KAAD;MAAU;;AAIlC,cAA8C,EAA1B,AAAS,cAAtB,qBAA8B,cAAN,cAA2B,cAAV;MAClD;;AAIE,cAAO,AAAsF,0CAAvD,qBAAY,uBAAU,cAAK,2BAAc,kBAAS;MAC1F;;;UAzBiB;UACD;UACC;MADD;AAEX,yDAAoB,YAAY,aAAa,SAAS;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBrD;UACc;UACP;UAC0B;UACf;UACjB;UACa;UACX;AACC,wEACE,GAAG,SACD,KAAK,QACN,IAAI,WACD,OAAO,YACN,+DACA,MAAM,WACL,OAAO,sBACI,kBAAkB,kBACtB,cAAc;;IAEjC;;UAIA;UACM;UAC2B;UACf;UACjB;UACa;UACX;AACC,wEACE,GAAG,QACF,IAAI,WACD,OAAO,YACN,qDACR,KAAK,EACL,kBAAkB,EAClB,cAAc,UAET,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIA;UACuB;UACjB;UACM;UACM;UACjB;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,sBACM,kBAAkB,kBACtB,qDACF,UAAU,eACT,WAAW,WAEnB,KAAK;;IACb;;UAIA;UACe;UACT;UACM;UACM;UACjB;UACa;UACX;AACC,sDACE,GAAG,QACF,IAAI,WACD,OAAO,SACT,KAAK,sBACQ,kBAAkB,kBACtB,qDACF,UAAU,eACT,WAAW,WAEnB,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA+DA;UACuB;UACjB;UACM;UACM;UACjB;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,sBACM,kBAAkB,kBACtB,qDACF,UAAU,eACT,WAAW,WAEnB,KAAK;;IACb;;UAIA;UACe;UACT;UACM;UACM;UACJ;UACX;AACC,sDACE,GAAG,WACC,OAAO,QACV,cACC,KAAK,sBACQ,kBAAkB,kBACtB,qDACF,UAAU,eACT,WAAW,WAEnB,KAAK;;IACb;;;;;;;;;;QAlNI;QACM;AAEjB,UAAO,UAAC,GAAG,UAAU,YAAY;AAC/B,WAAK,AAAE,CAAD;AACiB,QAArB,AAAQ,QAAA,CAAC,WAAW;;AAEtB,UAAI,AAAW,UAAD;AACZ,cAAO;;;AAEH,gBAAM,AAAW,UAAD,QACpB,QAAQ,YACC,QAAS;AAChB,cAAI,UAAU;AACkB,YAA9B,AAAQ,QAAA,CAAC,AAAU,UAAA,CAAC,CAAC,EAAE,KAAK;;AAa3B,YAXY,oCACX,iDACW,uBACE,4BAAa,AAMnC,wCALoC,iBAAX,UAAU,KAAa,2CACnC,oBAAC,kEAGhB,KAAK;;;AAQF,YAAW,WAAJ,GAAG;;EAEd;;QA4Ea;QACM;AAGjB,UAAO,UAAC,GAAG,UAAU,YAAY;;AAC/B,WAAK,AAAE,CAAD;AACiB,QAArB,AAAQ,QAAA,CAAC,WAAW;;AAGlB,qBAAW;AA6Bd,WA5BD,UAAU;mBAAV,OAAY,mBACV,QAAC;AACC,YAAI,QAAQ;AACV;;AAEa,QAAf,AAAQ,QAAA,CAAC,KAAK;iDAEP,QAAS;AAChB,cAAI,QAAQ;AACV;;AAEF,cAAI,UAAU;AACkB,YAA9B,AAAQ,QAAA,CAAC,AAAU,UAAA,CAAC,CAAC,EAAE,KAAK;;AAa3B,YAXY,oCACX,iDACW,uBACE,4BAAa,AAMnC,wCALoC,iBAAX,UAAU,KAAa,2CACnC,oBAAC,kEAGhB,KAAK;;;AAQF,YAAO,eAAM,WAAW;;EAE5B;;;;;;;;;;;;;;;;;;;;;6BC9GkC,GAClB;;AAEmC,aAA/C,KAAK;qBAAL,OAAO,eAAc,UAAF,CAAC;AACpB,cAAO;;AAAM,oBAAK;8BAAL,OAAO,kBAAiB,UAAF,CAAC;;MACtC;;;UAtCO;UACc;UACP;UACN;UACa;UACX;AACL,wDACQ,GAAG,6CAEA,MAAM,WACL,OAAO,QACV,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;UAIA;UACM;UACY;UACJ;UACX;AACC,0DACE,GAAG,WACC,OAAO,SACT,KAAK,sBACQ,kBAAkB,4CAE/B,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBC6E2B,SAAyB;;AACtC,aAAnB,QAAQ;qBAAR,OAAU;MACZ;;;UA7BO;UACc;UACb;UACa;UACX;AACL,4DACQ,GAAG,UACA,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;UAIA;UACM;UACQ;UACX;AACC,8DACE,GAAG,WACC,OAAO,SACT,KAAK,SACL,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UD3DA;UACM;UACoC;UACnC;UACW;UACjB;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,UACN,MAAM,QACR,IAAI,WACD,OAAO,WACP,OAAO,sBACI,kBAAkB,4CAE/B,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UAqBA;UACM;UACyB;UACxB;UACN;UACa;UACX;AACL,6DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UCsFA;UACc;UACiB;UAC9B;UACa;UACX;AACL,iEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAQA;UACc;UACyB;UACtC;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UDlHA;UACM;UAC8B;UAC7B;UACN;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UCsGA;UACc;UACsB;UACnC;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UD5GA;UACM;UACkC;UACjC;UACN;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UC+FA;UACc;UAC0B;UACvC;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UDrGA;UACM;UACsC;UACrC;UACN;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UCuFA;UACc;UAC8B;UAC3C;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UD7FA;UACM;UAC0C;UACzC;UACN;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UC8EA;UACc;UACkC;UAC/C;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;UDpFA;UACM;UAC8C;UAC7C;UACN;UACa;UACX;AACL,8DACQ,GAAG,UACA,MAAM,QACR,IAAI,WACD,OAAO,UACR,SAAC,SAAS,aAAa,AAAM,MAAA,CACnC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,QAAQ,yCAED,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UCqEA;UACc;UACsC;UACnD;UACa;UACX;AACL,kEACQ,GAAG,UACA,MAAM,UACN,MAAM,oCAER,IAAI,WACD,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;MC3LL;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACtB,KAAK;cAHA,AAAO;MAKhB;;;UAvBO;UACS;UACN;MADM;AAEX,8CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;MAsChC;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACb,yBAAM,OAAO;aACtB,KAAK;cAJA,AAAO;MAMhB;;;UArBO;UACS;UACN;MADM;AAEX,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;MAqChC;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACb,yBAAM,OAAO;aACb,yBAAM,OAAO;cACtB,KAAK;cALA,AAAO;MAOhB;;;UAvBO;UACS;UACN;MADM;AAEX,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;MAwChC;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACb,yBAAM,OAAO;aACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACtB,KAAK;cANA,AAAO;MAQhB;;;UAzBO;UACS;UACN;MADM;AAEX,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;MA2ChC;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACb,yBAAM,OAAO;aACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACtB,KAAK;cAPA,AAAO;MAShB;;;UA3BO;UACS;UACN;MADM;AAEX,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;MA8ChC;;;;;;;;;;;;qBAGiC,SAAiB;;AAClD,aACE,OAAO;aACE,yBAAM,OAAO;aACb,yBAAM,OAAO;aACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACb,yBAAM,OAAO;cACtB,KAAK;cARA,AAAO;MAUhB;;;UA7BO;UACS;UACN;MADM;AAEX,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;IjB2GvB;;;;;;IAGA;;;;;;;;;;AAGT;AAGA,YAAO,AAKR,iCAJgB,mBAAU,sCAAyB,kBAAS,0GAGjB,kBAAS,4BAAe,kBAAS;IAE7E;;kDAlB2B,WAAgB;IAAhB;IAAgB;;EAAW;;;;;;;;;;;;;;IA+B3C;;;;;;IAGA;;;;;;;;;;AAIT;AAGA,YAAO,AAiDR,0DAhDyC,kBAAS,2BAAc,mBAAU,0kBAe3D,mBAAU,oDAAuC,kBAAS;IAkC1E;;sDAjEO,WACA;IADA;IACA;;EACN;;;;;;;;;;;;;;0BI+LoD;MAAa;;;;IACpE;;;;;;;;;;;;;;;;sCSljByB,oBAAyB;MAAzB;MAAyB;;IAAe;;;;;;;;;;;;;;;;;;;;;;;;;;MTqjB3B;;;;;;;AAIlB,cAAgC,MAAzB,AAAE,AAAO,AAAM,eAAtB;MAAoC;4BAItB;AAC9B,cAAc,AAAE,gBAAT,sCAAgC,KAAK;MAC9C;yBAE0B;;AAAgB;MAAK;;MAE/B;0BAEqC;MAAa;;YAExC;MAA8B;;;MAlBpB;;IAmBtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ASnjB+C,QAApC,AAAE,eAAT,4CAAsC;AAMrC,QALe,gCAAhB,8BAAoB,oBACX,eAAP,8BACA,wBACA,uBACA,gBAJyC,6CAAd,uCAAb;AAM0B,QAAnC,AAAE,eAAT,4CAAsC;AACtC,aAAc,AAAE,eAAT,0CAAmB,AAkBvB,wGAjBkF,oBAAC,gBAAG,oBAAC;AAkB1F,cAAO,AAAgB;AACvB,cAAc,MAAP;MACT;;;AAIiB,QAAT;AACiB,aAAvB;4BAAiB;MACnB;;AAEqB,cAAA,AAAgB;MAAO;;AAKvB;MAAS;eAEd;;AACd,YAAI;AACI,6BAA2C,sBAA5B,AAAS,4CACG,AAAC,qCAA5B,AAAS,mCAA2B,KAAP,iBAAa,KAAK,IACxC,aAAP,gBAAU,KAAK;AACrB,cAAI,YAAY;AACsB,YAA7B,AAAE,eAAT;;;AAGY,QAAhB,kBAAY;AACE,QAAd,iBAAS,KAAK;MAChB;;;MAjEc;MAIX;MA6CE,kBAAY;;;IAiBnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeI,cAAO;MACT;;;UAZgB;UACT;UACkB;UACe;MAHxB;MACT;AAGF,gEAAM,kBAAkB,EAAE,cAAc;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoB5C,aAAK;AACH,eAAO,2BAAsB;AACvB;AACA;AAEN,eAAO,AAMN;AAJqC,YADpC,4CACI;AAEgC,YADpC,4CACI;AACJ,kBAAO;;AAGT;AACE,iBAAO,AAIN;AAHwC,cAAvC,6CAAmC;AACK,cAAxC,6CAAmC;AACnC,oBAAO;;AAE8B,YAAvC,0BAAc,oBAAuB,eAAP,eAAD;;AAE7B,iBAAO,AAMN;AAJ+C,cAD9C,6CAC6C,eAAzC,yCAAyC;AAEC,cAD9C,6CAC6C,eAAzC,yCAAyC;AAC7C,oBAAO;;;AAGK,UAAhB,kBAAY;;AAEd,cAAmB,MAAZ;MACT;;;AAIiB,QAAT;AACN,YAAI;AACgD,gDAAlD,AAAS;uBAAA,OAAS,GAAY,eAAP,eAAsB,KAAZ;;MAErC;0BAGqD;;AACd,QAA/B,0BAAoB,UAAU;AACpC,YAAI;AAG0C,eAF5C,UAAU;UAAV;AACI,mBAAI,uCAAoB,cAAc;AACtC,mBAAI,uCAAoB,SAAS;;;;AAkBlC,gBAhBH,UAAU;UAAV;AACI,oBACA,iCACE,sBACO,gBACG,cACF;AAGV,oBACA,iCACE,iBACO,gBACG,cACF;;;;MAIlB;;;;;;MA1EK,kBAAY;MAEd;;;IAyEL;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaI,cAAO;MACT;0BAGqD;AACd,QAA/B,0BAAoB,UAAU;AACoB,QAAxD,AAAW,UAAD,KAAK,uCAAoB,cAAc;MACnD;;oDAhBO,OACkB,oBACM;MAFxB;AAGH,+DAAM,kBAAkB,EAAE,cAAc;;IAAC;;;;;;;;;;;;;;;;;;;;;;yBAmBiB;;AAC5D,yBAAI,AAAS,qBAAS,AAAY,WAAD;AAC/B,cAAI;AACgB,YAAH,AAAC,eAAhB;AACsB,YAAtB,wBAAkB;;AAEpB,gBAAO;;AAET,cAAO;MACT;;AAGoB,cAAA,AAAS;MAAK;0BAGmB;AACd,QAA/B,0BAAoB,UAAU;AACpC,YAAI;AACiD,UAAnD,AAAW,UAAD,KAAK,uCAAoB,SAAS;;AAS3C,UAPD,AAAW,UAAD,KACR,iCACE,iBACO,gBACG,cACF;;MAIhB;;;;;;;;IACF;;;;;;;;;;;;;;;;IKtRe;;;;;;IACe;;;;;;;;;;yCAFP,WAAgB;IAAhB;IAAgB;;EAAM;;;;;;;;;;;;IAQrC;;;;;;;;;;AAGJ,WAC0B,YAAxB,6CAA2B,sCAC3B;AAE4B,MAA9B,oCAA0B;IAC5B;iBAGS,WACe;AAEqB,MAA3C,AAAK,gBAAkB,+BAAE,SAAS,EAAE,KAAK;IAC3C;;;IAfM,aAAsB;;EADZ;;;;;;;;;;;;;;;;;;;;IA4BH;;;;;;IACA;;;;;;IACM;;;;;;IAC2B;;;;;;;;;;;;;;AAEzB,YAAA,AAAS,AAAe;IAAK;;;QAXlC;QACA;QACA;QACmC;IAHnC;IACA;IACA;IAEF,iBAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;AAmB0B;IAAgB;wBACnB;AAC0B,MAAtE,yBAAe,kCAAoD;AAC3C,MAAxB,yBAAmB,KAAK;IAC1B;sBAE8B;AAI3B,MAHD,yBACE,6BACkB,+BAAC,MAAM,UAAU;IAEvC;;;IAZ0B,yBAAmB;;EAN1B;;;;;;;;;;;;;;;;;;;;;;MAEN,uCAAa;YACJ;;;;;;;ItBwIF;;;;;;UAGA,QAAgB;AAClC,UAAW,4BAAP,MAAM;AACQ,QAAhB,gBAAU,MAAM;;AAEU,MAAtB,YAAM,MAAM,EAAE,OAAO;IAC7B;;AAIkB,MAAV;AAMJ,MALF,2BAAsB,QAAC;AACrB,YAAW,6BAAP,MAAM;AACQ,UAAhB,gBAAU,MAAM;;AAElB,cAAO;;IAEX;;;IAnBoB;;;;;;;;;;;;;;;oEuBotJmB;;;;;;;;;;AvBvpJrC,UAAI;AACF,cAAO,AAAO,4BAAe,MAAa,AAAE,eAAT;;AAErC,YAAa;IACf;;AAII,YAAa,sCAAP;IAAoC;;qDAbS;AACjD,gEAAM,MAAM;;EAAC;;;;;;;;;;;;;;0BQ9FkC;AACd,QAA/B,0BAAoB,UAAU;AACmB,QAAvD,mBAAc,QAAC,KAAM,AAAE,CAAD,qBAAqB,UAAU;MACvD;;8CAN+C;AAAU,yDAAM,MAAM;;IAAC;;;;;;;;;;;;;;IA+JxE;;;;;;;;;;;;;;;MAU6B;;;;;;MACd;;;;;;;;;;;;yBAG2B;;AACtC,cAAO;MACT;;AAIE,cAAO,mDAAkC;MAC3C;;;UAjBgB;UACA;UACE;MAFF;MACA;WAEE,KAAL;AACP,+DAAa,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiBpB,4BAAuB;MACvB,oCAA+B;MAC9B,iBAAgC;;IACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc6C;yCACvC,AAAO,AAAM,AAAU,4CAAA;AAAe,uBAAU;;yLADT;MACa;;;AAC5C;;MAAQ;qBAAR;;MAAQ;;AAKA;AAQhB,QAJF,2BAAsB,QAAC;AAEoD,UADzE,mBACI,AAAO,MAAD;AACV,gBAAO;;AAET,cAAO,iBAAgB;MACzB;YAGoB,QAAgB;;AAClC;AACmC,UAAjC,iBAAiC,UAAJ,KAAf,0HAAe;AAU5B,UATe,AAAc,0DAAkB;gEAC3B,AAAc;AACzB,sBAAR,gBAAU,oCACJ,0DAGE,AAAO,gCACJ;;;;AAKa,QAAtB,YAAM,MAAM,EAAE,OAAO;MAC7B;;AAII,cAAa,qCAAP;MAAoC;;AAI1B,QAAZ;AAEA,oBAAQ,AAAe,gCAAW,AAAe,6BAAQ;AAC/D,YAAU,wCAAN,KAAK;AACW,UAAlB,AAAM,KAAD;;MAET;yBAGgC,WAAmB;;AAC3C,2BAAe,qBAAgB,SAAS;AAE9C,YAAI,YAAY,aAAyB,wBAAb,YAAY;AACtC;;AAGF,YAAW,iBAAP,MAAM;AACF,mCACiC,yBAArB,KAAb,YAAY,EAAZ,aAAgB;AAErB,cAAI,AAAmB,kBAAD;AAC2B,YAA/C,AAAmB,kBAAD,wBAAwB;AACN,YAAP,uBAA7B,AAAmB,kBAAD;;AAEpB,cAAI,AAAmB,AAA6B,kBAA9B,kCAAiC;AACC,YAAtD,AAAmB,kBAAD,gCAAgC;AAKhD,YAJK,4BAAU;;AAGgB,mBAF/B,kBAAkB;cAAlB;AACI,kDAA+B;AAC/B,0CAAuB;;;;;AAGS,UAAX,uBAA7B,AAAmB,kBAAD,kBAAe,MAAM;AACO,UAA9C,qBAAgB,SAAS,EAAE,kBAAkB;;AAGH,UAA1C,qBAAgB,SAAS;;MAE7B;sBAGqC,WAAmB;;AAChD,2BAAe,qBAAgB,SAAS;AAE9C;AAC2D,UAAzC,AAAc,0DAAkB;;AAG9C,2BAAe;AACnB,YAAI,YAAY;AACd,cAAiB,wBAAb,YAAY;AAId,gBAAI,AAAU,SAAD;AACX;;AAGF,qBAAW,6CAAsB,AAAa,YAAD;AAC3C;AACE,qBAAO,AAGN;AAFyB,kBAAxB,8BAAoB;AACpB,wBAAO;;AAE+B,gBAAxC,eAAe,AAAkB,kBAAA,CAAC;;AAElC,qBAAO,AAGN;AAF0B,kBAAzB,8BAAoB;AACpB,wBAAO;;;AAGX,kBAAI,YAAY;AACd;;;;AAIe,YAAnB,eAAe;;;AAInB,YAAI,YAAY;AACmB,UAAjC,AAAU,SAAD;;MAEb;aAGuC;;AACrC,aAAO,AAWN;AAVC,eAAI,AAAO,AAAM,AAAU,mDACvB,AAAU,AAAM,AAAU,SAAjB;AAMf,YALI,WAAM,wBAAW,AAKtB,sBAJM,eAAM;;AAMT,gBAAO;;AAGyB,QAAlC,oCAA8B;AAEkC,QADhE,6BACI,AAAe,wCAAmB,AAAU,AAAM,SAAP;AACxB,QAAjB,aAAO,SAAS;AACM,QAA5B,6BAAuB;MACzB;cAG6B;;AACH,QAAlB,cAAQ,SAAS;AACvB,YAAI;AACsB,UAAxB,mBAAc,SAAS;;MAE3B;;AAIoC,QAAlC,oCAA8B;AACD,QAAvB;MACR;;AAIE,YAAI,AAAO,AAAM,AAAM,6BAAG;AACnB,UAAL;;AAID,QAFD,AAAe,wDACe;AAEK,QAAnC,oCAA8B;AAC9B,YAAI;AAC6B,UAA/B,gCAA0B;AACL,UAArB,mBAAc;;AAEhB,cAAa;MACf;;;AAI0B,QAAxB,AAAe;AACf;AAGqB,UAFH,AAAc,gEAAkB;gEAC3B,AAAc;;gBADa;AAE7C,wBAAO;;;;AAEG,QAAT;MACR;;AAGqB,cAAA,AAAe;MAAQ;;AAI1C,aAAK;AACH;;AAGc,QAAhB;AAC8B,QAA9B,gCAA0B;MAC5B;+BAEiC;AAC/B,aAAO,AAGN;AAF4B,UAA3B,4BAAsB,KAAK;AAC3B,gBAAO;;AAET,cAAO;MACT;;AAGe,cAAA,AAAe;MAAK;+BAIhB;YACT;AAER,aAAO,AA2BN;AA1BC,cAAI;AAuBD,YAtBD,WAAmB,sCACA,kCACf,gCAAY,AACV,2CACA,qDAEF,oCAAiB;;AAkBvB,gBAAO;;AAET,cAAa,gCAAyB,QAAQ,WAAU,MAAM;MAChE;0BAGqD;AACd,QAA/B,0BAAoB,UAAU;AACU,QAA9C,AAAe,yCAAoB,UAAU;MAC/C;;mDA1Q0D;MAKrD,gCAA0B;MAC1B,4BAAsB;MACtB,mCAA6B;MAC7B,6BAAuB;MACvB,oCAA8B;8DACQ;wDAE/B;AAXN,8DAAM,MAAM;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAER,wDAAe;YAAG;;;;;;;;;;;;;;;;;;;;AA6TzB;MAA+B;;;UAlB5B;UACA;UACkB;UAClB;UACA;UACA;MALA;MACA;MAEA;MACA;MACA;YACM,AAAe,MAAT,YAAY,MAAM;MACX,4BAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgC5C,YAAI,uBAAiB;AAMlB,UAJD,WAAM,wBAAU,AACd,4EACA,iEAAqD,oBAAC,wDACnD,OAAY;;AAGb;AACA;AAEN,aAAO,AAMN;AAJqC,UADpC,4CACI;AAEgC,UADpC,4CACI;AACJ,gBAAO;;AAGT,aAAK;AACiB,UAApB,sBAAgB;AAChB,cAAI,AAAS;AACX,iBAAO,2BAAsB;AAC7B;AACE,mBAAO,AAIN;AAHwC,gBAAvC,6CAAmC;AACK,gBAAxC,6CAAmC;AACnC,sBAAO;;AAE0B,cAAnC,iBAAwB,AAAC,eAAhB,AAAS,sBAAe,eAAP;;kBACnB;kBAAG;AAAV;AAKC,gBAJD,mBAAa,iDACF,uBACE,CAAC,SACL,UAAU;AAEZ,gBAAP;;;;AAEA,mBAAO,AAMN;AAJ+C,gBAD9C,6CAC6C,eAAzC,yCAAyC;AAEC,gBAD9C,6CAC6C,eAAzC,yCAAyC;AAC7C,sBAAO;;;AAGX,iBAAO,2BAAsB;AAE7B,iBAAO,AAGN;;AAFuD,qCAAtD,AAAS;2BAAA,OAA4B,GAAY,KAAP;AAC1C,oBAAO;;;AAGX,6CAAI,AAAS;AACX;AACE,mBAAO,AAIN;AAHyC,gBAAxC,6CAAmC;AACI,gBAAvC,6CAAmC;AACnC,sBAAO;;AAEkC,cAA3C,iBAAwB,AAAC,8CAAhB,AAAS,uBAAe,eAAP,eAAU;;AAEpC,mBAAO,AAMN;AAJ+C,gBAD9C,6CAC6C,eAAzC,yCAAyC;AAEC,gBAD9C,6CAC6C,eAAzC,yCAAyC;AAC7C,sBAAO;;;AAIX,iBAAO,AAGN;;AAFuD,qCAAtD,AAAS;2BAAA,OAA4B,GAAY,KAAP;AAC1C,oBAAO;;;;AAK8B,QAApC,AAAE,eAAT,4CAAsC;AACkC,QAAxD,gCAAhB,qEAAoB,AAAS,4CAAA,OAAgB,GAAY,eAAP,eAAiB,KAAP,oBAA5C;AAC0B,QAAnC,AAAE,eAAT,4CAAsC;AACtC,cAA+B,AAAQ,uCAAhC,AAAS,yCAA0B;AAC1C,cAAc,MAAP;MACT;;;AAIiB,QAAT;AACiB,aAAvB;4BAAiB;AACjB,YAAI;AAC2C,iDAA7C,AAAS;wBAAA,OAAS,IAAY,eAAP,eAAiB,KAAP;;MAErC;0BAGqD;;AACd,QAA/B,0BAAoB,UAAU;AACpC,YAAI;AAUC,eATH,UAAU;UAAV;AACI,mBAAI,uCAAoB,SAAS;AACjC,mBACA,iCACE,YACO,AAAgB,6CACT,eACN;;;;AAWb,UAPD,AAAW,UAAD,KACR,iCACE,iBACO,gBACG,cACF;;MAIhB;;;YAG0B;AACpB,2BAAe;AAGnB,YAAI,0BAA0B,IAC1B,sDACA,AAAS;AACL,8BAAgB;AAEhB;AACA;AACN,eAAO,AAMN;AAJqC,YADpC,4CACI;AAEgC,YADpC,4CACI;AACJ,kBAAO;;AAET;AACE,iBAAO,AAIN;AAHyC,cAAxC,6CAAmC;AACI,cAAvC,6CAAmC;AACnC,oBAAO;;AAEuC,YAAhD,iBAAwB,AAAC,8CAAhB,AAAS,uBAAe,eAAP,eAAiB,KAAP;;AAEpC,iBAAO,AAMN;AAJ+C,cAD9C,6CAC6C,eAAzC,yCAAyC;AAEC,cAD9C,6CAC6C,eAAzC,yCAAyC;AAC7C,oBAAO;;;AAIX,oCAAI,AAAS;AAIV,YAHD,eAA2C,AAAC,qCAA7B,AAAS,qCACR,KAAd,aAAa,GACN,KAAP;;AAGoC,YAAtC,eAAsB,aAAP,gBAAU,aAAa;;AAGxC,cAAI,YAAY;AACd,iBAAO,AAGN;;AAFuD,qCAAtD,AAAS;2BAAA,OAA4B,GAAY,KAAP;AAC1C,oBAAO;;AAET,gBAAI;AACgB,cAAH,AAAC,eAAhB;AACsB,cAAtB,wBAAkB;;AAEwC,iBAA5D;wEAAiB,2BAAjB,OAA0B,IAAY,eAAP,eAAwB,KAAd,aAAa;;;AAI1D,YAAI,YAAY;AACyB,UAAhC,AAAE,eAAT,yCAAmC;;AAEX,QAA1B,wBAAkB;AAClB,cAAa,0CAAkC,0BAA0B;MAC3E;;AAGqB;MAAa;;;;;;MAlMpB;MACT,sBAAgB;MAClB;MAC0B;MACR;;;IA+LvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAcuD;AACd,QAA/B,0BAAoB,UAAU;AACe,QAAnD,AAAW,UAAD,KAAK,uCAAoB,SAAS;MAC9C;;AAIE,cAAO;MACT;;;UAlBgB;UACS;UAClB;MAFS;MAET;MACkB,4BAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,QAApC,AAAE,eAAT,4CAAsC;AACqC,QAA3D,gCAAhB,qEAAoB,AAAS,4CAAA,OAAgB,GAAY,eAAP,eAAU,AAAS,wBAArD;AAC0B,QAAnC,AAAE,eAAT,4CAAsC;AACtC,cAA+B,AAAQ,uCAAhC,AAAS,yCAA0B;AAC1C,cAAO,AAAS;MAClB;yBAGmD;;AAC5C;AACL,kCAAI,AAAS;AAIV,UAHD,eAA2C,AAAC,qCAA7B,AAAS,qCACtB,AAAS,qBACT,AAAY,WAAD;;AAGqC,UAAlD,eAAiC,aAAlB,AAAY,WAAD,QAAU,AAAS;;AAG/C,YAAI,YAAY,IAAI;AACA,UAAH,AAAC,eAAhB;AACsB,UAAtB,wBAAkB;;AAEpB,cAAO,aAAY;MACrB;;;AAIiB,QAAT;AACiB,aAAvB;4BAAiB;MACnB;0BAGqD;AACd,QAA/B,0BAAoB,UAAU;AAQnC,QAPD,AAAW,UAAD,KACR,iCACE,YACO,AAAgB,6CACT,eACN;MAGd;;AAGqB;MAAI;;;;;;MAlDX;;;IAmDhB;;;;;;;;;;;;;;;;;;;;qDcj8BS,WACe;AAEtB,QAAI;AACwC,MAAnB,AAAC,eAAxB,mCAAyB,SAAS,EAAE,KAAK;;AAEJ,MAA3B,oBAAU,SAAS,EAAE,KAAK;;EAExC;;AAGE,UAAO,AAAwB,8DAAS;AAElC,cAAmB;AACe,IAAxC,oCAA8B,UAAJ,GAAG;AAC7B,UAAO,IAAG;EACZ;oFd2NqC;;AACjC,UAAc,oCAAP,iCAAsC;AAmB7C,UAAc,AAAiB,gCAAxB,iBAA2B,0CAAiB;AAM7C,2BAA4B;AAClC;AACQ,yBAAQ,gBAAgB,gBAAhB,OAAkB;AAChC,WAAU,KAAN,KAAK;AAC2C,QAAlD,WAAM,wCAAsB,kBAAG,AAAO;;AAGxC,WAAO,AAGN;AAFyB,QAAxB,8BAAoB;AACpB,cAAO;;AAEH,qBAAW,AAAQ,QAAA,CAAC,KAAK;AAE/B,UAAI,gBAAgB;AAWjB,QAVD,+BACE,gBAAgB,WACR,QAAI;AACV,iBAAa,KAAT,QAAQ;AACwC,cAAlD,WAAM,wCAAsB,kBAAG,AAAO;;AAGxC,oBACK,2BAAO,AAAQ,QAAA,CAAC,QAAQ,GAAG,QAAQ;;;AAMqB,QAAjE;;AAEF,YAAO,SAAQ;;AAEf,WAAO,AAGN;AAF0B,QAAzB,8BAAoB;AACpB,cAAO;;;EAGb;;AA/DE,0BAAiC,4DAAjC,QAAQ;EA+DV;;AJoVE,UAAgB,0CAAoB;EACtC;;AAFE;EAEF;;AA2CE,UAAgB;EAClB;;AAFE;EAEF;;MA5pBS,sBAAY;cAAY,kBAAH;;MkBlB7B,iCAAuB;;;;MdgLrB,2BAAiB;YAAG;;;MA2fpB,0CAAgC;YAAG;;;MAInC,0CAAgC;YAAG;;;;;;;;;;;;;;;;;;;;;UgB7mB/B;UACM;UACyC;UAC7B;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,MAAM,WACL,OAAO,sBACI,kBAAkB,8BAGhC,QAAG;;AACD,gBAAS;sCAA4B,OAAQ,KAAK;kCACnD,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAoDA;UACM;UACyB;UACb;UACX;UACN;UACa;UACX;AACL,mDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOA;UACM;UAC8B;UAClB;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOA;UACM;UACkC;UACtB;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOA;UACM;UACsC;UAC1B;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOA;UACM;UAC0C;UAC9B;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOA;UACM;UAC8C;UAClC;UACX;UACN;UACa;UACX;AACL,oDACQ,GAAG,QACF,IAAI,WACD,OAAO,UACR,MAAM,UACN,SAAC,SAAS,UAAU,AAAM,MAAA,CAChC,OAAO,EACE,yBAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACV,0BAAG,OAAO,GACnB,KAAK,oDAEa,kBAAkB,WAC7B,OAAO,SACT,KAAK;;IACb;;;;;;;;;;;;EChTT;;;;;;;;;;;MCiC8B;;;;;;MAQG;;;;;;;;;;;;;;;AAKK;MAAoB;;;UA7BjD;UACS;UACA;UACI;UACV;MAHM;MACA;MAGK,uBAAE,aAAa;AAC9B,+CAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2BhC;;;;;;qBAKgC,SAAiB;;AAC5C,8BAAW,mBAAgB,OAAO,EAAR;AAE1B,oCAEgD,aAFxB,gBAAa,sCACtC,AAAO,wCACiB,AAAC,qCAAtB,AAAO,8BAAsB,KAAN,aAAY,QAAQ,KACxB,sBAAtB,AAAO,yCAC4B,2BAAO,YAAO,QAAQ;AAC9D,YAAI,qBAAqB;AACP,UAAhB,aAAQ,QAAQ;AACE,UAAlB,iBAAY;AAKX,UAJD,qBAAQ,oBACN,OAAO,QACP,QAAQ,QACR,KAAK,EAHe,4CAAP;;AAMjB,cAAY,gBAAL;MACT;0BAGqD;AACd,QAA/B,0BAAoB,UAAU;AACkB,QAAtD,AAAW,UAAD,KAAK,uCAAuB,SAAS;MACjD;;;;;;MA7BG;MACK;MACA;;;IA4BV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA2CS;UAC0B;UACM;UACnB;UACV;AACL,8CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAAC,OAAO,EAAW,yBAAG,OAAO,mCACrD,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAOA;UAC0B;UACS;UACtB;UACV;AACL,+CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAC7B,OAAO,EACE,yBAAG,OAAO,GACV,yBAAG,OAAO,mCAEd,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAOA;UAC0B;UACY;UACzB;UACV;AACL,+CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAC7B,OAAO,EACE,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,mCAEd,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAOA;UAC0B;UACe;UAC5B;UACV;AACL,+CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAC7B,OAAO,EACE,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,mCAEd,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAOA;UAC0B;UACkB;UAC/B;UACV;AACL,+CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAC7B,OAAO,EACE,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,mCAEd,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;UAOA;UAC0B;UACqB;UAClC;UACV;AACL,+CACQ,GAAG,iBACO,aAAa,WACnB,OAAO,YACN,QAAC,WAAY,AAAQ,QAAA,CAC7B,OAAO,EACE,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,GACV,yBAAG,OAAO,mCAEd,KAAK;;IACb;;;;;;;;;;;;;;;;;;;;;;;;;qBClO4B,SAAiB;AAClD,cAAO,6DACY,iCACR,SAAC,SAAS,OAAO,MACjB,sCACE,KAAK,sBACQ,mCACb,KAAK;MAIpB;0BAGqD;AACd,QAA/B,0BAAoB,UAAU;AACgC,QAApE,AAAW,UAAD,KAAK,uCAAoB,SAAS,AAAiB;MAC/D;;;UA7BO;UACuB;UACL;UACf;MACa,yBAAE,KAAK;MACJ,6BAAE,kBAAkB;AACxC,6DAAW,GAAG,SAAS,KAAK;;IAAC;;;;;;;;;;;;;;;;;;;qEJk4JI;;;;;;;;;;AvB90JlB,YAAa,kBAAP;IAAgB;;;AAM5B;AACT,sBAAkC,2CAAvB,OAAS,oBAAT,eAA0B,AAAO;AAEhD,eAAW,QAAS,AAAO,AAAU;AAKlC,QAJD,WAAW,aAAa,mCACf,qBACQ,KAAK,iBACL,QAAQ;;AAI3B,UAAI,UAAU;AAIZ,iBAAW,OAAQ;AAG2B,kBAF5C,IAAI;UAAJ;AACI,iCAAyB,AAAE,eAAZ,UAAU;AACzB,kCAAgB,AAAW,UAAD;;;AAExB,qBAAO,AAAW,UAAD;AACvB,cAAS,sBAAL,IAAI;AACW,YAAjB,aAAa,IAAI;;AAEjB;;;;AAKN,YAAe,gBAAR,QAAQ;IACjB;;wCAvCsB;IAKhB,aAA4B;AALF,mDAAM,MAAM;;EAAC;;;;;;;;;;;;;;;;;;;;AAsDP,+CAAmB;IAAK;UAGpC;AAAY,wBAAM,wBAAW;IAAqB;;;QAbrE;QACS;QACA;IAFT;IACS;IACA;AAHhB;;EAIE;;;;;;;;;;;;;;;;;;;;;;AAiBwB,YAAa,uBAAP;IAAqB;;AAGxB;IAAc;sBACjB;AAClB,qBAAW;AACjB,UAAU,sBAAN,KAAK,KACI,sBAAT,QAAQ,KACD,2BAAU,AAAM,KAAD,gBAAgB,AAAS,QAAD;AAGhD;;AAEF,uBAAI,QAAQ,EAAI,KAAK;AACG,QAAtB,uBAAiB,KAAK;AACkB,QAAxC,mBAAc,QAAC,KAAM,AAAE,CAAD;;IAE1B;;AAGuC;IAAa;qBAChB;AAClC,uBAAI,qBAAiB,KAAK;AACH,QAArB,sBAAgB,KAAK;AACL,QAAhB;;IAEJ;UAGoB,QAAgB;AACN,MAA5B,AAAO,AAAM,AAAM,4BAAI;AACa,MAApC,sBAAgB,AAAO;AACc,MAArC,uBAAiB,AAAO;AACI,MAAtB,YAAM,MAAM,EAAE,OAAO;IAC7B;;AAIiC,MAA/B,AAAO,AAAM,AAAM,+BAAO;AACX,MAAT;IACR;;AAIE,YAAmB,gBAAZ;IACT;;4CAhD+B;IAKvB;IAiBW;AAtBsB,uDAAM,MAAM;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6DxD;;;;;;mEuBuuJiC;;;;;;;;;;AvBnnJ3B,YAAa,qCAAP;IAAmC;;AAIzC,YAAY,qDAAN;IAAoD;;AAI5D,UAAI;AACF,cAAO,AAAM,2BAAe,MAA4B,eAAf,AAAE,eAAT;;AAEpC,YAAa;IACf;;oDAhBqD;AAAU,+DAAM,MAAM;;EAAC;;;;;;;;;;;IAiCjB;;;;;;;;;;;;mBAGxB,SAAiB;;AAClD,YAAe,OAAO;YAAE,KAAK;YAAtB,AAAO;IAChB;;;QAZ+B;QAAmB;QAAiB;IAAjB;AAC5C,6DAAW,GAAG,SAAS,KAAK;;EAAC;;;;;;;;;;;;;;;AAmBb;IAAK;;AAIzB,YAAO,4CAA4B;IACrC;UAG0B;AACxB,YAAO,qBAAe,OAAO,EAAE;IACjC;;;;;;;;;;;;;;;;;;;;AASI,6DAAiC;IAAK;;;;;;;;;;;;;;YAOhB;AACxB,cAAO,qBACL,OAAO,EACyC,eAAxC,AAAmC,yCAA1C;MAEL;;;;;;;;;;;;;;;;oEuB0iJ+B;;;;;;;;;;AvBhiJ3B,YAAa,0CAAP;IAAwC;;AAI9C,YAAY,+CAAN;IAA8C;;AAItD,UAAI;AACF,cAAO,AAAM,2BAAe,MAA4B,eAAf,AAAE,eAAT;;AAEpC,YAAa;IACf;;0DAjBgE;AAC1D,qEAAM,MAAM;;EAAC;;;;;;;;;;;;AAuBjB,UAAI;AACF,cAA6B,gBAAf,AAAE,eAAT;;AAET,YAAa;IACf;;;;;;;;;;yC4B3auB;;QACb;QAAY;QAAwB;AAC9C,UAAW,yCACC,QAAQ,UACL,MAAN,KAAK,EAAL,cAAS,oCACJ,MAAM,GAAc,qBAAkB,oBAAhC,cACN,QAAQ;EAExB;;AAKI,UAAO,8BACE;EAEX","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__configs__x_configs: x_configs,
    zapp__project__lib__modules__dashboard__x_dashboards: x_dashboards,
    zapp__project__lib__configs__colors: colors$0,
    zapp__project__lib__configs__constants: constants,
    zapp__project__lib__configs__durations: durations,
    zapp__project__lib__configs__keys: keys,
    zapp__project__lib__configs__sizes: sizes,
    zapp__project__lib__configs__styles: styles,
    zapp__project__lib__configs__themes: themes,
    zapp__project__lib__modules__dashboard__controllers__grocery_bloc: grocery_bloc,
    zapp__project__lib__modules__dashboard__models__grocery_mdl: grocery_mdl,
    zapp__project__lib__modules__dashboard__pages__dashboard_pg: dashboard_pg,
    flutter_bloc: flutter_bloc,
    configs__x_configs: x_configs$,
    modules__dashboard__x_dashboards: x_dashboards$,
    widgets__x_widgets: x_widgets,
    bloc: bloc,
    provider: provider,
    src__bloc_builder: bloc_builder,
    src__bloc_consumer: bloc_consumer,
    src__bloc_listener: bloc_listener,
    src__bloc_provider: bloc_provider,
    src__bloc_selector: bloc_selector,
    src__multi_bloc_listener: multi_bloc_listener,
    src__multi_bloc_provider: multi_bloc_provider,
    src__multi_repository_provider: multi_repository_provider,
    src__repository_provider: repository_provider,
    configs__colors: colors$1,
    configs__constants: constants$,
    configs__durations: durations$,
    configs__keys: keys$,
    configs__sizes: sizes$,
    configs__styles: styles$,
    configs__themes: themes$,
    modules__dashboard__controllers__grocery_bloc: grocery_bloc$,
    modules__dashboard__models__grocery_mdl: grocery_mdl$,
    modules__dashboard__pages__dashboard_pg: dashboard_pg$,
    widgets__button_wdg: button_wdg,
    src__bloc: bloc$,
    src__bloc_observer: bloc_observer,
    src__change: change,
    src__cubit: cubit,
    src__transition: transition,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    single_child_widget: single_child_widget,
    helpers__x_helpers: x_helpers,
    nested: nested,
    helpers__widgets_hlp: widgets_hlp
  };
}));

//# sourceMappingURL=main.js.map
